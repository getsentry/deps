#!/usr/bin/env python3
import csv
import json
from collections import defaultdict


github = json.load(open('github.json'))
details = defaultdict(list)
deps = csv.reader(open('deps.csv'))
platforms = csv.reader(open('platforms.csv'))
submissions = csv.reader(open('submissions.csv'))
prev = csv.reader(open('prev.csv'))
next(deps); next(platforms); next(submissions); next(prev) # toss headers

ECO, USED_IN, NPROJECTS, NVOTES, PLATFORM, PREV = range(6)

def get_deets(url, eco=None):
    if url not in details:
        details[url] = ['',set(),0,0,0,0]  # eco, used_in, nprojects, nvotes, platform, prev
        if eco:
            details[url][ECO] = eco
    if eco and eco != details[url][ECO]:
        print(url, eco, details[url][ECO])
        import pdb; pdb.set_trace()
        raise SystemExit
    return details[url]

for org, sponsorable, url, repo, stargazers, eco in deps:
    deets = get_deets(url, eco)
    deets[NPROJECTS] += 1
    deets[USED_IN].update(sorted(list(set([x.split('/')[0] for x in github[eco][org][repo]]))))

for eco, project, weight, url in platforms:
    get_deets(url, eco)[PLATFORM] += int(weight)

for ineligible, nvotes, url, eco, number in submissions:
    if ineligible:
        continue
    get_deets(url, eco)[NVOTES] += int(nvotes)

for url, eco, amount in prev:
    get_deets(url, eco)[PREV] = amount

for url, v in details.items():
    details[url][USED_IN] = len(v[USED_IN])

ecos = ['py', 'js', 'rs', 'rb', 'php', 'java', 'go', 'o']
rows = []
ECO_ORDER, SCORE = 0, 3
for url, v in details.items():
    numerics = v[USED_IN:PLATFORM+1]
    rows.append([ecos.index(v[ECO]), v[ECO], url, sum(numerics)] + numerics + [v[PREV]])
rows.sort(key=lambda row: (row[ECO_ORDER], -row[SCORE]))

out = csv.writer(open('details.csv', 'w+'))
out.writerow('eco_order eco url score nused_in nprojects nvotes platform_weight prev'.split())
out.writerows(rows)
