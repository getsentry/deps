{"analyzedAt":"2021-08-02T11:55:12.395Z","collected":{"metadata":{"name":"oauth2-implicit","scope":"unscoped","version":"0.7.0","description":"A minimal oauth2-spec-based client utility for traveling through the OAuth2 Implicit Grant flow","date":"2016-03-07T18:30:44.110Z","author":{"name":"Jason Kuhrt","email":"jasonkuhrt@me.com","url":"http://jasonkuhrt.com/","username":"jasonkuhrt"},"publisher":{"username":"jasonkuhrt","email":"jasonkuhrt@me.com"},"maintainers":[{"username":"jasonkuhrt","email":"jasonkuhrt@me.com"}],"repository":{"url":"git+https://github.com/jasonkuhrt/oauth2-implicit.git","type":"git"},"links":{"npm":"https://www.npmjs.com/package/oauth2-implicit","homepage":"https://github.com/jasonkuhrt/oauth2-implicit","repository":"https://github.com/jasonkuhrt/oauth2-implicit","bugs":"https://github.com/jasonkuhrt/oauth2-implicit/issues"},"license":"MIT","dependencies":{"object.assign":"^4.0.1","qs":"^2.3.3"},"devDependencies":{"babel":"^5.8.23","babel-core":"^5.8.25","babel-loader":"^5.3.2","chai":"^3.3.0","coffee-loader":"^0.7.2","coffee-script":"^1.8.0","eslint-config-littlebits":"^0.2.1","karma":"^0.13.10","karma-chrome-launcher":"^0.2.0","karma-mocha":"^0.2.0","karma-mocha-reporter":"^1.1.1","karma-phantomjs-launcher":"^0.2.1","karma-safari-launcher":"^0.1.1","karma-sauce-launcher":"^0.2.14","karma-webpack":"^1.7.0","phantomjs":"^1.9.18","webpack":"^1.12.2"},"releases":[{"from":"2021-07-03T00:00:00.000Z","to":"2021-08-02T00:00:00.000Z","count":0},{"from":"2021-05-04T00:00:00.000Z","to":"2021-08-02T00:00:00.000Z","count":0},{"from":"2021-02-03T00:00:00.000Z","to":"2021-08-02T00:00:00.000Z","count":0},{"from":"2020-08-02T00:00:00.000Z","to":"2021-08-02T00:00:00.000Z","count":0},{"from":"2019-08-03T00:00:00.000Z","to":"2021-08-02T00:00:00.000Z","count":0}],"hasTestScript":true,"readme":":toc: macro\n:toc-title:\n:toclevels: 99\n\n# oauth2-implicit\n\nimage:https://travis-ci.org/jasonkuhrt/oauth2-implicit.svg?branch=master[\"Build Status\", link=\"https://travis-ci.org/jasonkuhrt/oauth2-implicit\"]\n\ntoc::[]\n\n\n\n\n## Installation\n```\nnpm --save install oauth2-implicit\n```\n\n\n\n## Example\n```js\nimport authorize from 'oauth2-implicit'\n\n\n\nconst credentials = authorize({\n  auth_uri: 'https://littlebitscloud.cc/oauth/authorize'\n  client_id: 'cloudbit-visualizer',\n  scope: ['read'],\n  state: {\n    location: window.location\n  },\n})\n```\n\n\n\n## API\n\n### `run` `default`\n\n```haskell\nrun :: Options -> Credentials\n```\n\nConvenience function that orchestrates <<start, `start`>>/<<finish, `finish`>>.\n\n#### `Options`\nSee <<start-options, `start` docs>>.\n\n\n#### `Credentials`\nSee <<finish-credentials, `finish` docs >>.\n\n\n\n\n### `start`\n```haskell\nstart :: Options -> Null\n```\n\nMake an Implicit Grant Flow request to the Authorization Service. _This function navigates the User away from Client and to the Authorization Service_. Use <<finish, `finish`>> to handle the redirect back to Client from Authorization Service.\n\n[[start-options]]\n#### `Options`\n```haskell\nauth_uri     :: String\nclient_id    :: String\n-- Optional Fields\nscope        :: [String]\nredirect_uri :: String\nstate        :: {*}\n```\n\nConfigure aspects of the Implicit Grant Flow.\n\n##### `auth_uri :: String`\nThe location of the Authorization Service that the Client will run the flow against.\n\n##### `client_id :: String`\nThe unique identification for this Client. The Authorization Service requires this information from clients trying to run this flow. Every Client who has beforehand registered with the Authorization Service should have this information (it is created during registration time).\n\n##### `scope :: [String]`\nThe scope that Client will use in its request to Authorization Server.\n\nScopes will be joined by `+` when serialized into the query params. Authorization servers should accept this format (DoorKeeper ruby does) but please open an issue if you discover otherwise.\n\n##### `redirect_uri :: String` `optional`\nThe location that Client would like Authorization Service to finish the flow at. The given value must match a URI that was provided to the Authorization Service at registration time.\n\nDefaults to the current protocol plus host (which is what you usually want), examples:\n\n[options=\"header\"]\n|===\n| Current Location | Inferred `redirect_uri`\n| `http://foo.bar.io:8000/qux#wux` | `http:/foo.bar.io:8000`\n| `https://foo.bar.io?lop=mop` | `https://foo.bar.io`\n|===\n\n##### `state :: {*}` `optional`\nArbitrary Client data that Authorization Server will pass back to Client in the response phase (redirect to the redirect_uri). For details on state see the link:http://tools.ietf.org/html/rfc6749#section-4.1.1[specification].\n\n\n### `finish`\n```haskell\nfinish :: -> Credentials | Null\n```\n\nClear the credentials from the URI Hash (as put there by the Authorization Service during redirection) and return them.\n\nIf no credentials are found `null` is returned instead.\n\n[[finish-credentials]]\n#### `Credentials`\n```haskell\naccessToken :: String\ntokenType   :: String\nexpiresIn   :: Number | Null\nscope       :: [String]\nstate       :: {*}\n```\n\n\n\n\n## Notes\n\nThis library is designed in accordance with Implicit Grant flow as specified in the link:http://tools.ietf.org/html/rfc6749#section-4.2[OAuth2 specification (RFC 6749)]."},"npm":{"downloads":[{"from":"2021-08-01T00:00:00.000Z","to":"2021-08-02T00:00:00.000Z","count":2},{"from":"2021-07-26T00:00:00.000Z","to":"2021-08-02T00:00:00.000Z","count":13},{"from":"2021-07-03T00:00:00.000Z","to":"2021-08-02T00:00:00.000Z","count":92},{"from":"2021-05-04T00:00:00.000Z","to":"2021-08-02T00:00:00.000Z","count":255},{"from":"2021-02-03T00:00:00.000Z","to":"2021-08-02T00:00:00.000Z","count":538},{"from":"2020-08-02T00:00:00.000Z","to":"2021-08-02T00:00:00.000Z","count":1641}],"dependentsCount":0,"starsCount":0},"github":{"starsCount":4,"forksCount":2,"subscribersCount":1,"issues":{"count":26,"openCount":1,"distribution":{"3600":2,"10800":2,"32400":2,"97200":2,"291600":0,"874800":6,"2624400":4,"7873200":4,"23619600":2,"70858800":1,"212576400":1},"isDisabled":false},"contributors":[{"username":"jasonkuhrt","commitsCount":96},{"username":"baumannzone","commitsCount":1}],"commits":[{"from":"2021-07-26T00:00:00.000Z","to":"2021-08-02T00:00:00.000Z","count":0},{"from":"2021-07-03T00:00:00.000Z","to":"2021-08-02T00:00:00.000Z","count":0},{"from":"2021-05-04T00:00:00.000Z","to":"2021-08-02T00:00:00.000Z","count":0},{"from":"2021-02-03T00:00:00.000Z","to":"2021-08-02T00:00:00.000Z","count":0},{"from":"2020-08-02T00:00:00.000Z","to":"2021-08-02T00:00:00.000Z","count":0}],"statuses":[{"context":"continuous-integration/travis-ci/push","state":"success"}]},"source":{"files":{"readmeSize":3413,"testsSize":3711,"hasNpmIgnore":true},"badges":[{"urls":{"original":"https://travis-ci.org/jasonkuhrt/oauth2-implicit.svg?branch=master[","service":"https://api.travis-ci.org/jasonkuhrt/oauth2-implicit.svg?branch=master[","shields":"https://img.shields.io/travis/jasonkuhrt/oauth2-implicit/master[.svg","content":"https://img.shields.io/travis/jasonkuhrt/oauth2-implicit/master[.json"},"info":{"service":"travis","type":"build","modifiers":{"branch":"master["}}}],"linters":["eslint"],"outdatedDependencies":{"qs":{"required":"^2.3.3","stable":"6.10.1","latest":"6.10.1"}}}},"evaluation":{"quality":{"carefulness":0.45999999999999996,"tests":0.85,"health":0.75,"branding":0.15},"popularity":{"communityInterest":9,"downloadsCount":85,"downloadsAcceleration":-0.7340563165905633,"dependentsCount":0},"maintenance":{"releasesFrequency":0,"commitsFrequency":0,"openIssues":1,"issuesDistribution":0.2601536245872182}},"score":{"final":0.41195875971859147,"detail":{"quality":0.8617009531355073,"popularity":0.031107503115625483,"maintenance":0.40731670767848693}}}