{"analyzedAt":"2021-08-15T06:32:43.241Z","collected":{"metadata":{"name":"css-minimizer-webpack-plugin","scope":"unscoped","version":"3.0.2","description":"cssnano plugin for Webpack","keywords":["cssnano","css","webpack","webpack-plugin","minimize","minimizer","minify","minifier","optimize","optimizer"],"date":"2021-06-25T11:45:22.132Z","author":{"name":"Loann Neveu"},"publisher":{"username":"evilebottnawi","email":"sheo13666q@gmail.com"},"maintainers":[{"username":"evilebottnawi","email":"sheo13666q@gmail.com"},{"username":"sokra","email":"tobias.koppers@googlemail.com"},{"username":"jhnns","email":"mail@johannesewald.de"},{"username":"michael-ciniawsky","email":"michael.ciniawsky@gmail.com"},{"username":"d3viant0ne","email":"wiens.joshua@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/webpack-contrib/css-minimizer-webpack-plugin.git"},"links":{"npm":"https://www.npmjs.com/package/css-minimizer-webpack-plugin","homepage":"https://github.com/webpack-contrib/css-minimizer-webpack-plugin","repository":"https://github.com/webpack-contrib/css-minimizer-webpack-plugin","bugs":"https://github.com/webpack-contrib/css-minimizer-webpack-plugin/issues"},"license":"MIT","dependencies":{"cssnano":"^5.0.6","jest-worker":"^27.0.2","p-limit":"^3.0.2","postcss":"^8.3.5","schema-utils":"^3.0.0","serialize-javascript":"^6.0.0","source-map":"^0.6.1"},"devDependencies":{"@babel/cli":"^7.14.5","@babel/core":"^7.14.6","@babel/preset-env":"^7.14.7","@commitlint/cli":"^12.1.4","@commitlint/config-conventional":"^12.1.4","@webpack-contrib/eslint-config-webpack":"^3.0.0","babel-jest":"^27.0.5","clean-css":"^5.1.2","copy-webpack-plugin":"^9.0.0","cross-env":"^7.0.3","css-loader":"^5.2.6","cssnano-preset-simple":"^2.0.0","csso":"^4.2.0","del":"^6.0.0","del-cli":"^4.0.0","eslint":"^7.29.0","eslint-config-prettier":"^8.3.0","eslint-plugin-import":"^2.23.4","husky":"^6.0.0","jest":"^27.0.5","lint-staged":"^11.0.0","memfs":"^3.2.2","mini-css-extract-plugin":"^1.6.0","npm-run-all":"^4.1.5","prettier":"^2.3.1","sass":"^1.35.1","sass-loader":"^12.1.0","standard-version":"^9.3.0","sugarss":"^4.0.1","webpack":"^5.40.0"},"peerDependencies":{"webpack":"^5.0.0"},"releases":[{"from":"2021-07-16T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":0},{"from":"2021-05-17T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":3},{"from":"2021-02-16T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":6},{"from":"2020-08-15T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":11},{"from":"2019-08-16T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":15}],"hasTestScript":true,"hasSelectiveFiles":true,"readme":"<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![cover][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# css-minimizer-webpack-plugin\n\nThis plugin uses [cssnano](https://cssnano.co) to optimize and minify your CSS.\n\nJust like [optimize-css-assets-webpack-plugin](https://github.com/NMFR/optimize-css-assets-webpack-plugin) but more accurate with source maps and assets using query string, allows to cache and works in parallel mode.\n\n## Getting Started\n\nTo begin, you'll need to install `css-minimizer-webpack-plugin`:\n\n```console\n$ npm install css-minimizer-webpack-plugin --save-dev\n```\n\nThen add the plugin to your `webpack` configuration. For example:\n\n**webpack.config.js**\n\n```js\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\nconst CssMinimizerPlugin = require('css-minimizer-webpack-plugin');\n\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /.s?css$/,\n        use: [MiniCssExtractPlugin.loader, 'css-loader', 'sass-loader'],\n      },\n    ],\n  },\n  optimization: {\n    minimizer: [\n      // For webpack@5 you can use the `...` syntax to extend existing minimizers (i.e. `terser-webpack-plugin`), uncomment the next line\n      // `...`,\n      new CssMinimizerPlugin(),\n    ],\n  },\n};\n```\n\nThis will enable CSS optimization only in production mode.\n\nIf you want to run it also in development set the `optimization.minimize` option to `true`:\n\n**webpack.config.js**\n\n```js\n// [...]\nmodule.exports = {\n  optimization: {\n    // [...]\n    minimize: true,\n  },\n};\n```\n\nAnd run `webpack` via your preferred method.\n\n## Note about source maps\n\n**Works only with `source-map`, `inline-source-map`, `hidden-source-map` and `nosources-source-map` values for the [`devtool`](https://webpack.js.org/configuration/devtool/) option.**\n\nWhy? Because CSS support only these source map types.\n\nThe plugin respect the [`devtool`](https://webpack.js.org/configuration/devtool/) and using the `SourceMapDevToolPlugin` plugin.\nUsing supported `devtool` values enable source map generation.\nUsing `SourceMapDevToolPlugin` with enabled the `columns` option enables source map generation.\n\nUse source maps to map error message locations to modules (this slows down the compilation).\nIf you use your own `minify` function please read the `minify` section for handling source maps correctly.\n\n## Options\n\n### `test`\n\nType: `String|RegExp|Array<String|RegExp>` - default: `/\\.css(\\?.*)?$/i`\n\nTest to match files against.\n\n```js\nmodule.exports = {\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        test: /\\.foo\\.css$/i,\n      }),\n    ],\n  },\n};\n```\n\n### `include`\n\nType: `String|RegExp|Array<String|RegExp>`\nDefault: `undefined`\n\nFiles to include.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        include: /\\/includes/,\n      }),\n    ],\n  },\n};\n```\n\n### `exclude`\n\nType: `String|RegExp|Array<String|RegExp>`\nDefault: `undefined`\n\nFiles to exclude.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        exclude: /\\/excludes/,\n      }),\n    ],\n  },\n};\n```\n\n### `parallel`\n\nType: `Boolean|Number`\nDefault: `true`\n\nUse multi-process parallel running to improve the build speed.\nDefault number of concurrent runs: `os.cpus().length - 1`.\n\n> ℹ️ Parallelization can speedup your build significantly and is therefore **highly recommended**.\n> If a parallelization is enabled, the packages in `minimizerOptions` must be required via strings (`packageName` or `require.resolve(packageName)`). Read more in [`minimizerOptions`](#minimizerOptions)\n\n#### `Boolean`\n\nEnable/disable multi-process parallel running.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        parallel: true,\n      }),\n    ],\n  },\n};\n```\n\n#### `Number`\n\nEnable multi-process parallel running and set number of concurrent runs.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        parallel: 4,\n      }),\n    ],\n  },\n};\n```\n\n### `minify`\n\nType: `Function|Array<Function>`\nDefault: `CssMinimizerPlugin.cssnanoMinify`\n\nAllows to override default minify function.\nBy default plugin uses [cssnano](https://github.com/cssnano/cssnano) package.\nUseful for using and testing unpublished versions or forks.\n\nPossible options:\n\n- CssMinimizerPlugin.cssnanoMinify\n- CssMinimizerPlugin.cssoMinify\n- CssMinimizerPlugin.cleanCssMinify\n- async (data, inputMap, minimizerOptions) => {return {code: `a{color: red}`, map: `...`, warnings: []}}\n\n> ⚠️ **Always use `require` inside `minify` function when `parallel` option enabled**.\n\n#### `Function`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        minimizerOptions: {\n          level: {\n            1: {\n              roundingPrecision: 'all=3,px=5',\n            },\n          },\n        },\n        minify: CssMinimizerPlugin.cleanCssMinify,\n      }),\n    ],\n  },\n};\n```\n\n#### `Array`\n\nIf an array of functions is passed to the `minify` option, the `minimizerOptions` must also be an array.\nThe function index in the `minify` array corresponds to the options object with the same index in the `minimizerOptions` array.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        minimizerOptions: [\n          {}, // Options for the first function (CssMinimizerPlugin.cssnanoMinify)\n          {}, // Options for the second function (CssMinimizerPlugin.cleanCssMinify)\n          {}, // Options for the third function\n        ],\n        minify: [\n          CssMinimizerPlugin.cssnanoMinify,\n          CssMinimizerPlugin.cleanCssMinify,\n          async (data, inputMap, minimizerOptions) => {\n            // To do something\n            return {\n              code: `a{color: red}`,\n              map: `{\"version\": \"3\", ...}`,\n              warnings: [],\n            };\n          },\n        ],\n      }),\n    ],\n  },\n};\n```\n\n### `minimizerOptions`\n\nType: `Object|Array<Object>`\nDefault: `{ preset: 'default' }`\n\nCssnano optimisations [options](https://cssnano.co/docs/optimisations).\n\n#### `Object`\n\n```js\nmodule.exports = {\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        minimizerOptions: {\n          preset: [\n            'default',\n            {\n              discardComments: { removeAll: true },\n            },\n          ],\n        },\n      }),\n    ],\n  },\n};\n```\n\n#### `Array`\n\nThe function index in the `minify` array corresponds to the options object with the same index in the `minimizerOptions` array.\nIf you use `minimizerOptions` like object, all `minify` function accept it.\n\n> If a parallelization is enabled, the packages in `minimizerOptions` must be required via strings (`packageName` or `require.resolve(packageName)`). In this case, we shouldn't use `require`/`import`.\n\n```js\nmodule.exports = {\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        minimizerOptions: {\n          preset: require.resolve('cssnano-preset-simple'),\n        },\n      }),\n    ],\n  },\n};\n```\n\n#### `processorOptions`\n\nType: `Object`\nDefault: `{ to: assetName, from: assetName }`\n\nAllows to specify options [`processoptions`](https://postcss.org/api/#processoptions) for the cssnano.\nThe `parser`,` stringifier` and `syntax` can be either a function or a string indicating the module that will be imported.\n\n> ⚠️ **If a function is passed, the `parallel` option must be disabled.**.\n\n```js\nimport sugarss from 'sugarss';\n\nmodule.exports = {\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        parallel: false,\n        minimizerOptions: {\n          processorOptions: {\n            parser: sugarss,\n          },\n        },\n      }),\n    ],\n  },\n};\n```\n\n```js\nmodule.exports = {\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        minimizerOptions: {\n          processorOptions: {\n            parser: 'sugarss',\n          },\n        },\n      }),\n    ],\n  },\n};\n```\n\n### `warningsFilter`\n\nType: `Function<(warning, file, source) -> Boolean>`\nDefault: `() => true`\n\nAllow to filter css-minimizer warnings (By default [cssnano](https://github.com/cssnano/cssnano)).\nReturn `true` to keep the warning, a falsy value (`false`/`null`/`undefined`) otherwise.\n\n> ⚠️ The `source` argument will contain `undefined` if you don't use source maps.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        warningsFilter: (warning, file, source) => {\n          if (/Dropping unreachable code/i.test(warning)) {\n            return true;\n          }\n\n          if (/file\\.css/i.test(file)) {\n            return true;\n          }\n\n          if (/source\\.css/i.test(source)) {\n            return true;\n          }\n\n          return false;\n        },\n      }),\n    ],\n  },\n};\n```\n\n## Examples\n\n### Use sourcemaps\n\nDon't forget to enable `sourceMap` options for all loaders.\n\n```js\nconst CssMinimizerPlugin = require('css-minimizer-webpack-plugin');\n\nmodule.exports = {\n  devtool: 'source-map',\n  module: {\n    loaders: [\n      {\n        test: /.s?css$/,\n        use: [\n          MiniCssExtractPlugin.loader,\n          { loader: 'css-loader', options: { sourceMap: true } },\n          { loader: 'sass-loader', options: { sourceMap: true } },\n        ],\n      },\n    ],\n  },\n  optimization: {\n    minimizer: [new CssMinimizerPlugin()],\n  },\n};\n```\n\n### Remove all comments\n\nRemove all comments (including comments starting with `/*!`).\n\n```js\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new CssMinimizerPlugin({\n        minimizerOptions: {\n          preset: [\n            'default',\n            {\n              discardComments: { removeAll: true },\n            },\n          ],\n        },\n      }),\n    ],\n  },\n};\n```\n\n### Using custom minifier [csso](https://github.com/css/csso)\n\nBy default plugin uses [cssnano](https://github.com/cssnano/cssnano) package.\nIt is possible to use another minify function.\n\n> ⚠️ **Always use `require` inside `minify` function when `parallel` option enabled**.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  devtool: 'source-map',\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        minify: async (data, inputMap) => {\n          const csso = require('csso');\n          const sourcemap = require('source-map');\n\n          const [[filename, input]] = Object.entries(data);\n          const minifiedCss = csso.minify(input, {\n            filename: filename,\n            sourceMap: true,\n          });\n\n          if (inputMap) {\n            minifiedCss.map.applySourceMap(\n              new sourcemap.SourceMapConsumer(inputMap),\n              filename\n            );\n          }\n\n          return {\n            code: minifiedCss.css,\n            map: minifiedCss.map.toJSON(),\n          };\n        },\n      }),\n    ],\n  },\n};\n```\n\n### Using custom minifier [clean-css](https://github.com/jakubpawlowicz/clean-css)\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  devtool: 'source-map',\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        minify: CssMinimizerPlugin.cleanCssMinify,\n        // Uncomment this line for options\n        // minimizerOptions: { compatibility: 'ie11,-properties.merging' },\n      }),\n    ],\n  },\n};\n```\n\n### Using custom minifier [csso](https://github.com/css/csso)\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  devtool: 'source-map',\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        minify: CssMinimizerPlugin.cssoMinify,\n        // Uncomment this line for options\n        // minimizerOptions: { restructure: false },\n      }),\n    ],\n  },\n};\n```\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/css-minimizer-webpack-plugin.svg\n[npm-url]: https://npmjs.com/package/css-minimizer-webpack-plugin\n[node]: https://img.shields.io/node/v/css-minimizer-webpack-plugin.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/css-minimizer-webpack-plugin.svg\n[deps-url]: https://david-dm.org/webpack-contrib/css-minimizer-webpack-plugin\n[tests]: https://github.com/webpack-contrib/css-minimizer-webpack-plugin/workflows/css-minimizer-webpack-plugin/badge.svg\n[tests-url]: https://github.com/webpack-contrib/css-minimizer-webpack-plugin/actions\n[cover]: https://codecov.io/gh/webpack-contrib/css-minimizer-webpack-plugin/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/css-minimizer-webpack-plugin\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=css-minimizer-webpack-plugin\n[size-url]: https://packagephobia.now.sh/result?p=css-minimizer-webpack-plugin"},"npm":{"downloads":[{"from":"2021-08-14T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":40275},{"from":"2021-08-08T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":1060187},{"from":"2021-07-16T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":4143217},{"from":"2021-05-17T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":10815146},{"from":"2021-02-16T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":14559866},{"from":"2020-08-15T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":15545487}],"dependentsCount":270,"starsCount":0},"github":{"starsCount":137,"forksCount":20,"subscribersCount":11,"issues":{"count":116,"openCount":5,"distribution":{"3600":44,"10800":11,"32400":10,"97200":15,"291600":10,"874800":7,"2624400":7,"7873200":6,"23619600":5,"70858800":1,"212576400":0},"isDisabled":false},"contributors":[{"username":"alexandruandrei91","commitsCount":1},{"username":"rschristian","commitsCount":1},{"username":"snitin315","commitsCount":11},{"username":"alexander-akait","commitsCount":23},{"username":"mbertheau","commitsCount":1},{"username":"0atman","commitsCount":1},{"username":"ludofischer","commitsCount":1},{"username":"lneveu","commitsCount":10},{"username":"krfisc88","commitsCount":1},{"username":"cap-Bernardito","commitsCount":38},{"username":"anshumanv","commitsCount":1},{"username":"thijstriemstra","commitsCount":1},{"username":"eFrane","commitsCount":1}],"commits":[{"from":"2021-08-08T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":2},{"from":"2021-07-16T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":8},{"from":"2021-05-17T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":20},{"from":"2021-02-16T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":42},{"from":"2020-08-15T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":68}],"statuses":[{"context":"codecov/patch","state":"success"},{"context":"codecov/project","state":"success"}]},"source":{"files":{"readmeSize":13589,"testsSize":163666,"hasChangelog":true},"badges":[{"urls":{"original":"https://img.shields.io/npm/v/css-minimizer-webpack-plugin.svg","shields":"https://img.shields.io/npm/v/css-minimizer-webpack-plugin.svg","content":"https://img.shields.io/npm/v/css-minimizer-webpack-plugin.json"},"info":{"service":"npm","type":"version","modifiers":{"type":"v"}}},{"urls":{"original":"https://david-dm.org/webpack-contrib/css-minimizer-webpack-plugin.svg","service":"https://david-dm.org/webpack-contrib/css-minimizer-webpack-plugin.svg","shields":"https://img.shields.io/david/webpack-contrib/css-minimizer-webpack-plugin.svg","content":"https://img.shields.io/david/webpack-contrib/css-minimizer-webpack-plugin.json"},"info":{"service":"david","type":"dependencies","modifiers":{"statusType":"normal"}}}],"linters":["editorconfig","eslint","prettier"],"coverage":0.99,"outdatedDependencies":{"p-limit":{"required":"^3.0.2","stable":"4.0.0","latest":"4.0.0"},"source-map":{"required":"^0.6.1","stable":"0.7.3","latest":"0.8.0-beta.0"}}}},"evaluation":{"quality":{"carefulness":0.9999999999999999,"tests":0.9984999999999999,"health":0.5,"branding":0.3},"popularity":{"communityInterest":181,"downloadsCount":3605048.6666666665,"downloadsAcceleration":33453.656773211565,"dependentsCount":270},"maintenance":{"releasesFrequency":1,"commitsFrequency":0.9413561643835616,"openIssues":1,"issuesDistribution":0.9589711955609046}},"score":{"final":0.780605789243418,"detail":{"quality":0.9347260532747415,"popularity":0.4291138632234578,"maintenance":0.9999946318079578}}}