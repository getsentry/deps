{"analyzedAt":"2021-08-29T13:10:05.042Z","collected":{"metadata":{"name":"tslint-consistent-codestyle","scope":"unscoped","version":"1.16.0","description":"Additional rules to enforce constistent code style with tslint","keywords":["tslint","custom-rules","rules","stylish","lint","linting","linter","tslint-plugin"],"date":"2019-09-25T17:56:45.833Z","publisher":{"username":"ajaff","email":"klaus.meinhardt1@gmail.com"},"maintainers":[{"username":"ajaff","email":"klaus.meinhardt1@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/ajafff/tslint-consistent-codestyle.git"},"links":{"npm":"https://www.npmjs.com/package/tslint-consistent-codestyle","homepage":"https://github.com/ajafff/tslint-consistent-codestyle#readme","repository":"https://github.com/ajafff/tslint-consistent-codestyle","bugs":"https://github.com/ajafff/tslint-consistent-codestyle/issues"},"license":"MIT","dependencies":{"@fimbul/bifrost":"^0.21.0","tslib":"^1.7.1","tsutils":"^2.29.0"},"devDependencies":{"@fimbul/mithotyn":"^0.17.0","@fimbul/valtyr":"^0.21.0","@fimbul/wotan":"^0.21.1","coveralls":"^3.0.0","github-release-from-changelog":"^2.0.0","npm-run-all":"^4.1.1","nyc":"^13.2.0","rimraf":"^3.0.0","tslint":"^5.8.0","typescript":"3.3"},"peerDependencies":{"tslint":"^5.0.0","typescript":">=2.1.4 || >=2.1.0-dev || >=2.2.0-dev || >=2.3.0-dev || >=2.4.0-dev || >=2.5.0-dev || >=2.6.0-dev || >=2.7.0-dev || >=2.8.0-dev || >=2.9.0-dev || >=3.0.0-dev || >=3.1.0-dev || >=3.2.0-dev || >=3.3.0-dev || >=3.4.0-dev"},"releases":[{"from":"2021-07-30T00:00:00.000Z","to":"2021-08-29T00:00:00.000Z","count":0},{"from":"2021-05-31T00:00:00.000Z","to":"2021-08-29T00:00:00.000Z","count":0},{"from":"2021-03-02T00:00:00.000Z","to":"2021-08-29T00:00:00.000Z","count":0},{"from":"2020-08-29T00:00:00.000Z","to":"2021-08-29T00:00:00.000Z","count":0},{"from":"2019-08-30T00:00:00.000Z","to":"2021-08-29T00:00:00.000Z","count":2}],"hasTestScript":true,"readme":"[![npm version](http://img.shields.io/npm/v/tslint-consistent-codestyle.svg)](https://npmjs.org/package/tslint-consistent-codestyle)\n[![Downloads](http://img.shields.io/npm/dm/tslint-consistent-codestyle.svg)](https://npmjs.org/package/tslint-consistent-codestyle)\n[![CircleCI](https://circleci.com/gh/ajafff/tslint-consistent-codestyle.svg?style=shield)](https://circleci.com/gh/ajafff/tslint-consistent-codestyle)\n[![Coverage Status](https://coveralls.io/repos/github/ajafff/tslint-consistent-codestyle/badge.svg)](https://coveralls.io/github/ajafff/tslint-consistent-codestyle)\n[![Join the chat at https://gitter.im/ajafff/tslint-consistent-codestyle](https://badges.gitter.im/ajafff/tslint-consistent-codestyle.svg)](https://gitter.im/ajafff/tslint-consistent-codestyle?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Greenkeeper badge](https://badges.greenkeeper.io/ajafff/tslint-consistent-codestyle.svg)](https://greenkeeper.io/)\n\n# Purpose\n\nThe rules in this package can be used to enforce consistent code style.\n\n# Usage\n\nInstall from npm to your devDependencies  (https://www.npmjs.com/package/tslint-consistent-codestyle)\n\n```sh\nnpm install --save-dev tslint-consistent-codestyle\n```\n\n## With TSLint\n\nConfigure tslint to use `tslint-consistent-codestyle`:\n\nThis package provides an empty configuration preset that just contains the `rulesDirectory`. That means you can easily use the rules in this package, but don't get any predefined configuration. To use it, just add it to the `extends` array in your `tslint.json`:\n\n```javascript\n{\n   \"extends\": [\"tslint-consistent-codestyle\"]\n   \"rules\": {\n     ...\n   }\n}\n```\n\nAs of `tslint@5.2.0` you can also use `tslint-consistent-codestyle` as `rulesDirectory`:\n\n```javascript\n{\n   \"rulesDirectory\": [\"tslint-consistent-codestyle\"]\n   \"rules\": {\n     ...\n   }\n}\n```\n\nNow configure some of the new rules.\n\n## With Wotan\n\nThis package provides all rules for both TSLint and [Wotan](https://github.com/fimbullinter/wotan/blob/master/packages/wotan/README.md).\n\nTo use rules from this package, add the following to your `.wotanrc.yaml` file:\n\n```yaml\nextends:\n  - tslint-consistent-codestyle # makes rules from the package available with the 'tcc/' prefix\nrules: # now configure the rules you want to use, remember to use the 'tcc/' prefix\n  tcc/no-collapsible-if: error\n  tcc/no-unused:\n    options: 'ignore-parameters'\n```\n\n# Rules\n\nRule | Description\n---- | ----\n[const-parameters](https://github.com/ajafff/tslint-consistent-codestyle/blob/master/docs/const-parameters.md) | Declare parameters as `const` with JsDoc `/** @const */`\n[early-exit](https://github.com/ajafff/tslint-consistent-codestyle/blob/master/docs/early-exit.md) | Recommends to use an early exit instead of a long `if` block.\n[ext-curly](https://github.com/ajafff/tslint-consistent-codestyle/blob/master/docs/ext-curly.md) | Enforces where to consistently use curly braces where not strictly necessary.\n[naming-convention](https://github.com/ajafff/tslint-consistent-codestyle/blob/master/docs/naming-convention.md) | Fine grained configuration to enforce consistent naming for almost everything. E.g. variables, functions, classes, methods, parameters, enums, etc.\n[no-as-type-assertion](https://github.com/ajafff/tslint-consistent-codestyle/blob/master/docs/no-as-type-assertion.md) | Prefer `<Type>foo` over `foo as Type`.\n[no-accessor-recursion](https://github.com/ajafff/tslint-consistent-codestyle/blob/master/docs/no-accessor-recursion.md) | Don't use `get foo() { return this.foo; }`. This is most likely a typo.\n[no-collapsible-if](https://github.com/ajafff/tslint-consistent-codestyle/blob/master/docs/no-collapsible-if.md) | Identifies nested if statements that can be combined into one.\n[no-else-after-return](https://github.com/ajafff/tslint-consistent-codestyle/blob/master/docs/no-else-after-return.md) | Like [no-else-return from eslint](http://eslint.org/docs/rules/no-else-return).\n[no-return-undefined](https://github.com/ajafff/tslint-consistent-codestyle/blob/master/docs/no-return-undefined.md) | Just `return;` instead of `return undefined;`.\n[no-static-this](https://github.com/ajafff/tslint-consistent-codestyle/blob/master/docs/no-static-this.md) | Ban the use of `this` in static methods.\n[no-unnecessary-else](https://github.com/ajafff/tslint-consistent-codestyle/blob/master/docs/no-unnecessary-else.md) | Like `no-else-after-return` but better.\n[no-unnecessary-type-annotation](https://github.com/ajafff/tslint-consistent-codestyle/blob/master/docs/no-unnecessary-type-annotation.md) | Finds type annotations that can safely be removed.\n[no-unused](https://github.com/ajafff/tslint-consistent-codestyle/blob/master/docs/no-unused.md) | Find dead code and unused declarations.\n[no-var-before-return](https://github.com/ajafff/tslint-consistent-codestyle/blob/master/docs/no-var-before-return.md) | Checks if the returned variable is declared right before the `return` statement.\n[object-shorthand-properties-first](https://github.com/ajafff/tslint-consistent-codestyle/blob/master/docs/object-shorthand-properties-first.md) | Shorthand properties should precede regular properties.\n[parameter-properties](https://github.com/ajafff/tslint-consistent-codestyle/blob/master/docs/parameter-properties.md) | Configure how and where to declare parameter properties.\n[prefer-const-enum](https://github.com/ajafff/tslint-consistent-codestyle/blob/master/docs/prefer-const-enum.md) | Prefer `const enum` where possible.\n[prefer-while](https://github.com/ajafff/tslint-consistent-codestyle/blob/master/docs/prefer-while.md) | Prefer a `while` loop instead of a `for` loop without initializer and incrementer."},"npm":{"downloads":[{"from":"2021-08-28T00:00:00.000Z","to":"2021-08-29T00:00:00.000Z","count":8957},{"from":"2021-08-22T00:00:00.000Z","to":"2021-08-29T00:00:00.000Z","count":196128},{"from":"2021-07-30T00:00:00.000Z","to":"2021-08-29T00:00:00.000Z","count":900209},{"from":"2021-05-31T00:00:00.000Z","to":"2021-08-29T00:00:00.000Z","count":2865290},{"from":"2021-03-02T00:00:00.000Z","to":"2021-08-29T00:00:00.000Z","count":5997081},{"from":"2020-08-29T00:00:00.000Z","to":"2021-08-29T00:00:00.000Z","count":11905352}],"dependentsCount":108,"starsCount":2},"github":{"starsCount":205,"forksCount":28,"subscribersCount":6,"issues":{"count":146,"openCount":32,"distribution":{"3600":30,"10800":5,"32400":10,"97200":13,"291600":11,"874800":8,"2624400":11,"7873200":13,"23619600":11,"70858800":12,"212576400":22},"isDisabled":false},"contributors":[{"username":"CSchulz","commitsCount":1},{"username":"corydeppen","commitsCount":1},{"username":"namse","commitsCount":1},{"username":"ajafff","commitsCount":290},{"username":"joealba","commitsCount":1},{"username":"luixo","commitsCount":1},{"username":"eile","commitsCount":1},{"username":"greenkeeper[bot]","commitsCount":12},{"username":"pathurs","commitsCount":1},{"username":"cjc343","commitsCount":1},{"username":"andy-hanson","commitsCount":1},{"username":"enessoylu","commitsCount":1},{"username":"reduckted","commitsCount":1},{"username":"cheeZery","commitsCount":1}],"commits":[{"from":"2021-08-22T00:00:00.000Z","to":"2021-08-29T00:00:00.000Z","count":0},{"from":"2021-07-30T00:00:00.000Z","to":"2021-08-29T00:00:00.000Z","count":0},{"from":"2021-05-31T00:00:00.000Z","to":"2021-08-29T00:00:00.000Z","count":0},{"from":"2021-03-02T00:00:00.000Z","to":"2021-08-29T00:00:00.000Z","count":0},{"from":"2020-08-29T00:00:00.000Z","to":"2021-08-29T00:00:00.000Z","count":0}],"statuses":[{"context":"coverage/coveralls","state":"success"},{"context":"ci/circleci","state":"success"}]},"source":{"files":{"readmeSize":5683,"testsSize":101022,"hasNpmIgnore":true,"hasChangelog":true},"badges":[{"urls":{"original":"http://img.shields.io/npm/v/tslint-consistent-codestyle.svg","shields":"https://img.shields.io/npm/v/tslint-consistent-codestyle.svg","content":"https://img.shields.io/npm/v/tslint-consistent-codestyle.json"},"info":{"service":"npm","type":"version","modifiers":{"type":"v"}}},{"urls":{"original":"http://img.shields.io/npm/dm/tslint-consistent-codestyle.svg","shields":"https://img.shields.io/npm/dm/tslint-consistent-codestyle.svg","content":"https://img.shields.io/npm/dm/tslint-consistent-codestyle.json"},"info":{"service":"npm","type":"downloads","modifiers":{"type":"dm"}}},{"urls":{"original":"https://circleci.com/gh/ajafff/tslint-consistent-codestyle.svg?style=shield","service":"https://circleci.com/gh/ajafff/tslint-consistent-codestyle.svg","shields":"https://img.shields.io/circleci/project/github/ajafff/tslint-consistent-codestyle.svg","content":"https://img.shields.io/circleci/project/github/ajafff/tslint-consistent-codestyle.json"},"info":{"service":"circleci","type":"build"}},{"urls":{"original":"https://coveralls.io/repos/github/ajafff/tslint-consistent-codestyle/badge.svg","service":"https://coveralls.io/repos/github/ajafff/tslint-consistent-codestyle/badge.svg","shields":"https://img.shields.io/coveralls/ajafff/tslint-consistent-codestyle.svg","content":"https://img.shields.io/coveralls/ajafff/tslint-consistent-codestyle.json"},"info":{"service":"coveralls","type":"coverage"}},{"urls":{"original":"https://gitter.im/ajafff/tslint-consistent-codestyle](https:/badges.gitter.im/ajafff/tslint-consistent-codestyle.svg","service":"https://badges.gitter.im/ajafff/tslint-consistent-codestyle.svg","shields":"https://img.shields.io/gitter/room/ajafff/tslint-consistent-codestyle.svg","content":"https://img.shields.io/gitter/room/ajafff/tslint-consistent-codestyle.json"},"info":{"service":"gitter","type":"misc"}}],"linters":["editorconfig","tslint"],"coverage":0.97,"outdatedDependencies":{"tslib":{"required":"^1.7.1","stable":"2.3.1","latest":"2.3.1"},"tsutils":{"required":"^2.29.0","stable":"3.21.0","latest":"3.21.0"},"@fimbul/bifrost":{"required":"^0.21.0","stable":"0.24.0","latest":"0.24.0"}}}},"evaluation":{"quality":{"carefulness":0.9999999999999999,"tests":0.9954999999999999,"health":0.5,"branding":0.6},"popularity":{"communityInterest":255,"downloadsCount":955096.6666666666,"downloadsAcceleration":-477.68053652968047,"dependentsCount":108},"maintenance":{"releasesFrequency":0.024657534246575345,"commitsFrequency":0,"openIssues":0.9680365296803654,"issuesDistribution":0}},"score":{"final":0.4428555549329921,"detail":{"quality":0.9385907427248327,"popularity":0.26869499696725124,"maintenance":0.19210023764858397}}}