{"analyzedAt":"2021-08-26T03:20:02.433Z","collected":{"metadata":{"name":"split","scope":"unscoped","version":"1.0.1","description":"split a Text Stream into a Line Stream","date":"2017-08-03T08:03:58.517Z","author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"http://bit.ly/dominictarr"},"publisher":{"username":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"username":"nopersonsmodules","email":"nopersonsmodules@gmail.com"}],"repository":{"type":"git","url":"git://github.com/dominictarr/split.git"},"links":{"npm":"https://www.npmjs.com/package/split","homepage":"http://github.com/dominictarr/split","repository":"https://github.com/dominictarr/split","bugs":"https://github.com/dominictarr/split/issues"},"license":"MIT","dependencies":{"through":"2"},"devDependencies":{"asynct":"*","event-stream":"~3.0.2","it-is":"1","stream-spec":"~0.2","ubelt":"~2.9","string-to-stream":"~1.0.0"},"releases":[{"from":"2021-07-27T00:00:00.000Z","to":"2021-08-26T00:00:00.000Z","count":0},{"from":"2021-05-28T00:00:00.000Z","to":"2021-08-26T00:00:00.000Z","count":0},{"from":"2021-02-27T00:00:00.000Z","to":"2021-08-26T00:00:00.000Z","count":0},{"from":"2020-08-26T00:00:00.000Z","to":"2021-08-26T00:00:00.000Z","count":0},{"from":"2019-08-27T00:00:00.000Z","to":"2021-08-26T00:00:00.000Z","count":0}],"hasTestScript":true,"readme":"# Split (matcher)\n\n[![build status](https://secure.travis-ci.org/dominictarr/split.png)](http://travis-ci.org/dominictarr/split)\n\nBreak up a stream and reassemble it so that each line is a chunk. matcher may be a `String`, or a `RegExp`\n\nExample, read every line in a file ...\n\n``` js\n  fs.createReadStream(file)\n    .pipe(split())\n    .on('data', function (line) {\n      //each chunk now is a separate line!\n    })\n\n```\n\n`split` takes the same arguments as `string.split` except it defaults to '/\\r?\\n/' instead of ',', and the optional `limit` parameter is ignored.\n[String#split](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/split)\n\n`split` takes an optional options object on its third argument.\n\n``` js\n  split(matcher, mapper, options)\n```\n\nValid options:\n\n* maxLength - The maximum buffer length without seeing a newline or `matcher`,\n  if a single line exceeds this, the split stream will emit an error.\n\n``` js\n  split(JSON.parse, null, { maxLength: 2})\n```\n\n* trailing - By default the last buffer not delimited by a newline or `matcher` will be emitted. To prevent this set `options.trailing` to `false`.\n\n``` js\n  split(JSON.parse, null, { trailing: false })\n```\n\n## keep matched splitter\n\nAs with `String#split`, if you split by a regular expression with a matching group,\nthe matches will be retained in the collection.\n\n```\nstdin\n.pipe(split(/(\\r?\\n)/))\n... //lines + separators.\n```\n\n\n# NDJ - Newline Delimited Json\n\n`split` accepts a function which transforms each line.\n\n``` js\nfs.createReadStream(file)\n  .pipe(split(JSON.parse))\n  .on('data', function (obj) {\n    //each chunk now is a a js object\n  })\n  .on('error', function (err) {\n    //syntax errors will land here\n    //note, this ends the stream.\n  })\n```\n\n# License\n\nMIT"},"npm":{"downloads":[{"from":"2021-08-25T00:00:00.000Z","to":"2021-08-26T00:00:00.000Z","count":0},{"from":"2021-08-19T00:00:00.000Z","to":"2021-08-26T00:00:00.000Z","count":4371961},{"from":"2021-07-27T00:00:00.000Z","to":"2021-08-26T00:00:00.000Z","count":21569292},{"from":"2021-05-28T00:00:00.000Z","to":"2021-08-26T00:00:00.000Z","count":64141576},{"from":"2021-02-27T00:00:00.000Z","to":"2021-08-26T00:00:00.000Z","count":128478263},{"from":"2020-08-26T00:00:00.000Z","to":"2021-08-26T00:00:00.000Z","count":251885068}],"dependentsCount":941,"starsCount":81},"github":{"starsCount":340,"forksCount":40,"subscribersCount":9,"issues":{"count":32,"openCount":7,"distribution":{"3600":3,"10800":3,"32400":1,"97200":5,"291600":4,"874800":2,"2624400":1,"7873200":1,"23619600":2,"70858800":3,"212576400":7},"isDisabled":false},"contributors":[{"username":"dominictarr","commitsCount":196},{"username":"jeffbski","commitsCount":2},{"username":"jxson","commitsCount":2},{"username":"EdwardBetts","commitsCount":1},{"username":"mhart","commitsCount":4},{"username":"michaelsanford","commitsCount":1},{"username":"tellnes","commitsCount":1},{"username":"mkronschnabl","commitsCount":1},{"username":"holdinghandsfeedingducks","commitsCount":1},{"username":"substack","commitsCount":5},{"username":"tjmehta","commitsCount":2},{"username":"wreckah","commitsCount":1},{"username":"frantz","commitsCount":1},{"username":"Raynos","commitsCount":6}],"commits":[{"from":"2021-08-19T00:00:00.000Z","to":"2021-08-26T00:00:00.000Z","count":0},{"from":"2021-07-27T00:00:00.000Z","to":"2021-08-26T00:00:00.000Z","count":0},{"from":"2021-05-28T00:00:00.000Z","to":"2021-08-26T00:00:00.000Z","count":0},{"from":"2021-02-27T00:00:00.000Z","to":"2021-08-26T00:00:00.000Z","count":0},{"from":"2020-08-26T00:00:00.000Z","to":"2021-08-26T00:00:00.000Z","count":0}],"statuses":[{"context":"continuous-integration/travis-ci/push","state":"success"},{"context":"dependency-ci","state":"pending"}]},"source":{"files":{"readmeSize":1780,"testsSize":6232},"badges":[{"urls":{"original":"https://secure.travis-ci.org/dominictarr/split.png","service":"https://api.travis-ci.org/dominictarr/split.svg","shields":"https://img.shields.io/travis/dominictarr/split.svg","content":"https://img.shields.io/travis/dominictarr/split.json"},"info":{"service":"travis","type":"build"}}]}},"evaluation":{"quality":{"carefulness":0.71,"tests":0.7625,"health":1,"branding":0.15},"popularity":{"communityInterest":484,"downloadsCount":21380525.333333332,"downloadsAcceleration":13138.093588280026,"dependentsCount":941},"maintenance":{"releasesFrequency":0.9,"commitsFrequency":0.9,"openIssues":0.96875,"issuesDistribution":0.9}},"score":{"final":0.8174583162958393,"detail":{"quality":0.9151129319420032,"popularity":0.551318941240445,"maintenance":0.9998937350830932}}}