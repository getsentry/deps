{"analyzedAt":"2021-08-20T14:24:15.596Z","collected":{"metadata":{"name":"http-server","scope":"unscoped","version":"13.0.1","description":"A simple zero-configuration command-line http server","keywords":["cli","command","static","http","https","http-server","https-server","server"],"date":"2021-08-20T14:23:47.271Z","publisher":{"username":"thornjad","email":"jade@jmthornton.net"},"maintainers":[{"username":"indexzero","email":"charlie.robbins@gmail.com"},{"username":"bigbluehat","email":"byoung@bigbluehat.com"},{"username":"thornjad","email":"jade@jmthornton.net"}],"contributors":[{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Marak Squires","email":"marak.squires@gmail.com"},{"name":"Charlie McConnell","email":"charlie@charlieistheman.com"},{"name":"Joshua Holbrook","email":"josh.holbrook@gmail.com"},{"name":"Maciej Ma≈Çecki","email":"maciej.malecki@notimplemented.org"},{"name":"Matthew Bergman","email":"mzbphoto@gmail.com"},{"name":"brad dunbar","email":"dunbarb2@gmail.com"},{"name":"Dominic Tarr"},{"name":"Travis Person","email":"travis.person@gmail.com"},{"name":"Jinkwon Lee","email":"master@bdyne.net"},{"name":"BigBlueHat","email":"byoung@bigbluehat.com"},{"name":"Daniel Dalton","email":"daltond2@hawkmail.newpaltz.edu"},{"name":"Jade Michael Thornton","email":"jademichael@jmthornton.net"}],"repository":{"type":"git","url":"git://github.com/http-party/http-server.git"},"links":{"npm":"https://www.npmjs.com/package/http-server","homepage":"https://github.com/http-party/http-server#readme","repository":"https://github.com/http-party/http-server","bugs":"https://github.com/http-party/http-server/issues"},"license":"MIT","dependencies":{"basic-auth":"^1.0.3","colors":"^1.4.0","corser":"^2.0.1","he":"^1.1.0","http-proxy":"^1.18.0","mime":"^1.6.0","minimist":"^1.2.5","opener":"^1.5.1","portfinder":"^1.0.25","secure-compare":"3.0.1","union":"~0.5.0","url-join":"^2.0.5"},"devDependencies":{"common-style":"^3.0.0","eol":"^0.9.1","express":"^4.16.3","mkdirp":"^0.5.0","request":"^2.88.2","tap":"^14.11.0"},"releases":[{"from":"2021-07-21T00:00:00.000Z","to":"2021-08-20T00:00:00.000Z","count":3},{"from":"2021-05-22T00:00:00.000Z","to":"2021-08-20T00:00:00.000Z","count":3},{"from":"2021-02-21T00:00:00.000Z","to":"2021-08-20T00:00:00.000Z","count":3},{"from":"2020-08-20T00:00:00.000Z","to":"2021-08-20T00:00:00.000Z","count":3},{"from":"2019-08-21T00:00:00.000Z","to":"2021-08-20T00:00:00.000Z","count":7}],"hasTestScript":true,"hasSelectiveFiles":true,"readme":"[![GitHub Workflow Status (master)](https://img.shields.io/github/workflow/status/http-party/http-server/Node.js%20CI/master?style=flat-square)](https://github.com/http-party/http-server/actions)\n[![npm](https://img.shields.io/npm/v/http-server.svg?style=flat-square)](https://www.npmjs.com/package/http-server) [![homebrew](https://img.shields.io/homebrew/v/http-server?style=flat-square)](https://formulae.brew.sh/formula/http-server) [![npm downloads](https://img.shields.io/npm/dm/http-server?color=blue&label=npm%20downloads&style=flat-square)](https://www.npmjs.com/package/http-server)\n[![license](https://img.shields.io/github/license/http-party/http-server.svg?style=flat-square)](https://github.com/http-party/http-server)\n\n# http-server: a command-line http server\n\n`http-server` is a simple, zero-configuration command-line http server.  It is powerful enough for production usage, but it's simple and hackable enough to be used for testing, local development, and learning.\n\n![Example of running http-server](https://github.com/http-party/http-server/raw/master/screenshots/public.png)\n\n## Installation:\n\n#### Globally via `npm`\n\n    npm install --global http-server\n\nThis will install `http-server` globally so that it may be run from the command line anywhere.\n\n#### Globally via Homebrew\n\n    brew install http-server\n\n#### Running on-demand:\n\nUsing `npx` you can run the script without installing it first:\n\n    npx http-server [path] [options]\n     \n#### As a dependency in your `npm` package:\n\n    npm install http-server\n\n## Usage:\n\n     http-server [path] [options]\n\n`[path]` defaults to `./public` if the folder exists, and `./` otherwise.\n\n*Now you can visit http://localhost:8080 to view your server*\n\n**Note:** Caching is on by default. Add `-c-1` as an option to disable caching.\n\n## Available Options:\n\n| Command         | \tDescription         | Defaults  |\n| -------------  |-------------|-------------|\n|`-p` or `--port` |Port to use. Use `-p 0` to look for an open port, starting at 8080. It will also read from `process.env.PORT`. |8080 |\n|`-a`   |Address to use |0.0.0.0|\n|`-d`     |Show directory listings |`true` |\n|`-i`   | Display autoIndex | `true` |\n|`-g` or `--gzip` |When enabled it will serve `./public/some-file.js.gz` in place of `./public/some-file.js` when a gzipped version of the file exists and the request accepts gzip encoding. If brotli is also enabled, it will try to serve brotli first.|`false`|\n|`-b` or `--brotli`|When enabled it will serve `./public/some-file.js.br` in place of `./public/some-file.js` when a brotli compressed version of the file exists and the request accepts `br` encoding. If gzip is also enabled, it will try to serve brotli first. |`false`|\n|`-e` or `--ext`  |Default file extension if none supplied |`html` | \n|`-s` or `--silent` |Suppress log messages from output  | |\n|`--cors` |Enable CORS via the `Access-Control-Allow-Origin` header  | |\n|`-o [path]` |Open browser window after starting the server. Optionally provide a URL path to open. e.g.: -o /other/dir/ | |\n|`-c` |Set cache time (in seconds) for cache-control max-age header, e.g. `-c10` for 10 seconds. To disable caching, use `-c-1`.|`3600` |\n|`-U` or `--utc` |Use UTC time format in log messages.| |\n|`--log-ip` |Enable logging of the client's IP address |`false` |\n|`-P` or `--proxy` |Proxies all requests which can't be resolved locally to the given url. e.g.: -P http://someurl.com | |\n|`--username` |Username for basic authentication | |\n|`--password` |Password for basic authentication | |\n|`-S` or `--ssl` |Enable https.| |\n|`-C` or `--cert` |Path to ssl cert file |`cert.pem` | \n|`-K` or `--key` |Path to ssl key file |`key.pem` |\n|`-r` or `--robots` | Automatically provide a /robots.txt (The content of which defaults to `User-agent: *\\nDisallow: /`)  | `false` |\n|`--no-dotfiles` |Do not show dotfiles| |\n|`--mimetypes` |Path to a .types file for custom mimetype definition| |\n|`-h` or `--help` |Print this list and exit. |   |\n|`-v` or `--version`|Print the version and exit. | |\n\n## Magic Files\n\n- `index.html` will be served as the default file to any directory requests.\n- `404.html` will be served if a file is not found. This can be used for Single-Page App (SPA) hosting to serve the entry page.\n\n## Catch-all redirect\n\nTo implement a catch-all redirect, use the index page itself as the proxy with:\n\n```\nhttp-server --proxy http://localhost:8080?\n```\n\nNote the `?` at the end of the proxy URL. Thanks to [@houston3](https://github.com/houston3) for this clever hack!\n\n## TLS/SSL\n\nFirst, you need to make sure that [openssl](https://github.com/openssl/openssl) is installed correctly, and you have `key.pem` and `cert.pem` files. You can generate them using this command:\n\n``` sh\nopenssl req -newkey rsa:2048 -new -nodes -x509 -days 3650 -keyout key.pem -out cert.pem\n```\n\nYou will be prompted with a few questions after entering the command. Use `127.0.0.1` as value for `Common name` if you want to be able to install the certificate in your OS's root certificate store or browser so that it is trusted.\n\nThis generates a cert-key pair and it will be valid for 3650 days (about 10 years).\n\nThen you need to run the server with `-S` for enabling SSL and `-C` for your certificate file.\n\n``` sh\nhttp-server -S -C cert.pem\n```\n\nThis is what should be output if successful:\n\n``` sh\nStarting up http-server, serving ./ through https\nAvailable on:\n  https:127.0.0.1:8080\n  https:192.168.1.101:8080\n  https:192.168.1.104:8080\nHit CTRL-C to stop the server\n```\n\n# Development\n\nCheckout this repository locally, then:\n\n```sh\n$ npm i\n$ node bin/http-server\n```\n\n*Now you can visit http://localhost:8080 to view your server*\n\nYou should see the turtle image in the screenshot above hosted at that URL. See\nthe `./public` folder for demo content."},"npm":{"downloads":[{"from":"2021-08-19T00:00:00.000Z","to":"2021-08-20T00:00:00.000Z","count":255852},{"from":"2021-08-13T00:00:00.000Z","to":"2021-08-20T00:00:00.000Z","count":1551978},{"from":"2021-07-21T00:00:00.000Z","to":"2021-08-20T00:00:00.000Z","count":6760757},{"from":"2021-05-22T00:00:00.000Z","to":"2021-08-20T00:00:00.000Z","count":22786816},{"from":"2021-02-21T00:00:00.000Z","to":"2021-08-20T00:00:00.000Z","count":68612802},{"from":"2020-08-20T00:00:00.000Z","to":"2021-08-20T00:00:00.000Z","count":125719621}],"dependentsCount":657,"starsCount":522},"github":{"starsCount":10892,"forksCount":1252,"subscribersCount":190,"issues":{"count":721,"openCount":101,"distribution":{"3600":59,"10800":15,"32400":18,"97200":36,"291600":50,"874800":39,"2624400":71,"7873200":56,"23619600":80,"70858800":122,"212576400":175},"isDisabled":false},"contributors":[{"username":"intotecho","commitsCount":1},{"username":"tobyee","commitsCount":1},{"username":"thornjad","commitsCount":86},{"username":"jgranick","commitsCount":1},{"username":"johntron","commitsCount":1},{"username":"impleri","commitsCount":1},{"username":"amad-person","commitsCount":1},{"username":"BigBlueHat","commitsCount":17},{"username":"ts-web","commitsCount":1},{"username":"Xmader","commitsCount":8},{"username":"1j01","commitsCount":1},{"username":"adunkman","commitsCount":2},{"username":"glls","commitsCount":3},{"username":"nLight","commitsCount":1},{"username":"mmalecki","commitsCount":20},{"username":"duncanbeevers","commitsCount":1},{"username":"sowmiyamuthuraman","commitsCount":2},{"username":"braddunbar","commitsCount":1},{"username":"travisperson","commitsCount":1},{"username":"mLuby","commitsCount":1},{"username":"jfhbrook","commitsCount":17},{"username":"MichalCz","commitsCount":2},{"username":"dominictarr","commitsCount":1},{"username":"danielmahon","commitsCount":2},{"username":"jbergens","commitsCount":2},{"username":"SteveVanOpstal","commitsCount":1},{"username":"francois2metz","commitsCount":1},{"username":"zonetti","commitsCount":1},{"username":"luk-","commitsCount":4},{"username":"zbynek","commitsCount":10},{"username":"dandalton1","commitsCount":1},{"username":"peterlcullen","commitsCount":1},{"username":"hmil","commitsCount":2},{"username":"saadq","commitsCount":1},{"username":"gordalina","commitsCount":1},{"username":"zjhmale","commitsCount":1},{"username":"epugh","commitsCount":1},{"username":"brizer","commitsCount":1},{"username":"dtao","commitsCount":1},{"username":"smileart-levelup","commitsCount":3},{"username":"IamfromSpace","commitsCount":1},{"username":"karolmajta","commitsCount":1},{"username":"sumnulu","commitsCount":1},{"username":"skyward-luke","commitsCount":1},{"username":"jfsiii","commitsCount":2},{"username":"cbou","commitsCount":1},{"username":"Yomguithereal","commitsCount":1},{"username":"paked","commitsCount":1},{"username":"sgnl","commitsCount":1},{"username":"egikander","commitsCount":1},{"username":"indexzero","commitsCount":43},{"username":"andrefs","commitsCount":1},{"username":"lanterndev","commitsCount":1},{"username":"chill117","commitsCount":1},{"username":"julien-f","commitsCount":1},{"username":"wayiam","commitsCount":7},{"username":"Marak","commitsCount":39},{"username":"AvianFlu","commitsCount":28},{"username":"timoxley","commitsCount":1},{"username":"jantimon","commitsCount":1},{"username":"mbrowne","commitsCount":2},{"username":"wmertens","commitsCount":1},{"username":"katowulf","commitsCount":2},{"username":"boramalper","commitsCount":2},{"username":"ColtonHerrod","commitsCount":2},{"username":"sqlwwx","commitsCount":3},{"username":"pksunkara","commitsCount":1},{"username":"FotoVerite","commitsCount":5},{"username":"fizker","commitsCount":1},{"username":"michaelsbradleyjr","commitsCount":6},{"username":"ebiiim","commitsCount":1},{"username":"mathieu-aubin","commitsCount":1}],"commits":[{"from":"2021-08-13T00:00:00.000Z","to":"2021-08-20T00:00:00.000Z","count":3},{"from":"2021-07-21T00:00:00.000Z","to":"2021-08-20T00:00:00.000Z","count":19},{"from":"2021-05-22T00:00:00.000Z","to":"2021-08-20T00:00:00.000Z","count":43},{"from":"2021-02-21T00:00:00.000Z","to":"2021-08-20T00:00:00.000Z","count":50},{"from":"2020-08-20T00:00:00.000Z","to":"2021-08-20T00:00:00.000Z","count":55}]},"source":{"files":{"readmeSize":5798,"testsSize":61966},"badges":[{"urls":{"original":"https://img.shields.io/npm/v/http-server.svg?style=flat-square","shields":"https://img.shields.io/npm/v/http-server.svg","content":"https://img.shields.io/npm/v/http-server.json"},"info":{"service":"npm","type":"version","modifiers":{"type":"v"}}}],"outdatedDependencies":{"basic-auth":{"required":"^1.0.3","stable":"2.0.1","latest":"2.0.1"},"url-join":{"required":"^2.0.5","stable":"4.0.1","latest":"4.0.1"},"mime":{"required":"^1.6.0","stable":"2.5.2","latest":"2.5.2"}}}},"evaluation":{"quality":{"carefulness":0.7899999999999999,"tests":0.6,"health":0.5,"branding":0.15},"popularity":{"communityInterest":12928,"downloadsCount":7595605.333333333,"downloadsAcceleration":-20583.458904109582,"dependentsCount":657},"maintenance":{"releasesFrequency":1,"commitsFrequency":1,"openIssues":1,"issuesDistribution":0}},"score":{"final":0.6749577286955061,"detail":{"quality":0.8430317371327659,"popularity":0.5391853549209801,"maintenance":0.6666666666666666}}}