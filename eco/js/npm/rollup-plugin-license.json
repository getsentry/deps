{"analyzedAt":"2021-07-29T03:56:29.446Z","collected":{"metadata":{"name":"rollup-plugin-license","scope":"unscoped","version":"2.5.0","description":"Rollup plugin to add license banner to the final bundle and output third party licenses","keywords":["rollup","rollup-plugin"],"date":"2021-06-06T13:13:33.133Z","author":{"name":"Mickael Jeanroy","email":"mickael.jeanroy@gmail.com","username":"mickael.jeanroy"},"publisher":{"username":"mickael.jeanroy","email":"mickael.jeanroy@gmail.com"},"maintainers":[{"username":"mickael.jeanroy","email":"mickael.jeanroy@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mjeanroy/rollup-plugin-license.git"},"links":{"npm":"https://www.npmjs.com/package/rollup-plugin-license","homepage":"https://github.com/mjeanroy/rollup-plugin-license","repository":"https://github.com/mjeanroy/rollup-plugin-license","bugs":"https://github.com/mjeanroy/rollup-plugin-license/issues"},"license":"MIT","dependencies":{"commenting":"1.1.0","glob":"7.1.7","lodash":"4.17.21","magic-string":"0.25.7","mkdirp":"1.0.4","moment":"2.29.1","package-name-regex":"2.0.1","spdx-expression-validate":"2.0.0","spdx-satisfies":"5.0.1"},"devDependencies":{"@babel/core":"7.14.3","@babel/preset-env":"7.14.4","@babel/register":"7.13.16","@rollup/plugin-babel":"5.3.0","@rollup/plugin-commonjs":"19.0.0","@rollup/plugin-node-resolve":"13.0.0","@typescript-eslint/eslint-plugin":"4.26.0","@typescript-eslint/parser":"4.26.0","babel-plugin-add-module-exports":"1.0.4","eslint":"7.27.0","eslint-config-google":"0.14.0","fancy-log":"1.3.3","fs-extra":"10.0.0","globalthis":"1.0.2","gulp":"4.0.2","gulp-bump":"3.2.0","gulp-conventional-changelog":"2.0.35","gulp-eslint":"6.0.0","gulp-git":"2.10.1","gulp-jasmine":"4.0.0","jasmine-core":"3.7.1","prettier":"2.3.0","rimraf":"3.0.2","rollup":"2.50.5","rollup-plugin-prettier":"2.1.0","rollup-plugin-strip-banner":"2.0.0","tmp":"0.2.1","typescript":"4.3.2"},"peerDependencies":{"rollup":"^1.0.0 || ^2.0.0"},"releases":[{"from":"2021-06-29T00:00:00.000Z","to":"2021-07-29T00:00:00.000Z","count":0},{"from":"2021-04-30T00:00:00.000Z","to":"2021-07-29T00:00:00.000Z","count":3},{"from":"2021-01-30T00:00:00.000Z","to":"2021-07-29T00:00:00.000Z","count":4},{"from":"2020-07-29T00:00:00.000Z","to":"2021-07-29T00:00:00.000Z","count":5},{"from":"2019-07-30T00:00:00.000Z","to":"2021-07-29T00:00:00.000Z","count":17}],"hasTestScript":true,"readme":"# rollup-plugin-license\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/mjeanroy/rollup-plugin-license.svg)](https://greenkeeper.io/)\n[![Build Status](https://travis-ci.org/mjeanroy/rollup-plugin-license.svg?branch=master)](https://travis-ci.org/mjeanroy/rollup-plugin-license)\n[![Npm version](https://badge.fury.io/js/rollup-plugin-license.svg)](https://badge.fury.io/js/rollup-plugin-license)\n\nRollup plugin that can be used to:\n- Prepend a banner from a file.\n- Create a file containing all third-parties used in the bundle (and display the license of each dependency).\n\n## How to use\n\nInstall the plugin with NPM:\n\n```npm install --save-dev rollup-plugin-license```\n\nThen add it to your rollup configuration:\n\n```javascript\nconst path = require('path');\nconst license = require('rollup-plugin-license');\n\nmodule.exports = {\n  plugins: [\n    license({\n      sourcemap: true,\n      cwd: '.', // Default is process.cwd()\n\n      banner: {\n        commentStyle: 'regular', // The default\n\n        content: {\n          file: path.join(__dirname, 'LICENSE'),\n          encoding: 'utf-8', // Default is utf-8\n        },\n\n        // Optional, may be an object or a function returning an object.\n        data() {\n          return {\n            foo: 'foo',\n          };\n        },\n      },\n\n      thirdParty: {\n        includePrivate: true, // Default is false.\n        output: {\n          file: path.join(__dirname, 'dist', 'dependencies.txt'),\n          encoding: 'utf-8', // Default is utf-8.\n        },\n      },\n    }),\n  ],\n}\n```\n\n## Banner\n\n### Banner file\n\nThe banner file can be a text file and it will be converted to a block comment automatically if needed.\n\nNote that the content will be translated to a lodash template with the following data model:\n- `pkg`: The content of the project `package.json`.\n- `dependencies`: An array of all the dependencies included in the bundle.\n- `moment`: The `moment` object.\n- `_`: The lodash object.\n- `data` A custom data object, defined in banner options.\n\nHere is a valid banner:\n\n```text\nBundle of <%= pkg.name %>\nGenerated: <%= moment().format('YYYY-MM-DD') %>\nVersion: <%= pkg.version %>\nDependencies:\n<% _.forEach(dependencies, function (dependency) { %>\n  <%= dependency.name %> -- <%= dependency.version %>\n<% }) %>\n```\n\n### Comment style\n\nSince version 0.10.0, it is possible to customize banner style using the `commentStyle` option:\n\n```javascript\nlicense({\n  banner: {\n    commentStyle: 'regular', // The default\n    content: {\n      file: path.join(__dirname, 'LICENSE'),\n    },\n  },\n})\n```\n\nFollowing options are available:\n\n- `regular`: \"classic\" comment block is used (this is the default), for example:\n\n```javascript\n/**\n * This is the `regular` style.\n */\n```\n\n- `ignored`: a comment block with prefix ignored by minifiers, for example:\n\n```javascript\n/*!\n * This is the `ignored` style.\n */\n```\n\n- `slash`: banner is prepended using \"slash\" comments, for example:\n\n```javascript\n//\n// This is the `slash` style.\n//\n```\n\n- `none`: nothing done, be careful to prepenbd a banner already \"commented\".\n\n### Banner as a \"simple\" string\n\nSince version 0.3.0, `banner` can be a simple string that will be used directly:\n\n```javascript\nconst license = require('rollup-plugin-license');\n\nmodule.exports = {\n  plugins: [\n    license({\n      banner: `Copyright <%= moment().format('YYYY') %>`,\n    }),\n  ],\n}\n```\n\nIf you want to add some options to banner (such as the comment style to use), and still define it as a `string` (insead of pointing to a file), you can also define the banner like this (since version `0.11.0`):\n\n```javascript\nconst license = require('rollup-plugin-license');\n\nmodule.exports = {\n  plugins: [\n    license({\n      banner: {\n        content: `Copyright <%= moment().format('YYYY') %>`,\n        commentStyle: 'ignored',\n      },\n    }),\n  ],\n}\n```\n\n### Deprecated format\n\nUntil version 0.10.0, banner file was defined as:\n\n\n```javascript\nconst path = require('path');\nconst license = require('rollup-plugin-license');\n\nmodule.exports = {\n  plugins: [\n    license({\n      banner: {\n        file: path.join(__dirname, 'LICENSE'),\n        encoding: 'utf-8',\n      },\n    }),\n  ],\n};\n```\n\nThis format has been deprecated with version 0.11.0 and removed with version 1.0.O, and the banner file should be defined inside `banner.content` entry:\n\n```javascript\nconst path = require('path');\nconst license = require('rollup-plugin-license');\n\nmodule.exports = {\n  plugins: [\n    license({\n      banner: {\n        content: {\n          file: path.join(__dirname, 'LICENSE'),\n          encoding: 'utf-8',\n        },\n      },\n    }),\n  ],\n};\n```\n\n## Dependencies output\n\nA file containing a summary of all dependencies can be generated automatically using the following options:\n\n```javascript\nlicense({\n  thirdParty: {\n    output: path.join(__dirname, 'dist', 'dependencies.txt'),\n    includePrivate: true, // Default is false.\n  },\n})\n```\n\nStarting with version `0.12.0`, you can have more control by defining `output` as an object, for example:\n\n```javascript\nlicense({\n  thirdParty: {\n    includePrivate: false,\n    output: {\n      file: path.join(__dirname, 'dist', 'dependencies.txt'), // Path of the license report\n      encoding: 'utf-8', // default is UTF-8\n\n      // Template function that can be defined to customize report output\n      template(dependencies) {\n        return dependencies.map((dependency) => `${dependency.name}:${dependency.version} -- ${dependency.license}`).join('\\n');\n      },\n    },\n  },\n})\n```\n\nNote that the template option can also be a lodash template:\n\n```javascript\nlicense({\n  thirdParty: {\n    includePrivate: false,\n    output: {\n      file: path.join(__dirname, 'dist', 'dependencies.txt'),\n\n      // Lodash template that can be defined to customize report output\n      template: `\n        <% _.forEach(dependencies, function (dependency) { %>\n          <%= dependency.name %>:<%= dependency.version%> -- <%= dependency.license %>\n        <% }) %>\n      `,\n    },\n  },\n})\n```\n\nFor example, it can be relatively easy to produce a JSON output instead of a text file:\n\n```javascript\nlicense({\n  thirdParty: {\n    includePrivate: false,\n    output: {\n      file: path.join(__dirname, 'dist', 'dependencies.json'),\n      template(dependencies) {\n        return JSON.stringify(dependencies);\n      }\n    },\n  },\n})\n```\n\n## License Checks\n\nStarting with version 0.13, it is possible to ensure that dependencies does not violate any license restriction.\nFor example, suppose you want to limit dependencies with MIT or Apache-2.0 licenses, simply define the restriction such as:\n\n```javascript\nlicense({\n  thirdParty: {\n    allow: '(MIT OR Apache-2.0)',\n  },\n})\n```\n\nNote that the `allow` value here should be a valid SPDX pattern (more information [here](https://www.npmjs.com/package/spdx-expression-validate)).\n\nThe `allow` option here will print a warning to the console for all license violation. Note that, if you want more control, it can also be defined as function:\n\n```javascript\nlicense({\n  thirdParty: {\n    allow(dependency) {\n      return dependency.license === 'MIT';\n    },\n  },\n})\n```\n\nThe function defined here allow only MIT licenses, and will print a warning for anything else.\n\nFinally, if emitting a warning is not enought for you, you can also choose to fail the build:\n\n```javascript\nlicense({\n  thirdParty: {\n    allow: {\n      test: 'MIT',             // Or a function that should returns `true` or `false`\n      failOnUnlicensed: true,  // Fail if a dependency does not specify any licenses, default is `false`\n      failOnViolation: true,   // Fail if a dependency specify a license that does not match given requirement, default is `false`\n    },\n  },\n})\n```\n\n## Changelogs\n\n- 2.4.0\n  - Typings added\n  - Update dependencies\n- 2.0.0\n  - Support node >= 10\n  - Update dependencies\n- 1.0.0\n  - Remove support for rollup < 1.0.0\n  - Remove support for deprecated options.\n  - Support node >= 6\n- 0.14.0\n  - Update rollup peer dependency\n  - Produce a single file as dist output\n  - Update dependencies\n- 0.13.0\n  - Add license checking (see [#381](https://github.com/mjeanroy/rollup-plugin-license/issues/381)).\n- 0.12.1\n  - Restore compatibility with Node6\n- 0.12.0\n  - Improve `output` configuration (see [#379](https://github.com/mjeanroy/rollup-plugin-license/issues/379)).\n  - Improve option object validation and warning.\n  - Deprecate `thirdParty.encoding` option.\n  - Dev dependencies updates.\n- 0.11.0\n  - Fail if the banner file does not exist (breaking change).\n  - Deprecate `banner.file` / `banner.encoding` entries, use `banner.content.file` / `banner.content.encoding` instead (see [#428](https://github.com/mjeanroy/rollup-plugin-license/issues/428)).\n  - Allow comment style to be defined with a \"string\" banner (see [#308](https://github.com/mjeanroy/rollup-plugin-license/issues/308) and [#428](https://github.com/mjeanroy/rollup-plugin-license/issues/428)).\n  - Dev dependencies updates.\n- 0.10.0\n  - Support different comment style for banner (see [#308](https://github.com/mjeanroy/rollup-plugin-license/issues/308)).\n  - Do not include tree shaken dependencies (see [#380](https://github.com/mjeanroy/rollup-plugin-license/issues/380))\n  - Various dependency updates.\n- 0.9.0\n  - Fix for `NULL` character (see [#1](https://github.com/mjeanroy/rollup-plugin-license/issues/1)).\n  - Various dependency updates.\n- 0.8.1\n  - Add rollup as a peer dependency.\n- 0.8.0\n  - Deprecate `sourceMap` option (use `sourcemap` option in lowercase) to keep it consistent with rollup.\n  - Fix deprecate call with rollup >= 1, keep compatibility with legacy versions of rollup.\n  - Upgrade dependencies.\n- 0.7.0\n  - Add a way to specify custom data object when rendering banner.\n  - Add `cwd` option to specify custom working directory (optional option).\n  - Upgrade dependencies.\n- 0.6.0\n  - Upgrade `commenting` dependency.\n- 0.5.0\n  - Feat: Sourcemap is now enable by default to ensure compatibility with other rollup plugins.\n  - Fix: Add compatibility with rollup >= 0.48.0 (the new `sourcemap` option).\n  - Fix: Ensure plugin `sourcemp` is used instead of the \"global\" one in rollup options.\n  - Chore: dependency updates.\n- 0.4.0\n  - Dependency update (`moment`).\n  - Dependency update (`magic-string`).\n- 0.3.0\n  - Add encoding option for banner and third-party output file.\n  - Banner can be a simple string.\n\n## License\n\nMIT License (MIT)\n\n## Contributing\n\nIf you find a bug or think about enhancement, feel free to contribute and submit an issue or a pull request."},"npm":{"downloads":[{"from":"2021-07-28T00:00:00.000Z","to":"2021-07-29T00:00:00.000Z","count":0},{"from":"2021-07-22T00:00:00.000Z","to":"2021-07-29T00:00:00.000Z","count":7046},{"from":"2021-06-29T00:00:00.000Z","to":"2021-07-29T00:00:00.000Z","count":36652},{"from":"2021-04-30T00:00:00.000Z","to":"2021-07-29T00:00:00.000Z","count":111696},{"from":"2021-01-30T00:00:00.000Z","to":"2021-07-29T00:00:00.000Z","count":249027},{"from":"2020-07-29T00:00:00.000Z","to":"2021-07-29T00:00:00.000Z","count":448001}],"dependentsCount":23,"starsCount":0},"github":{"starsCount":55,"forksCount":8,"subscribersCount":2,"issues":{"count":883,"openCount":7,"distribution":{"3600":98,"10800":68,"32400":158,"97200":234,"291600":204,"874800":86,"2624400":22,"7873200":7,"23619600":4,"70858800":0,"212576400":2},"isDisabled":false},"contributors":[{"username":"Luke-zhang-04","commitsCount":2},{"username":"greenkeeper[bot]","commitsCount":324},{"username":"mjeanroy","commitsCount":273},{"username":"slavafomin","commitsCount":1},{"username":"gregod","commitsCount":1},{"username":"GerkinDev","commitsCount":1}],"commits":[{"from":"2021-07-22T00:00:00.000Z","to":"2021-07-29T00:00:00.000Z","count":2},{"from":"2021-06-29T00:00:00.000Z","to":"2021-07-29T00:00:00.000Z","count":17},{"from":"2021-04-30T00:00:00.000Z","to":"2021-07-29T00:00:00.000Z","count":107},{"from":"2021-01-30T00:00:00.000Z","to":"2021-07-29T00:00:00.000Z","count":183},{"from":"2020-07-29T00:00:00.000Z","to":"2021-07-29T00:00:00.000Z","count":265}]},"source":{"files":{"readmeSize":10512,"testsSize":104296,"hasNpmIgnore":true,"hasChangelog":true},"badges":[{"urls":{"original":"https://travis-ci.org/mjeanroy/rollup-plugin-license.svg?branch=master","service":"https://api.travis-ci.org/mjeanroy/rollup-plugin-license.svg?branch=master","shields":"https://img.shields.io/travis/mjeanroy/rollup-plugin-license/master.svg","content":"https://img.shields.io/travis/mjeanroy/rollup-plugin-license/master.json"},"info":{"service":"travis","type":"build","modifiers":{"branch":"master"}}}],"linters":["editorconfig","eslint","prettier"],"outdatedDependencies":{"package-name-regex":{"required":"2.0.1","stable":"2.0.4","latest":"2.0.4"}}}},"evaluation":{"quality":{"carefulness":0.9999999999999999,"tests":0.6,"health":0.7777777777777778,"branding":0.15},"popularity":{"communityInterest":71,"downloadsCount":37232,"downloadsAcceleration":37.60416666666663,"dependentsCount":23},"maintenance":{"releasesFrequency":0.9,"commitsFrequency":1,"openIssues":1,"issuesDistribution":1}},"score":{"final":0.6826443898715004,"detail":{"quality":0.9243640670717601,"popularity":0.15814696832166583,"maintenance":0.9999535166782554}}}