{"analyzedAt":"2021-07-10T09:23:54.344Z","collected":{"metadata":{"name":"chrome-launcher","scope":"unscoped","version":"0.14.0","description":"Launch latest Chrome with the Devtools Protocol port open","date":"2021-05-18T20:56:51.432Z","author":{"name":"The Chromium Authors"},"publisher":{"username":"brendankenny","email":"bckenny@gmail.com"},"maintainers":[{"username":"paulirish","email":"npm@paul.irish"},{"username":"brendankenny","email":"bckenny@gmail.com"},{"username":"patrickhulce","email":"patrick.hulce@gmail.com"},{"username":"hoten","email":"cjamcl@gmail.com"},{"username":"exterkamp","email":"shaneexterkamp5@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/GoogleChrome/chrome-launcher.git"},"links":{"npm":"https://www.npmjs.com/package/chrome-launcher","homepage":"https://github.com/GoogleChrome/chrome-launcher#readme","repository":"https://github.com/GoogleChrome/chrome-launcher","bugs":"https://github.com/GoogleChrome/chrome-launcher/issues"},"license":"Apache-2.0","dependencies":{"@types/node":"*","escape-string-regexp":"^4.0.0","is-wsl":"^2.2.0","lighthouse-logger":"^1.0.0"},"devDependencies":{"@types/mocha":"^8.0.4","@types/sinon":"^9.0.1","clang-format":"^1.0.50","mocha":"^8.2.1","sinon":"^9.0.1","ts-node":"^9.1.0","typescript":"^4.1.2"},"releases":[{"from":"2021-06-10T00:00:00.000Z","to":"2021-07-10T00:00:00.000Z","count":0},{"from":"2021-04-11T00:00:00.000Z","to":"2021-07-10T00:00:00.000Z","count":2},{"from":"2021-01-11T00:00:00.000Z","to":"2021-07-10T00:00:00.000Z","count":2},{"from":"2020-07-10T00:00:00.000Z","to":"2021-07-10T00:00:00.000Z","count":2},{"from":"2019-07-11T00:00:00.000Z","to":"2021-07-10T00:00:00.000Z","count":9}],"hasTestScript":true,"readme":"# Chrome Launcher [![GitHub Actions Status Badge](https://github.com/GoogleChrome/chrome-launcher/workflows/ðŸ› /badge.svg)](https://github.com/GoogleChrome/chrome-launcher/actions) [![NPM chrome-launcher package](https://img.shields.io/npm/v/chrome-launcher.svg)](https://npmjs.org/package/chrome-launcher)\n\n<img src=\"https://user-images.githubusercontent.com/39191/29847271-a7ba82f8-8ccf-11e7-8d54-eb88fdf0b6d0.png\" align=right height=200>\n\nLaunch Google Chrome with ease from node.\n\n* [Disables many Chrome services](https://github.com/GoogleChrome/chrome-launcher/blob/master/src/flags.ts) that add noise to automated scenarios\n* Opens up the browser's `remote-debugging-port` on an available port\n* Automagically locates a Chrome binary to launch\n* Uses a fresh Chrome profile for each launch, and cleans itself up on `kill()`\n* Binds `Ctrl-C` (by default) to terminate the Chrome process\n* Exposes a small set of [options](#api) for configurability over these details\n\nOnce launched, interacting with the browser must be done over the [devtools protocol](https://chromedevtools.github.io/devtools-protocol/), typically via [chrome-remote-interface](https://github.com/cyrus-and/chrome-remote-interface/). For many cases [Puppeteer](https://github.com/GoogleChrome/puppeteer) is recommended, though it has its own chrome launching mechanism.\n\n### Installing\n\n```sh\nyarn add chrome-launcher\n\n# or with npm:\nnpm install chrome-launcher\n```\n\n\n## API\n\n### `.launch([opts])`\n\n#### Launch options\n\n```js\n{\n  // (optional) remote debugging port number to use. If provided port is already busy, launch() will reject\n  // Default: an available port is autoselected\n  port: number;\n\n  // (optional) Additional flags to pass to Chrome, for example: ['--headless', '--disable-gpu']\n  // See: https://github.com/GoogleChrome/chrome-launcher/blob/master/docs/chrome-flags-for-tools.md\n  // Do note, many flags are set by default: https://github.com/GoogleChrome/chrome-launcher/blob/master/src/flags.ts\n  chromeFlags: Array<string>;\n\n  // (optional) Close the Chrome process on `Ctrl-C`\n  // Default: true\n  handleSIGINT: boolean;\n\n  // (optional) Explicit path of intended Chrome binary\n Â // * If this `chromePath` option is defined, it will be used.\n  // * Otherwise, the `CHROME_PATH` env variable will be used if set. (`LIGHTHOUSE_CHROMIUM_PATH` is deprecated)\n Â // * Otherwise, a detected Chrome Canary will be used if found\n  // * Otherwise, a detected Chrome (stable) will be used\n  chromePath: string;\n\n  // (optional) Chrome profile path to use, if set to `false` then the default profile will be used.\n  // By default, a fresh Chrome profile will be created\n  userDataDir: string | boolean;\n\n  // (optional) Starting URL to open the browser with\n  // Default: `about:blank`\n  startingUrl: string;\n\n  // (optional) Logging level\n  // Default: 'silent'\n  logLevel: 'verbose'|'info'|'error'|'silent';\n\n  // (optional) Flags specific in [flags.ts](src/flags.ts) will not be included.\n  // Typically used with the defaultFlags() method and chromeFlags option.\n  // Default: false\n  ignoreDefaultFlags: boolean;\n\n  // (optional) Interval in ms, which defines how often launcher checks browser port to be ready.\n  // Default: 500\n  connectionPollInterval: number;\n\n  // (optional) A number of retries, before browser launch considered unsuccessful.\n  // Default: 50\n  maxConnectionRetries: number;\n\n  // (optional) A dict of environmental key value pairs to pass to the spawned chrome process.\n  envVars: {[key: string]: string};\n};\n```\n\n#### Launched chrome interface\n\n#### `.launch().then(chrome => ...`\n\n```js\n// The remote debugging port exposed by the launched chrome\nchrome.port: number;\n\n// Method to kill Chrome (and cleanup the profile folder)\nchrome.kill: () => Promise<void>;\n\n// The process id\nchrome.pid: number;\n\n// The childProcess object for the launched Chrome\nchrome.process: childProcess\n```\n\n### `ChromeLauncher.Launcher.defaultFlags()`\n\nReturns an `Array<string>` of the default [flags](docs/chrome-flags-for-tools.md) Chrome is launched with. Typically used along with the `ignoreDefaultFlags` and `chromeFlags` options.\n\nNote: This array will exclude the following flags: `--remote-debugging-port` `--disable-setuid-sandbox` `--user-data-dir`.\n\n### `ChromeLauncher.Launcher.getInstallations()`\n\nReturns an `Array<string>` of paths to available Chrome installations. When `chromePath` is not provided to `.launch()`, the first installation returned from this method is used instead.\n\nNote: This method performs synchronous I/O operations.\n\n### `.killAll()`\n\nAttempts to kill all Chrome instances created with [`.launch([opts])`](#launchopts). Returns a Promise that resolves to an array of errors that occurred while killing instances. If all instances were killed successfully, the array will be empty.\n\n```js\nconst ChromeLauncher = require('chrome-launcher');\n\nasync function cleanup() {\n  await ChromeLauncher.killAll();\n}\n```\n\n## Examples\n\n#### Launching chrome:\n\n```js\nconst ChromeLauncher = require('chrome-launcher');\n\nChromeLauncher.launch({\n  startingUrl: 'https://google.com'\n}).then(chrome => {\n  console.log(`Chrome debugging port running on ${chrome.port}`);\n});\n```\n\n\n#### Launching headless chrome:\n\n```js\nconst ChromeLauncher = require('chrome-launcher');\n\nChromeLauncher.launch({\n  startingUrl: 'https://google.com',\n  chromeFlags: ['--headless', '--disable-gpu']\n}).then(chrome => {\n  console.log(`Chrome debugging port running on ${chrome.port}`);\n});\n```\n\n#### Launching with support for extensions and audio:\n\n```js\nconst ChromeLauncher = require('chrome-launcher');\n\nconst newFlags = ChromeLauncher.Launcher.defaultFlags().filter(flag => flag !== '--disable-extensions' && flag !== '--mute-audio');\n\nChromeLauncher.launch({\n  ignoreDefaultFlags: true,\n  chromeFlags: newFlags,\n}).then(chrome => { ... });\n```\n\n### Continuous Integration\n\nIn a CI environment like Travis, Chrome may not be installed. If you want to use `chrome-launcher`, Travis can [install Chrome at run time with an addon](https://docs.travis-ci.com/user/chrome).  Alternatively, you can also install Chrome using the [`download-chrome.sh`](https://raw.githubusercontent.com/GoogleChrome/chrome-launcher/v0.8.0/scripts/download-chrome.sh) script.\n\nThen in `.travis.yml`, use it like so:\n\n```yaml\nlanguage: node_js\ninstall:\n  - yarn install\nbefore_script:\n  - export DISPLAY=:99.0\n  - export CHROME_PATH=\"$(pwd)/chrome-linux/chrome\"\n  - sh -e /etc/init.d/xvfb start\n  - sleep 3 # wait for xvfb to boot\n\naddons:\n  chrome: stable\n```"},"npm":{"downloads":[{"from":"2021-07-09T00:00:00.000Z","to":"2021-07-10T00:00:00.000Z","count":163825},{"from":"2021-07-03T00:00:00.000Z","to":"2021-07-10T00:00:00.000Z","count":952503},{"from":"2021-06-10T00:00:00.000Z","to":"2021-07-10T00:00:00.000Z","count":4194840},{"from":"2021-04-11T00:00:00.000Z","to":"2021-07-10T00:00:00.000Z","count":11461443},{"from":"2021-01-11T00:00:00.000Z","to":"2021-07-10T00:00:00.000Z","count":21280587},{"from":"2020-07-10T00:00:00.000Z","to":"2021-07-10T00:00:00.000Z","count":37587242}],"dependentsCount":285,"starsCount":13},"github":{"homepage":"https://www.npmjs.com/package/chrome-launcher","starsCount":803,"forksCount":131,"subscribersCount":34,"issues":{"count":243,"openCount":59,"distribution":{"3600":39,"10800":13,"32400":10,"97200":23,"291600":17,"874800":16,"2624400":22,"7873200":17,"23619600":22,"70858800":28,"212576400":36},"isDisabled":false},"contributors":[{"username":"onderceylan","commitsCount":1},{"username":"gambrose","commitsCount":1},{"username":"patrickhulce","commitsCount":10},{"username":"denismosolov","commitsCount":1},{"username":"ragingwind","commitsCount":1},{"username":"denar90","commitsCount":1},{"username":"krystophv","commitsCount":1},{"username":"paulirish","commitsCount":106},{"username":"KennethSundqvist","commitsCount":1},{"username":"selmertsx","commitsCount":1},{"username":"rishi-raj-jain","commitsCount":1},{"username":"also","commitsCount":1},{"username":"takenspc","commitsCount":1},{"username":"johanneslumpe","commitsCount":1},{"username":"G-Rath","commitsCount":2},{"username":"asakusuma","commitsCount":1},{"username":"dependabot-preview[bot]","commitsCount":1},{"username":"alexhorn","commitsCount":2},{"username":"samccone","commitsCount":35},{"username":"Gudahtt","commitsCount":1},{"username":"knksmith57","commitsCount":1},{"username":"Saafine","commitsCount":1},{"username":"wardpeet","commitsCount":5},{"username":"molant","commitsCount":2},{"username":"devrelm","commitsCount":2},{"username":"christian-bromann","commitsCount":1},{"username":"flotwig","commitsCount":1},{"username":"lifeisfoo","commitsCount":1},{"username":"ajoy39","commitsCount":1},{"username":"westy92","commitsCount":5},{"username":"KyivJunta","commitsCount":1},{"username":"paambaati","commitsCount":1},{"username":"benschwarz","commitsCount":1},{"username":"pmeinhardt","commitsCount":1},{"username":"vizo","commitsCount":1},{"username":"arturmiz","commitsCount":1},{"username":"mikecardwell","commitsCount":1},{"username":"Alhadis","commitsCount":1},{"username":"brendankenny","commitsCount":5},{"username":"alekseykulikov","commitsCount":1},{"username":"Billy-","commitsCount":1},{"username":"iominh","commitsCount":1},{"username":"johntron","commitsCount":1},{"username":"mixed","commitsCount":1},{"username":"mariyan-borisov","commitsCount":1},{"username":"i5ik","commitsCount":1},{"username":"weslenng","commitsCount":1},{"username":"asteinha","commitsCount":1}],"commits":[{"from":"2021-07-03T00:00:00.000Z","to":"2021-07-10T00:00:00.000Z","count":0},{"from":"2021-06-10T00:00:00.000Z","to":"2021-07-10T00:00:00.000Z","count":0},{"from":"2021-04-11T00:00:00.000Z","to":"2021-07-10T00:00:00.000Z","count":4},{"from":"2021-01-11T00:00:00.000Z","to":"2021-07-10T00:00:00.000Z","count":8},{"from":"2020-07-10T00:00:00.000Z","to":"2021-07-10T00:00:00.000Z","count":17}]},"source":{"files":{"readmeSize":6540,"testsSize":10914,"hasNpmIgnore":true,"hasChangelog":true},"badges":[{"urls":{"original":"https://img.shields.io/npm/v/chrome-launcher.svg","shields":"https://img.shields.io/npm/v/chrome-launcher.svg","content":"https://img.shields.io/npm/v/chrome-launcher.json"},"info":{"service":"npm","type":"version","modifiers":{"type":"v"}}}],"outdatedDependencies":{"escape-string-regexp":{"required":"^4.0.0","stable":"5.0.0","latest":"5.0.0"}}}},"evaluation":{"quality":{"carefulness":0.43499999999999994,"tests":0.6,"health":0.375,"branding":0.15},"popularity":{"communityInterest":1029,"downloadsCount":3820481,"downloadsAcceleration":13023.998230593606,"dependentsCount":285},"maintenance":{"releasesFrequency":0.5797945205479452,"commitsFrequency":0.6156164383561644,"openIssues":0.9286694101508917,"issuesDistribution":0}},"score":{"final":0.6119704877977783,"detail":{"quality":0.7325503309744861,"popularity":0.4616590880711011,"maintenance":0.6589277362301346}}}