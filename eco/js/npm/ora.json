{"analyzedAt":"2021-08-23T21:51:09.955Z","collected":{"metadata":{"name":"ora","scope":"unscoped","version":"6.0.0","description":"Elegant terminal spinner","keywords":["cli","spinner","spinners","terminal","term","console","ascii","unicode","loading","indicator","progress","busy","wait","idle"],"date":"2021-08-23T21:49:04.568Z","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"https://sindresorhus.com","username":"sindresorhus"},"publisher":{"username":"sindresorhus","email":"sindresorhus@gmail.com"},"maintainers":[{"username":"sindresorhus","email":"sindresorhus@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/sindresorhus/ora.git"},"links":{"npm":"https://www.npmjs.com/package/ora","homepage":"https://github.com/sindresorhus/ora#readme","repository":"https://github.com/sindresorhus/ora","bugs":"https://github.com/sindresorhus/ora/issues"},"license":"MIT","dependencies":{"bl":"^5.0.0","chalk":"^4.1.2","cli-cursor":"^4.0.0","cli-spinners":"^2.6.0","is-interactive":"^2.0.0","is-unicode-supported":"^1.1.0","log-symbols":"^5.0.0","strip-ansi":"^7.0.0","wcwidth":"^1.0.1"},"devDependencies":{"@types/node":"^16.7.1","ava":"^3.15.0","get-stream":"^6.0.1","transform-tty":"^1.0.11","tsd":"^0.17.0","xo":"^0.44.0"},"releases":[{"from":"2021-07-24T00:00:00.000Z","to":"2021-08-23T00:00:00.000Z","count":0},{"from":"2021-05-25T00:00:00.000Z","to":"2021-08-23T00:00:00.000Z","count":1},{"from":"2021-02-24T00:00:00.000Z","to":"2021-08-23T00:00:00.000Z","count":2},{"from":"2020-08-23T00:00:00.000Z","to":"2021-08-23T00:00:00.000Z","count":5},{"from":"2019-08-24T00:00:00.000Z","to":"2021-08-23T00:00:00.000Z","count":14}],"hasTestScript":true,"hasSelectiveFiles":true,"readme":"# ora\n\n> Elegant terminal spinner\n\n<p align=\"center\">\n\t<br>\n\t<img src=\"screenshot.svg\" width=\"500\">\n\t<br>\n</p>\n\n## Install\n\n```\n$ npm install ora\n```\n\n## Usage\n\n```js\nimport ora from 'ora';\n\nconst spinner = ora('Loading unicorns').start();\n\nsetTimeout(() => {\n\tspinner.color = 'yellow';\n\tspinner.text = 'Loading rainbows';\n}, 1000);\n```\n\n## API\n\n### ora(text)\n### ora(options)\n\nIf a string is provided, it is treated as a shortcut for [`options.text`](#text).\n\n#### options\n\nType: `object`\n\n##### text\n\nType: `string`\n\nText to display after the spinner.\n\n##### prefixText\n\nType: `string | () => string`\n\nText or a function that returns text to display before the spinner. No prefix text will be displayed if set to an empty string.\n\n##### spinner\n\nType: `string | object`\\\nDefault: `'dots'` <img src=\"screenshot-spinner.gif\" width=\"14\">\n\nName of one of the [provided spinners](https://github.com/sindresorhus/cli-spinners/blob/main/spinners.json). See `example.js` in this repo if you want to test out different spinners. On Windows, it will always use the `line` spinner as the Windows command-line doesn't have proper Unicode support.\n\nOr an object like:\n\n```js\n{\n\tinterval: 80, // Optional\n\tframes: ['-', '+', '-']\n}\n```\n\n##### color\n\nType: `string`\\\nDefault: `'cyan'`\\\nValues: `'black' | 'red' | 'green' | 'yellow' | 'blue' | 'magenta' | 'cyan' | 'white' | 'gray'`\n\nColor of the spinner.\n\n##### hideCursor\n\nType: `boolean`\\\nDefault: `true`\n\nSet to `false` to stop Ora from hiding the cursor.\n\n##### indent\n\nType: `number`\\\nDefault: `0`\n\nIndent the spinner with the given number of spaces.\n\n##### interval\n\nType: `number`\\\nDefault: Provided by the spinner or `100`\n\nInterval between each frame.\n\nSpinners provide their own recommended interval, so you don't really need to specify this.\n\n##### stream\n\nType: `stream.Writable`\\\nDefault: `process.stderr`\n\nStream to write the output.\n\nYou could for example set this to `process.stdout` instead.\n\n##### isEnabled\n\nType: `boolean`\n\nForce enable/disable the spinner. If not specified, the spinner will be enabled if the `stream` is being run inside a TTY context (not spawned or piped) and/or not in a CI environment.\n\nNote that `{isEnabled: false}` doesn't mean it won't output anything. It just means it won't output the spinner, colors, and other ansi escape codes. It will still log text.\n\n##### isSilent\n\nType: `boolean`\\\nDefault: `false`\n\nDisable the spinner and all log text. All output is suppressed and `isEnabled` will be considered `false`.\n\n##### discardStdin\n\nType: `boolean`\\\nDefault: `true`\n\nDiscard stdin input (except Ctrl+C) while running if it's TTY. This prevents the spinner from twitching on input, outputting broken lines on <kbd>Enter</kbd> key presses, and prevents buffering of input while the spinner is running.\n\nThis has no effect on Windows as there's no good way to implement discarding stdin properly there.\n\n### Instance\n\n#### .start(text?)\n\nStart the spinner. Returns the instance. Set the current text if `text` is provided.\n\n#### .stop()\n\nStop and clear the spinner. Returns the instance.\n\n#### .succeed(text?)\n\nStop the spinner, change it to a green `âœ”` and persist the current text, or `text` if provided. Returns the instance. See the GIF below.\n\n#### .fail(text?)\n\nStop the spinner, change it to a red `âœ–` and persist the current text, or `text` if provided. Returns the instance. See the GIF below.\n\n#### .warn(text?)\n\nStop the spinner, change it to a yellow `âš ` and persist the current text, or `text` if provided. Returns the instance.\n\n#### .info(text?)\n\nStop the spinner, change it to a blue `â„¹` and persist the current text, or `text` if provided. Returns the instance.\n\n#### .isSpinning\n\nA boolean of whether the instance is currently spinning.\n\n#### .stopAndPersist(options?)\n\nStop the spinner and change the symbol or text. Returns the instance. See the GIF below.\n\n##### options\n\nType: `object`\n\n###### symbol\n\nType: `string`\\\nDefault: `' '`\n\nSymbol to replace the spinner with.\n\n###### text\n\nType: `string`\\\nDefault: Current `'text'`\n\nText to be persisted after the symbol\n\n###### prefixText\n\nType: `string`\\\nDefault: Current `prefixText`\n\nText to be persisted before the symbol. No prefix text will be displayed if set to an empty string.\n\n<img src=\"screenshot-2.gif\" width=\"480\">\n\n#### .clear()\n\nClear the spinner. Returns the instance.\n\n#### .render()\n\nManually render a new frame. Returns the instance.\n\n#### .frame()\n\nGet a new frame.\n\n#### .text\n\nChange the text after the spinner.\n\n#### .prefixText\n\nChange the text before the spinner. No prefix text will be displayed if set to an empty string.\n\n#### .color\n\nChange the spinner color.\n\n#### .spinner\n\nChange the spinner.\n\n#### .indent\n\nChange the spinner indent.\n\n### oraPromise(action, text)\n### oraPromise(action, options)\n\nStarts a spinner for a promise or promise-returning function. The spinner is stopped with `.succeed()` if the promise fulfills or with `.fail()` if it rejects. Returns the promise.\n\n```js\nimport {oraPromise} from 'ora';\n\nawait oraPromise(somePromise);\n```\n\n#### action\n\nType: `Promise | ((spinner: ora.Ora) => Promise)`\n\n#### options\n\nType: `object`\n\nAll of the [options](#options) plus the following:\n\n##### successText\n\nType: `string | ((result: T) => string) | undefined`\n\nThe new text of the spinner when the promise is resolved.\n\nKeeps the existing text if `undefined`.\n\n##### failText\n\nType: `string | ((error: Error) => string) | undefined`\n\nThe new text of the spinner when the promise is rejected.\n\nKeeps the existing text if `undefined`.\n\n## FAQ\n\n### How do I change the color of the text?\n\nUse [Chalk](https://github.com/chalk/chalk):\n\n```js\nimport ora from 'ora';\nimport chalk from 'chalk';\n\nconst spinner = ora(`Loading ${chalk.red('unicorns')}`).start();\n```\n\n### Why does the spinner freeze?\n\nJavaScript is single-threaded, so synchronous operations blocks the thread, including the spinner animation. Prefer asynchronous operations whenever possible.\n\n## Related\n\n- [cli-spinners](https://github.com/sindresorhus/cli-spinners) - Spinners for use in the terminal\n- [listr](https://github.com/SamVerschueren/listr) - Terminal task list\n- [CLISpinner](https://github.com/kiliankoe/CLISpinner) - Terminal spinner library for Swift\n- [halo](https://github.com/ManrajGrover/halo) - Python port\n- [spinners](https://github.com/FGRibreau/spinners) - Terminal spinners for Rust\n- [marquee-ora](https://github.com/joeycozza/marquee-ora) - Scrolling marquee spinner for Ora\n- [briandowns/spinner](https://github.com/briandowns/spinner) - Terminal spinner/progress indicator for Go\n- [tj/go-spin](https://github.com/tj/go-spin) - Terminal spinner package for Go\n- [observablehq.com/@victordidenko/ora](https://observablehq.com/@victordidenko/ora) - Ora port to Observable notebooks\n- [spinnies](https://github.com/jcarpanelli/spinnies) - Terminal multi-spinner library for Node.js\n- [kia](https://github.com/HarryPeach/kia) - Simple terminal spinners for Deno ðŸ¦•"},"npm":{"downloads":[{"from":"2021-08-22T00:00:00.000Z","to":"2021-08-23T00:00:00.000Z","count":394189},{"from":"2021-08-16T00:00:00.000Z","to":"2021-08-23T00:00:00.000Z","count":8778443},{"from":"2021-07-24T00:00:00.000Z","to":"2021-08-23T00:00:00.000Z","count":35407066},{"from":"2021-05-25T00:00:00.000Z","to":"2021-08-23T00:00:00.000Z","count":108488114},{"from":"2021-02-24T00:00:00.000Z","to":"2021-08-23T00:00:00.000Z","count":209056409},{"from":"2020-08-23T00:00:00.000Z","to":"2021-08-23T00:00:00.000Z","count":374597553}],"dependentsCount":13828,"starsCount":145},"github":{"starsCount":7095,"forksCount":261,"subscribersCount":46,"issues":{"count":182,"openCount":11,"distribution":{"3600":26,"10800":9,"32400":17,"97200":19,"291600":13,"874800":16,"2624400":17,"7873200":27,"23619600":18,"70858800":15,"212576400":5},"isDisabled":false},"contributors":[{"username":"victordidenko","commitsCount":1},{"username":"stroncium","commitsCount":6},{"username":"josmardias","commitsCount":1},{"username":"AlphaHydrae","commitsCount":1},{"username":"sindresorhus","commitsCount":83},{"username":"brandon93s","commitsCount":1},{"username":"HarryPeach","commitsCount":1},{"username":"joeycozza","commitsCount":1},{"username":"nuintun","commitsCount":1},{"username":"matheuss","commitsCount":1},{"username":"pionl","commitsCount":1},{"username":"manrajgrover","commitsCount":1},{"username":"fregante","commitsCount":1},{"username":"andygrunwald","commitsCount":1},{"username":"LinusU","commitsCount":1},{"username":"jeetiss","commitsCount":3},{"username":"erezrokah","commitsCount":1},{"username":"jcarpanelli","commitsCount":1},{"username":"coreyfarrell","commitsCount":1},{"username":"dsl101","commitsCount":1},{"username":"guybedford","commitsCount":1},{"username":"insin","commitsCount":1},{"username":"rfreebern","commitsCount":1},{"username":"aminya","commitsCount":1},{"username":"marionebl","commitsCount":1},{"username":"SamVerschueren","commitsCount":3},{"username":"kiliankoe","commitsCount":1},{"username":"FGRibreau","commitsCount":1},{"username":"novemberborn","commitsCount":1},{"username":"yorkie","commitsCount":1},{"username":"parro-it","commitsCount":1},{"username":"michael-ciniawsky","commitsCount":1},{"username":"BendingBender","commitsCount":2},{"username":"kevva","commitsCount":1},{"username":"SrBrahma","commitsCount":1},{"username":"yaodingyd","commitsCount":1},{"username":"xavdid","commitsCount":1},{"username":"Fonger","commitsCount":1},{"username":"forresst","commitsCount":1},{"username":"1999","commitsCount":1},{"username":"Scrabouillmax","commitsCount":1},{"username":"RyanThomas73","commitsCount":1},{"username":"hoducha","commitsCount":1}],"commits":[{"from":"2021-08-16T00:00:00.000Z","to":"2021-08-23T00:00:00.000Z","count":3},{"from":"2021-07-24T00:00:00.000Z","to":"2021-08-23T00:00:00.000Z","count":3},{"from":"2021-05-25T00:00:00.000Z","to":"2021-08-23T00:00:00.000Z","count":6},{"from":"2021-02-24T00:00:00.000Z","to":"2021-08-23T00:00:00.000Z","count":8},{"from":"2020-08-23T00:00:00.000Z","to":"2021-08-23T00:00:00.000Z","count":20}]},"source":{"files":{"readmeSize":6960,"testsSize":25180},"linters":["editorconfig","xo"]}},"evaluation":{"quality":{"carefulness":0.9199999999999999,"tests":0.6,"health":1,"branding":0},"popularity":{"communityInterest":7590,"downloadsCount":36162704.666666664,"downloadsAcceleration":72267.67406773218,"dependentsCount":13828},"maintenance":{"releasesFrequency":0.9,"commitsFrequency":0.9,"openIssues":1,"issuesDistribution":0.9}},"score":{"final":0.8858178167101031,"detail":{"quality":0.8348371147464844,"popularity":0.815438846654368,"maintenance":0.999894531306083}}}