{"analyzedAt":"2021-08-18T22:42:09.595Z","collected":{"metadata":{"name":"localforage","scope":"unscoped","version":"1.10.0","description":"Offline storage, improved.","keywords":["indexeddb","localstorage","storage","websql"],"date":"2021-08-18T21:22:08.980Z","author":{"name":"Mozilla"},"publisher":{"username":"tofumatt","email":"hi@tofumatt.com"},"maintainers":[{"username":"tofumatt","email":"hi@tofumatt.com"}],"repository":{"type":"git","url":"git://github.com/localForage/localForage.git"},"links":{"npm":"https://www.npmjs.com/package/localforage","homepage":"https://github.com/localForage/localForage","repository":"https://github.com/localForage/localForage","bugs":"http://github.com/localForage/localForage/issues"},"license":"Apache-2.0","dependencies":{"lie":"3.1.1"},"devDependencies":{"babel-core":"^6.5.1","babel-eslint":"^7.2.3","babel-loader":"^6.2.2","babel-plugin-add-module-exports":"^0.1.2","babel-plugin-transform-es2015-modules-umd":"^6.5.0","babel-preset-es2015":"^6.6.0","babel-preset-es2015-loose":"^7.0.0","babelify":"^7.2.0","browserify-derequire":"^0.9.4","bundle-collapser":"^1.2.1","cors":"^2.3.1","eslint-config-prettier":"^2.9.0","grunt":"^0.4.2","grunt-babel":"^6.0.0","grunt-browserify":"^3.8.0","grunt-contrib-concat":"^0.3.0","grunt-contrib-connect":"^0.8.0","grunt-contrib-uglify":"^0.4.0","grunt-contrib-watch":"^0.5.0","grunt-es3-safe-recast":"^0.1.0","grunt-eslint":"^20.0.0","mocha-headless-chrome":"3.1.0","grunt-rollup":"^0.6.2","grunt-run":"^0.5.2","grunt-saucelabs":"^5.1.2","grunt-ts":"^6.0.0-beta.11","grunt-webpack":"^1.0.11","husky":"^2.3.0","lint-staged":"^8.1.7","load-grunt-tasks":"^0.4.0","mocha":"^3.4.2","prettier":"~1.12.0","rollupify":"^0.1.0","script-loader":"^0.6.1","typescript":"^2.0.3","uglify-js":"^2.3.x","webpack":"^1.12.13","webpack-dev-server":"^1.10.1"},"releases":[{"from":"2021-07-19T00:00:00.000Z","to":"2021-08-18T00:00:00.000Z","count":0},{"from":"2021-05-20T00:00:00.000Z","to":"2021-08-18T00:00:00.000Z","count":0},{"from":"2021-02-19T00:00:00.000Z","to":"2021-08-18T00:00:00.000Z","count":0},{"from":"2020-08-18T00:00:00.000Z","to":"2021-08-18T00:00:00.000Z","count":0},{"from":"2019-08-19T00:00:00.000Z","to":"2021-08-18T00:00:00.000Z","count":4}],"hasTestScript":true,"readme":"# localForage\n[![Build Status](https://travis-ci.org/localForage/localForage.svg?branch=master)](http://travis-ci.org/localForage/localForage)\n[![NPM version](https://badge.fury.io/js/localforage.svg)](http://badge.fury.io/js/localforage)\n[![Dependency Status](https://img.shields.io/david/localForage/localForage.svg)](https://david-dm.org/localForage/localForage)\n[![npm](https://img.shields.io/npm/dm/localforage.svg?maxAge=2592000)](https://npmcharts.com/compare/localforage?minimal=true)\n[![jsDelivr Hits](https://data.jsdelivr.com/v1/package/npm/localforage/badge?style=rounded)](https://www.jsdelivr.com/package/npm/localforage)\n[![minzipped size](https://badgen.net/bundlephobia/minzip/localforage)](https://bundlephobia.com/result?p=localforage@1.10.0)\n\nlocalForage is a fast and simple storage library for JavaScript. localForage\nimproves the offline experience of your web app by using asynchronous storage\n(IndexedDB or WebSQL) with a simple, `localStorage`-like API.\n\nlocalForage uses localStorage in browsers with no IndexedDB or\nWebSQL support. See [the wiki for detailed compatibility info][supported browsers].\n\nTo use localForage, just drop a single JavaScript file into your page:\n\n```html\n<script src=\"localforage/dist/localforage.js\"></script>\n<script>localforage.getItem('something', myCallback);</script>\n```\nTry the [live example](http://codepen.io/thgreasi/pen/ojYKeE).\n\nDownload the [latest localForage from GitHub](https://github.com/localForage/localForage/releases/latest), or install with\n[npm](https://www.npmjs.com/):\n\n```bash\nnpm install localforage\n```\n\n[supported browsers]: https://github.com/localForage/localForage/wiki/Supported-Browsers-Platforms\n\n## Support\n\nLost? Need help? Try the\n[localForage API documentation](https://localforage.github.io/localForage). [localForage API文档也有中文版。](https://localforage.docschina.org)\n\nIf you're having trouble using the library, running the tests, or want to contribute to localForage, please look through the [existing issues](https://github.com/localForage/localForage/issues) for your problem first before creating a new one. If you still need help, [feel free to file an issue](https://github.com/localForage/localForage/issues/new).\n\n# How to use localForage\n\n## Callbacks vs Promises\n\nBecause localForage uses async storage, it has an async API.\nIt's otherwise exactly the same as the\n[localStorage API](https://hacks.mozilla.org/2009/06/localstorage/).\n\nlocalForage has a dual API that allows you to either use Node-style callbacks\nor [Promises](https://www.promisejs.org/). If you are unsure which one is right for you, it's recommended to use Promises.\n\nHere's an example of the Node-style callback form:\n\n```js\nlocalforage.setItem('key', 'value', function (err) {\n  // if err is non-null, we got an error\n  localforage.getItem('key', function (err, value) {\n    // if err is non-null, we got an error. otherwise, value is the value\n  });\n});\n```\n\nAnd the Promise form:\n\n```js\nlocalforage.setItem('key', 'value').then(function () {\n  return localforage.getItem('key');\n}).then(function (value) {\n  // we got our value\n}).catch(function (err) {\n  // we got an error\n});\n```\n\nOr, use `async`/`await`:\n\n```js\ntry {\n    const value = await localforage.getItem('somekey');\n    // This code runs once the value has been loaded\n    // from the offline store.\n    console.log(value);\n} catch (err) {\n    // This code runs if there were any errors.\n    console.log(err);\n}\n```\n\nFor more examples, please visit [the API docs](https://localforage.github.io/localForage).\n\n## Storing Blobs, TypedArrays, and other JS objects\n\nYou can store any type in localForage; you aren't limited to strings like in\nlocalStorage. Even if localStorage is your storage backend, localForage\nautomatically does `JSON.parse()` and `JSON.stringify()` when getting/setting\nvalues.\n\nlocalForage supports storing all native JS objects that can be serialized to\nJSON, as well as ArrayBuffers, Blobs, and TypedArrays. Check the\n[API docs][api] for a full list of types supported by localForage.\n\nAll types are supported in every storage backend, though storage limits in\nlocalStorage make storing many large Blobs impossible.\n\n[api]: https://localforage.github.io/localForage/#data-api-setitem\n\n## Configuration\n\nYou can set database information with the `config()` method.\nAvailable options are `driver`, `name`, `storeName`, `version`, `size`, and\n`description`.\n\nExample:\n```javascript\nlocalforage.config({\n    driver      : localforage.WEBSQL, // Force WebSQL; same as using setDriver()\n    name        : 'myApp',\n    version     : 1.0,\n    size        : 4980736, // Size of database, in bytes. WebSQL-only for now.\n    storeName   : 'keyvaluepairs', // Should be alphanumeric, with underscores.\n    description : 'some description'\n});\n```\n\n**Note:** you must call `config()` _before_ you interact with your data. This\nmeans calling `config()` before using `getItem()`, `setItem()`, `removeItem()`,\n`clear()`, `key()`, `keys()` or `length()`.\n\n## Multiple instances\n\nYou can create multiple instances of localForage that point to different stores\nusing `createInstance`. All the configuration options used by\n[`config`](#configuration) are supported.\n\n``` javascript\nvar store = localforage.createInstance({\n  name: \"nameHere\"\n});\n\nvar otherStore = localforage.createInstance({\n  name: \"otherName\"\n});\n\n// Setting the key on one of these doesn't affect the other.\nstore.setItem(\"key\", \"value\");\notherStore.setItem(\"key\", \"value2\");\n```\n\n## RequireJS\n\nYou can use localForage with [RequireJS](http://requirejs.org/):\n\n```javascript\ndefine(['localforage'], function(localforage) {\n    // As a callback:\n    localforage.setItem('mykey', 'myvalue', console.log);\n\n    // With a Promise:\n    localforage.setItem('mykey', 'myvalue').then(console.log);\n});\n```\n\n## TypeScript\n\nIf you have the [`allowSyntheticDefaultImports` compiler option](https://www.typescriptlang.org/docs/handbook/compiler-options.html) set to `true` in your [tsconfig.json](https://www.typescriptlang.org/docs/handbook/tsconfig-json.html) (supported in TypeScript v1.8+), you should use:\n\n```javascript\nimport localForage from \"localforage\";\n```\n\nOtherwise you should use one of the following:\n\n```javascript\nimport * as localForage from \"localforage\";\n// or, in case that the typescript version that you are using\n// doesn't support ES6 style imports for UMD modules like localForage\nimport localForage = require(\"localforage\");\n```\n\n## Framework Support\n\nIf you use a framework listed, there's a localForage storage driver for the\nmodels in your framework so you can store data offline with localForage. We\nhave drivers for the following frameworks:\n\n* [AngularJS](https://github.com/ocombe/angular-localForage)\n* [Angular 4 and up](https://github.com/Alorel/ngforage/)\n* [Backbone](https://github.com/localForage/localForage-backbone)\n* [Ember](https://github.com/genkgo/ember-localforage-adapter)\n* [Vue](https://github.com/dmlzj/vlf)\n* [NuxtJS](https://github.com/nuxt-community/localforage-module)\n\nIf you have a driver you'd like listed, please\n[open an issue](https://github.com/localForage/localForage/issues/new) to have it\nadded to this list.\n\n## Custom Drivers\n\nYou can create your own driver if you want; see the\n[`defineDriver`](https://localforage.github.io/localForage/#driver-api-definedriver) API docs.\n\nThere is a [list of custom drivers on the wiki][custom drivers].\n\n[custom drivers]: https://github.com/localForage/localForage/wiki/Custom-Drivers\n\n# Working on localForage\n\nYou'll need [node/npm](http://nodejs.org/) and\n[bower](http://bower.io/#installing-bower).\n\nTo work on localForage, you should start by\n[forking it](https://github.com/localForage/localForage/fork) and installing its\ndependencies. Replace `USERNAME` with your GitHub username and run the\nfollowing:\n\n```bash\n# Install bower globally if you don't have it:\nnpm install -g bower\n\n# Replace USERNAME with your GitHub username:\ngit clone git@github.com:USERNAME/localForage.git\ncd localForage\nnpm install\nbower install\n```\n\nOmitting the bower dependencies will cause the tests to fail!\n\n## Running Tests\n\nYou need PhantomJS installed to run local tests. Run `npm test` (or,\ndirectly: `grunt test`). Your code must also pass the\n[linter](http://jshint.com/).\n\nlocalForage is designed to run in the browser, so the tests explicitly require\na browser environment. Local tests are run on a headless WebKit (using\n[PhantomJS](http://phantomjs.org)).\n\nWhen you submit a pull request, tests will be run against all browsers that\nlocalForage supports on Travis CI using [Sauce Labs](https://saucelabs.com/).\n\n## Library Size\nAs of version 1.7.3 the payload added to your app is rather small. Served using gzip compression, localForage will add less than 10k to your total bundle size:\n\n<dl>\n  <dt>minified</dt><dd>`~29kB`</dd>\n  <dt>gzipped</dt><dd>`~8.8kB`</dd>\n  <dt>brotli'd</dt><dd>`~7.8kB`</dd>\n</dl>\n\n# License\n\nThis program is free software; it is distributed under an\n[Apache License](https://github.com/localForage/localForage/blob/master/LICENSE).\n\n---\n\nCopyright (c) 2013-2016 [Mozilla](https://mozilla.org)\n([Contributors](https://github.com/localForage/localForage/graphs/contributors))."},"npm":{"downloads":[{"from":"2021-08-17T00:00:00.000Z","to":"2021-08-18T00:00:00.000Z","count":211796},{"from":"2021-08-11T00:00:00.000Z","to":"2021-08-18T00:00:00.000Z","count":1062224},{"from":"2021-07-19T00:00:00.000Z","to":"2021-08-18T00:00:00.000Z","count":4599042},{"from":"2021-05-20T00:00:00.000Z","to":"2021-08-18T00:00:00.000Z","count":13290896},{"from":"2021-02-19T00:00:00.000Z","to":"2021-08-18T00:00:00.000Z","count":25922506},{"from":"2020-08-18T00:00:00.000Z","to":"2021-08-18T00:00:00.000Z","count":42559968}],"dependentsCount":992,"starsCount":38},"github":{"homepage":"https://localforage.github.io/localForage","starsCount":19356,"forksCount":1131,"subscribersCount":318,"issues":{"count":1026,"openCount":209,"distribution":{"3600":172,"10800":65,"32400":68,"97200":91,"291600":71,"874800":104,"2624400":68,"7873200":81,"23619600":54,"70858800":100,"212576400":152},"isDisabled":false},"contributors":[{"username":"thgreasi","commitsCount":169},{"username":"snito","commitsCount":1},{"username":"rubennorte","commitsCount":1},{"username":"marcucio","commitsCount":3},{"username":"cesarandreu","commitsCount":1},{"username":"Toub","commitsCount":1},{"username":"quentincaffeino","commitsCount":1},{"username":"dmlzj","commitsCount":1},{"username":"owenfar","commitsCount":3},{"username":"Alorel","commitsCount":2},{"username":"michielbdejong","commitsCount":2},{"username":"JamesChevalier","commitsCount":1},{"username":"lukechilds","commitsCount":1},{"username":"iamolivinius","commitsCount":5},{"username":"duzun","commitsCount":1},{"username":"ocombe","commitsCount":13},{"username":"ossdev07","commitsCount":2},{"username":"tofumatt","commitsCount":464},{"username":"gruns","commitsCount":1},{"username":"chmp","commitsCount":1},{"username":"nantunes","commitsCount":9},{"username":"cherewaty","commitsCount":1},{"username":"pelish8","commitsCount":1},{"username":"herrmannplatz","commitsCount":1},{"username":"alexandremottet","commitsCount":4},{"username":"pgherveou","commitsCount":6},{"username":"code-vicar","commitsCount":2},{"username":"adig","commitsCount":1},{"username":"callmehiphop","commitsCount":1},{"username":"AntoninSlejska","commitsCount":1},{"username":"af7","commitsCount":4},{"username":"lu4","commitsCount":3},{"username":"willfarrell","commitsCount":1},{"username":"okcoker","commitsCount":1},{"username":"timgates42","commitsCount":1},{"username":"davidguttman","commitsCount":2},{"username":"tran2","commitsCount":1},{"username":"tomByrer","commitsCount":2},{"username":"rahatarmanahmed","commitsCount":1},{"username":"cheapsteak","commitsCount":1},{"username":"stkao05","commitsCount":1},{"username":"DaSchTour","commitsCount":1},{"username":"adambutler","commitsCount":1},{"username":"wmluke","commitsCount":2},{"username":"nolanlawson","commitsCount":8},{"username":"Evgenus","commitsCount":3},{"username":"thrashergirl","commitsCount":2},{"username":"morkro","commitsCount":1},{"username":"dpren","commitsCount":2},{"username":"jamessharp","commitsCount":1},{"username":"remy","commitsCount":1},{"username":"brettz9","commitsCount":1},{"username":"5aledmaged","commitsCount":1},{"username":"Irrelon","commitsCount":1},{"username":"jesusbotella","commitsCount":3},{"username":"sebweaver","commitsCount":7},{"username":"remkoboschker","commitsCount":1},{"username":"eppfel","commitsCount":1},{"username":"dsebastien","commitsCount":1},{"username":"LukasDrgon","commitsCount":1},{"username":"ReadmeCritic","commitsCount":1},{"username":"tylergraf","commitsCount":1},{"username":"AdamStone","commitsCount":1},{"username":"psalaets","commitsCount":4},{"username":"necccc","commitsCount":1},{"username":"rparrapy","commitsCount":1},{"username":"Glandos","commitsCount":1},{"username":"sheppard","commitsCount":1},{"username":"jontewks","commitsCount":1},{"username":"gabrielmaldi","commitsCount":2},{"username":"k88hudson","commitsCount":1},{"username":"odidev","commitsCount":1},{"username":"jviereck","commitsCount":2},{"username":"albertogasparin","commitsCount":1},{"username":"andyburke","commitsCount":1},{"username":"gyoshev","commitsCount":4},{"username":"BlackGlory","commitsCount":2},{"username":"samkelleher","commitsCount":1},{"username":"bartek","commitsCount":1},{"username":"ztamizzen","commitsCount":1},{"username":"stephanebachelier","commitsCount":5},{"username":"ahanriat","commitsCount":5},{"username":"amilajack","commitsCount":1},{"username":"potch","commitsCount":1},{"username":"ThomasRooney","commitsCount":1},{"username":"peterbe","commitsCount":5},{"username":"RangerMauve","commitsCount":2},{"username":"SheetJSDev","commitsCount":1},{"username":"thisandagain","commitsCount":11},{"username":"sole","commitsCount":10},{"username":"chrisledet","commitsCount":2},{"username":"lejenome","commitsCount":10},{"username":"magalhas","commitsCount":8},{"username":"kkirsche","commitsCount":1}],"commits":[{"from":"2021-08-11T00:00:00.000Z","to":"2021-08-18T00:00:00.000Z","count":1},{"from":"2021-07-19T00:00:00.000Z","to":"2021-08-18T00:00:00.000Z","count":1},{"from":"2021-05-20T00:00:00.000Z","to":"2021-08-18T00:00:00.000Z","count":1},{"from":"2021-02-19T00:00:00.000Z","to":"2021-08-18T00:00:00.000Z","count":1},{"from":"2020-08-18T00:00:00.000Z","to":"2021-08-18T00:00:00.000Z","count":1}],"statuses":[{"context":"github/pages","state":"success"}]},"source":{"files":{"readmeSize":9223,"testsSize":392048,"hasNpmIgnore":true,"hasChangelog":true},"badges":[{"urls":{"original":"https://travis-ci.org/localForage/localForage.svg?branch=master","service":"https://api.travis-ci.org/localForage/localForage.svg?branch=master","shields":"https://img.shields.io/travis/localForage/localForage/master.svg","content":"https://img.shields.io/travis/localForage/localForage/master.json"},"info":{"service":"travis","type":"build","modifiers":{"branch":"master"}}},{"urls":{"original":"https://img.shields.io/david/localForage/localForage.svg","service":"https://david-dm.org/localForage/localForage.svg","shields":"https://img.shields.io/david/localForage/localForage.svg","content":"https://img.shields.io/david/localForage/localForage.json"},"info":{"service":"david","type":"dependencies","modifiers":{"statusType":"normal"}}},{"urls":{"original":"https://img.shields.io/npm/dm/localforage.svg?maxAge=2592000","shields":"https://img.shields.io/npm/dm/localforage.svg","content":"https://img.shields.io/npm/dm/localforage.json"},"info":{"service":"npm","type":"downloads","modifiers":{"type":"dm"}}}],"linters":["eslint","prettier"],"outdatedDependencies":{"lie":{"required":"3.1.1","stable":"3.3.0","latest":"3.3.0"}}}},"evaluation":{"quality":{"carefulness":0.9999999999999999,"tests":0.85,"health":0.75,"branding":0.44999999999999996},"popularity":{"communityInterest":20937,"downloadsCount":4430298.666666667,"downloadsAcceleration":16027.504528158293,"dependentsCount":992},"maintenance":{"releasesFrequency":0.04931506849315069,"commitsFrequency":0.30900684931506844,"openIssues":0.9938271604938272,"issuesDistribution":0}},"score":{"final":0.6422815339963748,"detail":{"quality":0.9694784478223578,"popularity":0.6345247592816843,"maintenance":0.3695838111459372}}}