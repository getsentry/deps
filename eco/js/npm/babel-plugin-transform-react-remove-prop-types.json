{"analyzedAt":"2021-07-07T20:24:35.113Z","collected":{"metadata":{"name":"babel-plugin-transform-react-remove-prop-types","scope":"unscoped","version":"0.4.24","description":"Remove unnecessary React propTypes from the production build","keywords":["babel","babel-plugin","react","minification","propTypes"],"date":"2019-02-01T21:38:39.044Z","author":{"name":"Nikita Gusakov"},"publisher":{"username":"lencioni","email":"joe.lencioni@gmail.com"},"maintainers":[{"username":"oliviertassinari","email":"olivier.tassinari@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/oliviertassinari/babel-plugin-transform-react-remove-prop-types.git"},"links":{"npm":"https://www.npmjs.com/package/babel-plugin-transform-react-remove-prop-types","homepage":"https://github.com/oliviertassinari/babel-plugin-transform-react-remove-prop-types#readme","repository":"https://github.com/oliviertassinari/babel-plugin-transform-react-remove-prop-types","bugs":"https://github.com/oliviertassinari/babel-plugin-transform-react-remove-prop-types/issues"},"license":"MIT","devDependencies":{"@babel/cli":"^7.1.0","@babel/core":"^7.1.0","@babel/generator":"^7.0.0","@babel/plugin-external-helpers":"^7.0.0","@babel/plugin-proposal-class-properties":"^7.1.0","@babel/plugin-transform-flow-strip-types":"^7.0.0","@babel/preset-env":"^7.1.0","@babel/preset-flow":"^7.0.0","@babel/preset-react":"^7.0.0","@babel/register":"^7.0.0","babel-eslint":"^9.0.0","babel-plugin-flow-react-proptypes":"^6.1.0","chai":"^4.1.2","eslint":"^4.11.0","eslint-config-airbnb":"^16.1.0","eslint-plugin-babel":"^4.1.2","eslint-plugin-flowtype":"^2.39.1","eslint-plugin-import":"^2.8.0","eslint-plugin-jsx-a11y":"^6.0.2","eslint-plugin-mocha":"^4.11.0","eslint-plugin-prettier":"^2.3.1","eslint-plugin-react":"^7.4.0","globby":"^8.0.1","mocha":"^4.0.1","pkgfiles":"^2.3.2","prettier":"^1.14.3"},"releases":[{"from":"2021-06-07T00:00:00.000Z","to":"2021-07-07T00:00:00.000Z","count":0},{"from":"2021-04-08T00:00:00.000Z","to":"2021-07-07T00:00:00.000Z","count":0},{"from":"2021-01-08T00:00:00.000Z","to":"2021-07-07T00:00:00.000Z","count":0},{"from":"2020-07-07T00:00:00.000Z","to":"2021-07-07T00:00:00.000Z","count":0},{"from":"2019-07-08T00:00:00.000Z","to":"2021-07-07T00:00:00.000Z","count":0}],"hasTestScript":true,"readme":"# babel-plugin-transform-react-remove-prop-types\n\n> Remove unnecessary React propTypes from the production build.\n\n[![npm version](https://img.shields.io/npm/v/babel-plugin-transform-react-remove-prop-types.svg)](https://www.npmjs.com/package/babel-plugin-transform-react-remove-prop-types)\n[![npm downloads](https://img.shields.io/npm/dm/babel-plugin-transform-react-remove-prop-types.svg)](https://www.npmjs.com/package/babel-plugin-transform-react-remove-prop-types)\n[![Build Status](https://travis-ci.org/oliviertassinari/babel-plugin-transform-react-remove-prop-types.svg?branch=master)](https://travis-ci.org/oliviertassinari/babel-plugin-transform-react-remove-prop-types)\n\n[![Dependencies](https://img.shields.io/david/oliviertassinari/babel-plugin-transform-react-remove-prop-types.svg)](https://david-dm.org/oliviertassinari/babel-plugin-transform-react-remove-prop-types)\n[![DevDependencies](https://img.shields.io/david/dev/oliviertassinari/babel-plugin-transform-react-remove-prop-types.svg)](https://david-dm.org/oliviertassinari/babel-plugin-transform-react-remove-prop-types?type=dev)\n\n## Installation\n\n```sh\nnpm install --save-dev babel-plugin-transform-react-remove-prop-types\n```\n\n## The problem solved\n\nRemove React `propTypes` from the production build, as they are only used in development.\nYou can **save bandwidth** by removing them.\n\n## Example\n\n**In**\n```jsx\nconst Baz = (props) => (\n  <div {...props} />\n);\n\nBaz.propTypes = {\n  className: PropTypes.string\n};\n```\n\n**Out**\n```jsx\nconst Baz = (props) => (\n  <div {...props} />\n);\n```\n\n### With comment annotation\n\nThe majority of cases should be addressed by default by this plugin.\n\nIn some cases, for example when using HOCs (High Order Components), like *react-redux*'s `connect`, or component inheritance ([although it's NOT recommended](https://facebook.github.io/react/docs/composition-vs-inheritance.html)), a comment after the `propTypes` definition may be used to force the removal:\n\n```js\nComponent.propTypes /* remove-proptypes */ = {}\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nwithout options:\n```json\n{\n  \"env\": {\n    \"production\": {\n      \"plugins\": [\"transform-react-remove-prop-types\"]\n    }\n  }\n}\n```\n\nwith options:\n```json\n{\n  \"env\": {\n    \"production\": {\n      \"plugins\": [\n        [\"transform-react-remove-prop-types\", {\n          \"mode\": \"wrap\",\n          \"ignoreFilenames\": [\"node_modules\"]\n        }]\n      ]\n    }\n  }\n}\n```\n\n### Via CLI\n\n```sh\nbabel --plugins transform-react-remove-prop-types script.js\n```\n\n### Via Node API\n\nwithout options:\n```js\nrequire('babel-core').transform('code', {\n  plugins: [\n    'transform-react-remove-prop-types',\n  ],\n});\n```\n\nwith options:\n```js\nrequire('babel-core').transform('code', {\n  plugins: [\n    [\n      'transform-react-remove-prop-types',\n      {\n        mode: 'wrap',\n        ignoreFilenames: ['node_modules'],\n      },\n    ],\n  ],\n});\n```\n\n## Options\n\n### `mode`\n\n - `remove` (default):\nthe `propTypes` definitions are removed from the source code.\n - `wrap`:\nthe `propTypes` definitions are wrapped with the following code:\n```js\nComponent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  // ...\n} : {};\n```\nAccessing `Component.propTypes.className` won't throw. It's a tradeoff between the size of the output file and the likelihood libraries like [react-native-hyperlink](https://github.com/obipawan/react-native-hyperlink/pull/11) breaks.\n - `unsafe-wrap`:\nthe `propTypes` definitions are wrapped with the following code:\n```js\nif (process.env.NODE_ENV !== \"production\") {\n  Component.propTypes = {\n    // ...\n  }\n}\n```\nAccessing `Component.propTypes.className` will throw.\n\nThe *wrap* modes are targeting React libraries like [material-ui](https://github.com/callemall/material-ui) or [react-native-web](https://github.com/necolas/react-native-web).\nThey are not intended to be used by application authors.\n\n### `removeImport`\n\n - `true`: the import statements are removed as well. This option only works if `mode` is set to `remove`:\n```js\nimport PropTypes from 'prop-types'\n```\n - `false` (default): does not remove the import statements.\n\n### `ignoreFilenames`\n\nThis filter generates a regular expression.\nAny filenames containing one of the array's strings will be ignored.\nBy **default**, we match everything.\n\nFollowing the [Is it safe?](#user-content-is-it-safe) section, you might encounter a component\ndepending on the `propTypes` at runtime to work.\nFor this reason, we provide an array options to filter out some files and folders.\nFor instance, you can ignore all the npm modules:\n```js\nignoreFilenames: ['node_modules'],\n```\n\n### `additionalLibraries`\n\nThis option gives the possibility to remove other `propTypes` in addition to the canonical `prop-types`.\n\nFor instance, by default\n```js\nimport PropTypes from 'prop-types'\nimport ImmutablePropTypes from 'react-immutable-proptypes'\n```\nwill result in the latter not to be removed, while with:\n```js\nadditionalLibraries: ['react-immutable-proptypes'],\n```\nboth will be removed.\n\n#### Regular expressions\n\nIf you are using Babel 7 or newer and your config is stored in [`babel.config.js`](https://babeljs.io/docs/en/configuration#babelconfigjs), you can also use a regular expression to describe modules, which should be removed.\n\nThis would be particularly useful when using custom prop types validators, implemented as part of your own source code. For example\n\n```js\nimport CustomPropTypes from '../../prop-types/my-own-validator'\nimport OtherCustomPropTypes from '../../prop-types/my-other-validator'\n```\n\nwould be removed with the following setting\n\n```js\nadditionalLibraries: [/\\/prop-types\\/.*$/]\n```\n\nIf you use an index file\n\n```js\nimport CustomPropTypes from '../../prop-types'\n```\n\nyou could set it up as\n\n```js\nadditionalLibraries: [/\\/prop-types$/]\n```\n\n### `classNameMatchers`\n\nUse this option to enable this plugin to run on components that extend a class different than `React.Component` or `React.PureComponent`.\n\nGiven this example:\n```js\nclass MyComponent extends BaseComponent {\n  ...\n}\n```\n\nYou would use:\n```js\nclassNameMatchers: [\"BaseComponent\"]\n```\n\n### `createReactClassName`\n\nUse this option to set a custom name for the import of the `create-react-class` package that is different than `createReactClass`.\n\nGiven this example:\n\n```js\nimport createClass from 'create-react-class';\n```\n\nYou would use:\n\n```js\ncreateReactClassName: 'createClass'\n```\n\n## Is it safe?\n\nIf you are using the `propTypes` in a conventional way,\ni.e by using them to perform type checking on the properties, that plugin should be **safe to use**.\n\nHowever, some libraries are accessing the `propTypes` on the component directly.\nFor instance [react-native-vector-icons](https://github.com/oblador/react-native-vector-icons/blob/3d1f2a5b7175d6e4c8985676940240776543ff60/lib/icon-button.js#L59) use them to split the properties between two components:\n```js\nconst touchableProps = pick(restProps, Object.keys(TouchableHighlight.propTypes));\n```\n:warning: The plugin is breaking that code if it ends up removing `TouchableHighlight.propTypes`.\n\nMake sure you are:\n- Not using that pattern in your source code.\nIf you do, explicitly **export** the `propTypes` to work around that limitation.\n- Not parsing the `node_modules`.\nIf you do, test that your code is still working before shipping into production.\n\n[eslint-plugin-react has a rule forbid-foreign-prop-types](https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/forbid-foreign-prop-types.md) that can help you make this plugin safer to use.\n\n## License\n\nMIT"},"npm":{"downloads":[{"from":"2021-07-06T00:00:00.000Z","to":"2021-07-07T00:00:00.000Z","count":683099},{"from":"2021-06-30T00:00:00.000Z","to":"2021-07-07T00:00:00.000Z","count":3587934},{"from":"2021-06-07T00:00:00.000Z","to":"2021-07-07T00:00:00.000Z","count":16586547},{"from":"2021-04-08T00:00:00.000Z","to":"2021-07-07T00:00:00.000Z","count":48924078},{"from":"2021-01-08T00:00:00.000Z","to":"2021-07-07T00:00:00.000Z","count":100167061},{"from":"2020-07-07T00:00:00.000Z","to":"2021-07-07T00:00:00.000Z","count":189956300}],"dependentsCount":737,"starsCount":16},"github":{"starsCount":892,"forksCount":62,"subscribersCount":14,"issues":{"count":199,"openCount":17,"distribution":{"3600":73,"10800":10,"32400":24,"97200":35,"291600":8,"874800":9,"2624400":13,"7873200":7,"23619600":3,"70858800":10,"212576400":7},"isDisabled":false},"contributors":[{"username":"wy-ei","commitsCount":1},{"username":"lencioni","commitsCount":20},{"username":"bitfrost","commitsCount":1},{"username":"gandazgul","commitsCount":1},{"username":"helmus","commitsCount":1},{"username":"vikr01","commitsCount":2},{"username":"bryanrsmith","commitsCount":1},{"username":"EnoahNetzach","commitsCount":8},{"username":"greenkeeperio-bot","commitsCount":12},{"username":"NogsMPLS","commitsCount":1},{"username":"azizhk","commitsCount":7},{"username":"eps1lon","commitsCount":2},{"username":"nkt","commitsCount":27},{"username":"lukeapage","commitsCount":1},{"username":"newyork-anthonyng","commitsCount":1},{"username":"STRML","commitsCount":3},{"username":"tquetano-netflix","commitsCount":2},{"username":"bnjbvr","commitsCount":1},{"username":"layershifter","commitsCount":1},{"username":"dependabot[bot]","commitsCount":2},{"username":"vieron","commitsCount":1},{"username":"insin","commitsCount":1},{"username":"pkuczynski","commitsCount":2},{"username":"danez","commitsCount":1},{"username":"oliviertassinari","commitsCount":116},{"username":"jjow","commitsCount":1}],"commits":[{"from":"2021-06-30T00:00:00.000Z","to":"2021-07-07T00:00:00.000Z","count":0},{"from":"2021-06-07T00:00:00.000Z","to":"2021-07-07T00:00:00.000Z","count":0},{"from":"2021-04-08T00:00:00.000Z","to":"2021-07-07T00:00:00.000Z","count":0},{"from":"2021-01-08T00:00:00.000Z","to":"2021-07-07T00:00:00.000Z","count":0},{"from":"2020-07-07T00:00:00.000Z","to":"2021-07-07T00:00:00.000Z","count":0}],"statuses":[{"context":"continuous-integration/travis-ci/push","state":"success"}]},"source":{"files":{"readmeSize":7575,"testsSize":77913,"hasNpmIgnore":true,"hasChangelog":true},"badges":[{"urls":{"original":"https://img.shields.io/npm/v/babel-plugin-transform-react-remove-prop-types.svg","shields":"https://img.shields.io/npm/v/babel-plugin-transform-react-remove-prop-types.svg","content":"https://img.shields.io/npm/v/babel-plugin-transform-react-remove-prop-types.json"},"info":{"service":"npm","type":"version","modifiers":{"type":"v"}}},{"urls":{"original":"https://img.shields.io/npm/dm/babel-plugin-transform-react-remove-prop-types.svg","shields":"https://img.shields.io/npm/dm/babel-plugin-transform-react-remove-prop-types.svg","content":"https://img.shields.io/npm/dm/babel-plugin-transform-react-remove-prop-types.json"},"info":{"service":"npm","type":"downloads","modifiers":{"type":"dm"}}},{"urls":{"original":"https://travis-ci.org/oliviertassinari/babel-plugin-transform-react-remove-prop-types.svg?branch=master","service":"https://api.travis-ci.org/oliviertassinari/babel-plugin-transform-react-remove-prop-types.svg?branch=master","shields":"https://img.shields.io/travis/oliviertassinari/babel-plugin-transform-react-remove-prop-types/master.svg","content":"https://img.shields.io/travis/oliviertassinari/babel-plugin-transform-react-remove-prop-types/master.json"},"info":{"service":"travis","type":"build","modifiers":{"branch":"master"}}},{"urls":{"original":"https://img.shields.io/david/oliviertassinari/babel-plugin-transform-react-remove-prop-types.svg","service":"https://david-dm.org/oliviertassinari/babel-plugin-transform-react-remove-prop-types.svg","shields":"https://img.shields.io/david/oliviertassinari/babel-plugin-transform-react-remove-prop-types.svg","content":"https://img.shields.io/david/oliviertassinari/babel-plugin-transform-react-remove-prop-types.json"},"info":{"service":"david","type":"dependencies","modifiers":{"statusType":"normal"}}},{"urls":{"original":"https://img.shields.io/david/dev/oliviertassinari/babel-plugin-transform-react-remove-prop-types.svg","service":"https://david-dm.org/oliviertassinari/babel-plugin-transform-react-remove-prop-types/dev-status.svg","shields":"https://img.shields.io/david/dev/oliviertassinari/babel-plugin-transform-react-remove-prop-types.svg","content":"https://img.shields.io/david/dev/oliviertassinari/babel-plugin-transform-react-remove-prop-types.json"},"info":{"service":"david","type":"dependencies","modifiers":{"statusType":"dev"}}}],"linters":["eslint","prettier"]}},"evaluation":{"quality":{"carefulness":0.49999999999999994,"tests":0.85,"health":1,"branding":0.6},"popularity":{"communityInterest":1010,"downloadsCount":16308026,"downloadsAcceleration":17128.033466514462,"dependentsCount":737},"maintenance":{"releasesFrequency":0,"commitsFrequency":0,"openIssues":1,"issuesDistribution":0.34641607758648035}},"score":{"final":0.6227794217579428,"detail":{"quality":0.8974266023843905,"popularity":0.5587100172794224,"maintenance":0.4514369571280793}}}