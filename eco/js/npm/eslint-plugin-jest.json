{"analyzedAt":"2021-07-21T23:50:54.938Z","collected":{"metadata":{"name":"eslint-plugin-jest","scope":"unscoped","version":"24.4.0","description":"Eslint rules for Jest","keywords":["eslint","eslintplugin","eslint-plugin"],"date":"2021-07-21T20:48:38.583Z","author":{"name":"Jonathan Kim","email":"hello@jkimbo.com","url":"jkimbo.com"},"publisher":{"username":"simenb","email":"sbekkhus91@gmail.com"},"maintainers":[{"username":"simenb","email":"sbekkhus91@gmail.com"},{"username":"rickhanlonii","email":"rickhanlonii@gmail.com"},{"username":"thymikee","email":"thymikee@gmail.com"},{"username":"jsonp","email":"jason@jason-palmer.com"},{"username":"orta","email":"orta.therox@gmail.com"},{"username":"rogeliog","email":"rogelioguzmanh@gmail.com"},{"username":"mattphillips","email":"matt@mattphillips.io"},{"username":"jeysal","email":"seckinger.tim@gmail.com"},{"username":"rubennorte","email":"rubennorte@gmail.com"},{"username":"fb","email":"opensource+npm@fb.com"},{"username":"aaronabramov","email":"aaron@abramov.io"}],"repository":{"type":"git","url":"git+https://github.com/jest-community/eslint-plugin-jest.git"},"links":{"npm":"https://www.npmjs.com/package/eslint-plugin-jest","homepage":"https://github.com/jest-community/eslint-plugin-jest#readme","repository":"https://github.com/jest-community/eslint-plugin-jest","bugs":"https://github.com/jest-community/eslint-plugin-jest/issues"},"license":"MIT","dependencies":{"@typescript-eslint/experimental-utils":"^4.0.1"},"devDependencies":{"@babel/cli":"^7.4.4","@babel/core":"^7.4.4","@babel/preset-env":"^7.4.4","@babel/preset-typescript":"^7.3.3","@commitlint/cli":"^12.0.0","@commitlint/config-conventional":"^12.0.0","@schemastore/package":"^0.0.6","@semantic-release/changelog":"^5.0.1","@semantic-release/git":"^9.0.0","@types/dedent":"^0.7.0","@types/jest":"^26.0.0","@types/node":"^14.0.0","@types/prettier":"^2.0.0","@typescript-eslint/eslint-plugin":"^4.0.1","@typescript-eslint/parser":"^4.0.1","babel-jest":"^27.0.0","babel-plugin-replace-ts-export-assignment":"^0.0.2","dedent":"^0.7.0","eslint":"^5.1.0 || ^6.0.0 || ^7.0.0","eslint-config-prettier":"^6.5.0","eslint-plugin-eslint-comments":"^3.1.2","eslint-plugin-eslint-config":"^2.0.0","eslint-plugin-eslint-plugin":"^2.0.0","eslint-plugin-import":"^2.20.2","eslint-plugin-node":"^11.0.0","eslint-plugin-prettier":"^3.0.0","husky":"^6.0.0","is-ci":"^3.0.0","jest":"^27.0.0","jest-runner-eslint":"^0.10.0","lint-staged":"^10.2.2","pinst":"^2.0.0","prettier":"^2.0.5","resolve-from":"^5.0.0","rimraf":"^3.0.0","semantic-release":"^17.0.7","ts-node":"^9.0.0","typescript":"^4.0.0"},"peerDependencies":{"@typescript-eslint/eslint-plugin":">= 4","eslint":">=5"},"releases":[{"from":"2021-06-21T00:00:00.000Z","to":"2021-07-21T00:00:00.000Z","count":0},{"from":"2021-04-22T00:00:00.000Z","to":"2021-07-21T00:00:00.000Z","count":1},{"from":"2021-01-22T00:00:00.000Z","to":"2021-07-21T00:00:00.000Z","count":16},{"from":"2020-07-21T00:00:00.000Z","to":"2021-07-21T00:00:00.000Z","count":27},{"from":"2019-07-22T00:00:00.000Z","to":"2021-07-21T00:00:00.000Z","count":76}],"hasTestScript":true,"hasSelectiveFiles":true,"readme":"<div align=\"center\">\n  <a href=\"https://eslint.org/\">\n    <img width=\"150\" height=\"150\" src=\"https://eslint.org/assets/img/logo.svg\">\n  </a>\n  <a href=\"https://facebook.github.io/jest/\">\n    <img width=\"150\" height=\"150\" vspace=\"\" hspace=\"25\" src=\"https://jestjs.io/img/jest.png\">\n  </a>\n  <h1>eslint-plugin-jest</h1>\n  <p>ESLint plugin for Jest</p>\n</div>\n\n[![Actions Status](https://github.com/jest-community/eslint-plugin-jest/actions/workflows/nodejs.yml/badge.svg?branch=main)](https://github.com/jest-community/eslint-plugin-jest/actions)\n\n## Installation\n\n```bash\nyarn add --dev eslint eslint-plugin-jest\n```\n\n**Note:** If you installed ESLint globally then you must also install\n`eslint-plugin-jest` globally.\n\n## Usage\n\nAdd `jest` to the plugins section of your `.eslintrc` configuration file. You\ncan omit the `eslint-plugin-` prefix:\n\n```json\n{\n  \"plugins\": [\"jest\"]\n}\n```\n\nThen configure the rules you want to use under the rules section.\n\n```json\n{\n  \"rules\": {\n    \"jest/no-disabled-tests\": \"warn\",\n    \"jest/no-focused-tests\": \"error\",\n    \"jest/no-identical-title\": \"error\",\n    \"jest/prefer-to-have-length\": \"warn\",\n    \"jest/valid-expect\": \"error\"\n  }\n}\n```\n\nYou can also tell ESLint about the environment variables provided by Jest by\ndoing:\n\n```json\n{\n  \"env\": {\n    \"jest/globals\": true\n  }\n}\n```\n\nThis is included in all configs shared by this plugin, so can be omitted if\nextending them.\n\nThe behaviour of some rules (specifically `no-deprecated-functions`) change\ndepending on the version of `jest` being used.\n\nThis setting is detected automatically based off the version of the `jest`\npackage installed in `node_modules`, but it can also be provided explicitly if\ndesired:\n\n```json\n{\n  \"settings\": {\n    \"jest\": {\n      \"version\": 26\n    }\n  }\n}\n```\n\n## Shareable configurations\n\n### Recommended\n\nThis plugin exports a recommended configuration that enforces good testing\npractices.\n\nTo enable this configuration use the `extends` property in your `.eslintrc`\nconfig file:\n\n```json\n{\n  \"extends\": [\"plugin:jest/recommended\"]\n}\n```\n\n### Style\n\nThis plugin also exports a configuration named `style`, which adds some\nstylistic rules, such as `prefer-to-be-null`, which enforces usage of `toBeNull`\nover `toBe(null)`.\n\nTo enable this configuration use the `extends` property in your `.eslintrc`\nconfig file:\n\n```json\n{\n  \"extends\": [\"plugin:jest/style\"]\n}\n```\n\nSee\n[ESLint documentation](http://eslint.org/docs/user-guide/configuring#extending-configuration-files)\nfor more information about extending configuration files.\n\n### All\n\nIf you want to enable all rules instead of only some you can do so by adding the\n`all` configuration to your `.eslintrc` config file:\n\n```json\n{\n  \"extends\": [\"plugin:jest/all\"]\n}\n```\n\nWhile the `recommended` and `style` configurations only change in major versions\nthe `all` configuration may change in any release and is thus unsuited for\ninstallations requiring long-term consistency.\n\n## Rules\n\n<!-- begin base rules list -->\n\n| Rule                                                                         | Description                                                     | Configurations   | Fixable      |\n| ---------------------------------------------------------------------------- | --------------------------------------------------------------- | ---------------- | ------------ |\n| [consistent-test-it](docs/rules/consistent-test-it.md)                       | Have control over `test` and `it` usages                        |                  | ![fixable][] |\n| [expect-expect](docs/rules/expect-expect.md)                                 | Enforce assertion to be made in a test body                     | ![recommended][] |              |\n| [lowercase-name](docs/rules/lowercase-name.md)                               | Enforce lowercase test names                                    |                  | ![fixable][] |\n| [max-nested-describe](docs/rules/max-nested-describe.md)                     | Enforces a maximum depth to nested describe calls               |                  |              |\n| [no-alias-methods](docs/rules/no-alias-methods.md)                           | Disallow alias methods                                          | ![style][]       | ![fixable][] |\n| [no-commented-out-tests](docs/rules/no-commented-out-tests.md)               | Disallow commented out tests                                    | ![recommended][] |              |\n| [no-conditional-expect](docs/rules/no-conditional-expect.md)                 | Prevent calling `expect` conditionally                          | ![recommended][] |              |\n| [no-deprecated-functions](docs/rules/no-deprecated-functions.md)             | Disallow use of deprecated functions                            | ![recommended][] | ![fixable][] |\n| [no-disabled-tests](docs/rules/no-disabled-tests.md)                         | Disallow disabled tests                                         | ![recommended][] |              |\n| [no-done-callback](docs/rules/no-done-callback.md)                           | Avoid using a callback in asynchronous tests and hooks          | ![recommended][] | ![suggest][] |\n| [no-duplicate-hooks](docs/rules/no-duplicate-hooks.md)                       | Disallow duplicate setup and teardown hooks                     |                  |              |\n| [no-export](docs/rules/no-export.md)                                         | Disallow using `exports` in files containing tests              | ![recommended][] |              |\n| [no-focused-tests](docs/rules/no-focused-tests.md)                           | Disallow focused tests                                          | ![recommended][] | ![suggest][] |\n| [no-hooks](docs/rules/no-hooks.md)                                           | Disallow setup and teardown hooks                               |                  |              |\n| [no-identical-title](docs/rules/no-identical-title.md)                       | Disallow identical titles                                       | ![recommended][] |              |\n| [no-if](docs/rules/no-if.md)                                                 | Disallow conditional logic                                      |                  |              |\n| [no-interpolation-in-snapshots](docs/rules/no-interpolation-in-snapshots.md) | Disallow string interpolation inside snapshots                  | ![recommended][] |              |\n| [no-jasmine-globals](docs/rules/no-jasmine-globals.md)                       | Disallow Jasmine globals                                        | ![recommended][] | ![fixable][] |\n| [no-jest-import](docs/rules/no-jest-import.md)                               | Disallow importing Jest                                         | ![recommended][] |              |\n| [no-large-snapshots](docs/rules/no-large-snapshots.md)                       | disallow large snapshots                                        |                  |              |\n| [no-mocks-import](docs/rules/no-mocks-import.md)                             | Disallow manually importing from `__mocks__`                    | ![recommended][] |              |\n| [no-restricted-matchers](docs/rules/no-restricted-matchers.md)               | Disallow specific matchers & modifiers                          |                  |              |\n| [no-standalone-expect](docs/rules/no-standalone-expect.md)                   | Disallow using `expect` outside of `it` or `test` blocks        | ![recommended][] |              |\n| [no-test-prefixes](docs/rules/no-test-prefixes.md)                           | Use `.only` and `.skip` over `f` and `x`                        | ![recommended][] | ![fixable][] |\n| [no-test-return-statement](docs/rules/no-test-return-statement.md)           | Disallow explicitly returning from tests                        |                  |              |\n| [prefer-called-with](docs/rules/prefer-called-with.md)                       | Suggest using `toBeCalledWith()` or `toHaveBeenCalledWith()`    |                  |              |\n| [prefer-expect-assertions](docs/rules/prefer-expect-assertions.md)           | Suggest using `expect.assertions()` OR `expect.hasAssertions()` |                  | ![suggest][] |\n| [prefer-hooks-on-top](docs/rules/prefer-hooks-on-top.md)                     | Suggest having hooks before any test cases                      |                  |              |\n| [prefer-spy-on](docs/rules/prefer-spy-on.md)                                 | Suggest using `jest.spyOn()`                                    |                  | ![fixable][] |\n| [prefer-strict-equal](docs/rules/prefer-strict-equal.md)                     | Suggest using `toStrictEqual()`                                 |                  | ![suggest][] |\n| [prefer-to-be-null](docs/rules/prefer-to-be-null.md)                         | Suggest using `toBeNull()`                                      | ![style][]       | ![fixable][] |\n| [prefer-to-be-undefined](docs/rules/prefer-to-be-undefined.md)               | Suggest using `toBeUndefined()`                                 | ![style][]       | ![fixable][] |\n| [prefer-to-contain](docs/rules/prefer-to-contain.md)                         | Suggest using `toContain()`                                     | ![style][]       | ![fixable][] |\n| [prefer-to-have-length](docs/rules/prefer-to-have-length.md)                 | Suggest using `toHaveLength()`                                  | ![style][]       | ![fixable][] |\n| [prefer-todo](docs/rules/prefer-todo.md)                                     | Suggest using `test.todo`                                       |                  | ![fixable][] |\n| [require-to-throw-message](docs/rules/require-to-throw-message.md)           | Require a message for `toThrow()`                               |                  |              |\n| [require-top-level-describe](docs/rules/require-top-level-describe.md)       | Require test cases and hooks to be inside a `describe` block    |                  |              |\n| [valid-describe](docs/rules/valid-describe.md)                               | Enforce valid `describe()` callback                             | ![recommended][] |              |\n| [valid-expect](docs/rules/valid-expect.md)                                   | Enforce valid `expect()` usage                                  | ![recommended][] |              |\n| [valid-expect-in-promise](docs/rules/valid-expect-in-promise.md)             | Enforce having return statement when testing with promises      | ![recommended][] |              |\n| [valid-title](docs/rules/valid-title.md)                                     | Enforce valid titles                                            | ![recommended][] | ![fixable][] |\n\n<!-- end base rules list -->\n\n## TypeScript Rules\n\nIn addition to the above rules, this plugin also includes a few advanced rules\nthat are powered by type-checking information provided by TypeScript.\n\nIn order to use these rules, you must be using `@typescript-eslint/parser` &\nadjust your eslint config as outlined\n[here](https://github.com/typescript-eslint/typescript-eslint/blob/master/docs/getting-started/linting/TYPED_LINTING.md)\n\nNote that unlike the type-checking rules in `@typescript-eslint/eslint-plugin`,\nthe rules here will fallback to doing nothing if type information is not\navailable, meaning its safe to include them in shared configs that could be used\non JavaScript and TypeScript projects.\n\nAlso note that `unbound-method` depends on `@typescript-eslint/eslint-plugin`,\nas it extends the original `unbound-method` rule from that plugin.\n\n<!-- begin type rules list -->\n\n| Rule                                           | Description                                                   | Configurations | Fixable |\n| ---------------------------------------------- | ------------------------------------------------------------- | -------------- | ------- |\n| [unbound-method](docs/rules/unbound-method.md) | Enforces unbound methods are called with their expected scope |                |         |\n\n<!-- end type rules list -->\n\n## Credit\n\n- [eslint-plugin-mocha](https://github.com/lo1tuma/eslint-plugin-mocha)\n- [eslint-plugin-jasmine](https://github.com/tlvince/eslint-plugin-jasmine)\n\n## Related Projects\n\n### eslint-plugin-jest-formatting\n\nThis project aims to provide formatting rules (auto-fixable where possible) to\nensure consistency and readability in jest test suites.\n\nhttps://github.com/dangreenisrael/eslint-plugin-jest-formatting\n\n### eslint-plugin-istanbul\n\nA set of rules to enforce good practices for Istanbul, one of the code coverage\ntools used by Jest.\n\nhttps://github.com/istanbuljs/eslint-plugin-istanbul\n\n[recommended]: https://img.shields.io/badge/-recommended-lightgrey.svg\n[suggest]: https://img.shields.io/badge/-suggest-yellow.svg\n[fixable]: https://img.shields.io/badge/-fixable-green.svg\n[style]: https://img.shields.io/badge/-style-blue.svg"},"npm":{"downloads":[{"from":"2021-07-20T00:00:00.000Z","to":"2021-07-21T00:00:00.000Z","count":848681},{"from":"2021-07-14T00:00:00.000Z","to":"2021-07-21T00:00:00.000Z","count":4478223},{"from":"2021-06-21T00:00:00.000Z","to":"2021-07-21T00:00:00.000Z","count":19830359},{"from":"2021-04-22T00:00:00.000Z","to":"2021-07-21T00:00:00.000Z","count":57245510},{"from":"2021-01-22T00:00:00.000Z","to":"2021-07-21T00:00:00.000Z","count":108645241},{"from":"2020-07-21T00:00:00.000Z","to":"2021-07-21T00:00:00.000Z","count":173897503}],"dependentsCount":1811,"starsCount":12},"github":{"starsCount":767,"forksCount":157,"subscribersCount":11,"issues":{"count":859,"openCount":48,"distribution":{"3600":210,"10800":78,"32400":94,"97200":99,"291600":56,"874800":71,"2624400":85,"7873200":50,"23619600":53,"70858800":52,"212576400":11},"isDisabled":false},"contributors":[{"username":"Morikko","commitsCount":1},{"username":"bradzacher","commitsCount":1},{"username":"ericnakagawa","commitsCount":1},{"username":"anescobar1991","commitsCount":1},{"username":"thymikee","commitsCount":2},{"username":"mcampa","commitsCount":1},{"username":"j-f1","commitsCount":1},{"username":"garyking","commitsCount":4},{"username":"msvab","commitsCount":1},{"username":"mattphillips","commitsCount":1},{"username":"leonardovillela","commitsCount":1},{"username":"luftywiranda13","commitsCount":1},{"username":"jkimbo","commitsCount":2},{"username":"noahbenham","commitsCount":4},{"username":"himynameisdave","commitsCount":2},{"username":"bz2","commitsCount":1},{"username":"ismail-syed","commitsCount":1},{"username":"arnaudbesnier","commitsCount":1},{"username":"with-heart","commitsCount":2},{"username":"cartogram","commitsCount":3},{"username":"suganya-sangith","commitsCount":1},{"username":"semantic-release-bot","commitsCount":59},{"username":"folke","commitsCount":2},{"username":"motiz88","commitsCount":1},{"username":"jdelStrother","commitsCount":1},{"username":"SimenB","commitsCount":157},{"username":"pascalduez","commitsCount":1},{"username":"antonk52","commitsCount":1},{"username":"renovate-bot","commitsCount":3},{"username":"cpojer","commitsCount":15},{"username":"hulkish","commitsCount":2},{"username":"paularmstrong","commitsCount":1},{"username":"k-yle","commitsCount":3},{"username":"eventualbuddha","commitsCount":1},{"username":"tushardhole","commitsCount":4},{"username":"JohanBrorson","commitsCount":1},{"username":"callumgare","commitsCount":1},{"username":"xfumihiro","commitsCount":8},{"username":"Saberre","commitsCount":1},{"username":"doniyor2109","commitsCount":1},{"username":"eranshabi","commitsCount":1},{"username":"lukeapage","commitsCount":1},{"username":"teriu","commitsCount":1},{"username":"ronami","commitsCount":1},{"username":"slaweet","commitsCount":1},{"username":"orta","commitsCount":1},{"username":"dangreenisrael","commitsCount":1},{"username":"Belco90","commitsCount":1},{"username":"benmonro","commitsCount":2},{"username":"chrisblossom","commitsCount":3},{"username":"dlackty","commitsCount":1},{"username":"ranyitz","commitsCount":10},{"username":"rogeliog","commitsCount":1},{"username":"tryggvigy","commitsCount":2},{"username":"viestat","commitsCount":1},{"username":"anilreddykatta","commitsCount":1},{"username":"stormslowly","commitsCount":1},{"username":"idan-at","commitsCount":4},{"username":"G-Rath","commitsCount":195},{"username":"ricardogobbosouza","commitsCount":1},{"username":"jeysal","commitsCount":2},{"username":"jcfranco","commitsCount":1},{"username":"yatki","commitsCount":3},{"username":"nferrara100","commitsCount":1},{"username":"greenkeeperio-bot","commitsCount":2},{"username":"sidharthv96","commitsCount":1},{"username":"Mark1626","commitsCount":3},{"username":"JrSchild","commitsCount":1},{"username":"blake-newman","commitsCount":1},{"username":"macklinu","commitsCount":23},{"username":"borilla","commitsCount":1},{"username":"chentsulin","commitsCount":1},{"username":"katakonst","commitsCount":1},{"username":"rickhanlonii","commitsCount":1},{"username":"hanneslund","commitsCount":2},{"username":"armano2","commitsCount":1},{"username":"kangax","commitsCount":2},{"username":"brianlmacdonald","commitsCount":2},{"username":"targos","commitsCount":1},{"username":"StephanBijzitter","commitsCount":1},{"username":"golergka","commitsCount":1},{"username":"greenkeeper[bot]","commitsCount":8},{"username":"dominictwlee","commitsCount":1},{"username":"jacekkopecky","commitsCount":1},{"username":"tinovyatkin","commitsCount":1},{"username":"deecewan","commitsCount":1},{"username":"erunion","commitsCount":1},{"username":"jackfranklin","commitsCount":2},{"username":"captbaritone","commitsCount":1},{"username":"scriptdaemon","commitsCount":1},{"username":"sudo-suhas","commitsCount":3},{"username":"Userbit","commitsCount":1},{"username":"alagane","commitsCount":1},{"username":"shaunwallace","commitsCount":1},{"username":"dargmuesli","commitsCount":1},{"username":"aaronabramov","commitsCount":1},{"username":"mpontus","commitsCount":1}],"commits":[{"from":"2021-07-14T00:00:00.000Z","to":"2021-07-21T00:00:00.000Z","count":5},{"from":"2021-06-21T00:00:00.000Z","to":"2021-07-21T00:00:00.000Z","count":9},{"from":"2021-04-22T00:00:00.000Z","to":"2021-07-21T00:00:00.000Z","count":33},{"from":"2021-01-22T00:00:00.000Z","to":"2021-07-21T00:00:00.000Z","count":103},{"from":"2020-07-21T00:00:00.000Z","to":"2021-07-21T00:00:00.000Z","count":191}]},"source":{"files":{"readmeSize":12963,"testsSize":339174,"hasNpmIgnore":true,"hasChangelog":true},"linters":["eslint","prettier"],"coverage":1}},"evaluation":{"quality":{"carefulness":0.9999999999999999,"tests":0.75,"health":1,"branding":0},"popularity":{"communityInterest":1044,"downloadsCount":19081836.666666668,"downloadsAcceleration":77933.40218797565,"dependentsCount":1811},"maintenance":{"releasesFrequency":1,"commitsFrequency":1,"openIssues":1,"issuesDistribution":0.5353238447116684}},"score":{"final":0.8281565450689168,"detail":{"quality":0.8664175963382268,"popularity":0.6333702512927942,"maintenance":0.9901476520427737}}}