{"analyzedAt":"2021-07-20T16:13:30.479Z","collected":{"metadata":{"name":"style-loader","scope":"unscoped","version":"3.2.1","description":"style loader module for webpack","keywords":["webpack"],"date":"2021-07-20T15:57:07.660Z","author":{"name":"Tobias Koppers @sokra"},"publisher":{"username":"evilebottnawi","email":"sheo13666q@gmail.com"},"maintainers":[{"username":"evilebottnawi","email":"sheo13666q@gmail.com"},{"username":"sokra","email":"tobias.koppers@googlemail.com"},{"username":"jhnns","email":"mail@johannesewald.de"},{"username":"michael-ciniawsky","email":"michael.ciniawsky@gmail.com"},{"username":"d3viant0ne","email":"wiens.joshua@gmail.com"},{"username":"bebraw","email":"bebraw@gmail.com"},{"username":"ericclemmons","email":"eric@smarterspam.com"},{"username":"thelarkinn","email":"sean.larkin@cuw.edu"}],"repository":{"type":"git","url":"git+https://github.com/webpack-contrib/style-loader.git"},"links":{"npm":"https://www.npmjs.com/package/style-loader","homepage":"https://github.com/webpack-contrib/style-loader","repository":"https://github.com/webpack-contrib/style-loader","bugs":"https://github.com/webpack-contrib/style-loader/issues"},"license":"MIT","devDependencies":{"@babel/cli":"^7.14.5","@babel/core":"^7.14.6","@babel/preset-env":"^7.14.5","@commitlint/cli":"^12.1.4","@commitlint/config-conventional":"^12.1.4","@webpack-contrib/eslint-config-webpack":"^3.0.0","babel-jest":"^27.0.6","cross-env":"^7.0.3","css-loader":"^5.2.7","del":"^6.0.0","del-cli":"^4.0.1","es-check":"5.2.3","eslint":"^7.30.0","eslint-config-prettier":"^8.3.0","eslint-plugin-import":"^2.23.4","file-loader":"^6.2.0","husky":"^7.0.1","jest":"^27.0.6","jsdom":"^16.6.0","lint-staged":"^11.0.1","memfs":"^3.2.2","npm-run-all":"^4.1.5","prettier":"^2.3.2","sass":"^1.35.2","sass-loader":"^12.1.0","semver":"^7.3.4","standard-version":"^9.3.1","webpack":"^5.45.1","webpack-cli":"^4.7.2","webpack-dev-server":"^3.11.2"},"peerDependencies":{"webpack":"^5.0.0"},"releases":[{"from":"2021-06-20T00:00:00.000Z","to":"2021-07-20T00:00:00.000Z","count":2},{"from":"2021-04-21T00:00:00.000Z","to":"2021-07-20T00:00:00.000Z","count":2},{"from":"2021-01-21T00:00:00.000Z","to":"2021-07-20T00:00:00.000Z","count":2},{"from":"2020-07-20T00:00:00.000Z","to":"2021-07-20T00:00:00.000Z","count":4},{"from":"2019-07-21T00:00:00.000Z","to":"2021-07-20T00:00:00.000Z","count":15}],"hasTestScript":true,"hasSelectiveFiles":true,"readme":"<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\"\n      src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n  <h1>Style Loader</h1>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# style-loader\n\nInject CSS into the DOM.\n\n## Getting Started\n\nTo begin, you'll need to install `style-loader`:\n\n```console\nnpm install --save-dev style-loader\n```\n\nIt's recommended to combine `style-loader` with the [`css-loader`](https://github.com/webpack-contrib/css-loader)\n\nThen add the loader to your `webpack` config. For example:\n\n**style.css**\n\n```css\nbody {\n  background: green;\n}\n```\n\n**component.js**\n\n```js\nimport \"./style.css\";\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\"style-loader\", \"css-loader\"],\n      },\n    ],\n  },\n};\n```\n\n## Options\n\n|                     Name                      |         Type         |   Default   | Description                                                |\n| :-------------------------------------------: | :------------------: | :---------: | :--------------------------------------------------------- |\n|        [**`injectType`**](#injecttype)        |      `{String}`      | `styleTag`  | Allows to setup how styles will be injected into the DOM   |\n|        [**`attributes`**](#attributes)        |      `{Object}`      |    `{}`     | Adds custom attributes to tag                              |\n|            [**`insert`**](#insert)            | `{String\\|Function}` |   `head`    | Inserts tag at the given position into the DOM             |\n| [**`styleTagTransform`**](#styleTagTransform) | `{String\\|Function}` | `undefined` | Transform tag and css when insert 'style' tag into the DOM |\n|              [**`base`**](#base)              |      `{Number}`      |   `true`    | Sets module ID base (DLLPlugin)                            |\n|          [**`esModule`**](#esmodule)          |     `{Boolean}`      |   `true`    | Use ES modules syntax                                      |\n\n### `injectType`\n\nType: `String`\nDefault: `styleTag`\n\nAllows to setup how styles will be injected into the DOM.\n\nPossible values:\n\n- `styleTag`\n- `singletonStyleTag`\n- `autoStyleTag`\n- `lazyStyleTag`\n- `lazySingletonStyleTag`\n- `lazyAutoStyleTag`\n- `linkTag`\n\n#### `styleTag`\n\nAutomatically injects styles into the DOM using multiple `<style></style>`. It is **default** behaviour.\n\n**component.js**\n\n```js\nimport \"./styles.css\";\n```\n\nExample with Locals (CSS Modules):\n\n**component-with-css-modules.js**\n\n```js\nimport styles from \"./styles.css\";\n\nconst divElement = document.createElement(\"div\");\ndivElement.className = styles[\"my-class\"];\n```\n\nAll locals (class names) stored in imported object.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          // The `injectType`  option can be avoided because it is default behaviour\n          { loader: \"style-loader\", options: { injectType: \"styleTag\" } },\n          \"css-loader\",\n        ],\n      },\n    ],\n  },\n};\n```\n\nThe loader inject styles like:\n\n```html\n<style>\n  .foo {\n    color: red;\n  }\n</style>\n<style>\n  .bar {\n    color: blue;\n  }\n</style>\n```\n\n#### `singletonStyleTag`\n\nAutomatically injects styles into the DOM using one `<style></style>`.\n\n> ⚠ Source maps do not work.\n\n**component.js**\n\n```js\nimport \"./styles.css\";\n```\n\n**component-with-css-modules.js**\n\n```js\nimport styles from \"./styles.css\";\n\nconst divElement = document.createElement(\"div\");\ndivElement.className = styles[\"my-class\"];\n```\n\nAll locals (class names) stored in imported object.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: \"style-loader\",\n            options: { injectType: \"singletonStyleTag\" },\n          },\n          \"css-loader\",\n        ],\n      },\n    ],\n  },\n};\n```\n\nThe loader inject styles like:\n\n```html\n<style>\n  .foo {\n    color: red;\n  }\n  .bar {\n    color: blue;\n  }\n</style>\n```\n\n#### `autoStyleTag`\n\nWorks the same as a [`styleTag`](#styleTag), but if the code is executed in IE6-9, turns on the [`singletonStyleTag`](#singletonStyleTag) mode.\n\n#### `lazyStyleTag`\n\nInjects styles into the DOM using multiple `<style></style>` on demand.\nWe recommend following `.lazy.css` naming convention for lazy styles and the `.css` for basic `style-loader` usage (similar to other file types, i.e. `.lazy.less` and `.less`).\nWhen you `lazyStyleTag` value the `style-loader` injects the styles lazily making them useable on-demand via `style.use()` / `style.unuse()`.\n\n> ⚠️ Behavior is undefined when `unuse` is called more often than `use`. Don't do that.\n\n**component.js**\n\n```js\nimport styles from \"./styles.lazy.css\";\n\nstyles.use();\n// For removing styles you can use\n// styles.unuse();\n```\n\n**component-with-css-modules.js**\n\n```js\nimport styles from \"./styles.lazy.css\";\n\nstyles.use();\n\nconst divElement = document.createElement(\"div\");\ndivElement.className = styles.locals[\"my-class\"];\n```\n\nAll locals (class names) stored in `locals` property of imported object.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        exclude: /\\.lazy\\.css$/i,\n        use: [\"style-loader\", \"css-loader\"],\n      },\n      {\n        test: /\\.lazy\\.css$/i,\n        use: [\n          { loader: \"style-loader\", options: { injectType: \"lazyStyleTag\" } },\n          \"css-loader\",\n        ],\n      },\n    ],\n  },\n};\n```\n\nThe loader inject styles like:\n\n```html\n<style>\n  .foo {\n    color: red;\n  }\n</style>\n<style>\n  .bar {\n    color: blue;\n  }\n</style>\n```\n\n#### `lazySingletonStyleTag`\n\nInjects styles into the DOM using one `<style></style>` on demand.\nWe recommend following `.lazy.css` naming convention for lazy styles and the `.css` for basic `style-loader` usage (similar to other file types, i.e. `.lazy.less` and `.less`).\nWhen you `lazySingletonStyleTag` value the `style-loader` injects the styles lazily making them useable on-demand via `style.use()` / `style.unuse()`.\n\n> ⚠️ Source maps do not work.\n\n> ⚠️ Behavior is undefined when `unuse` is called more often than `use`. Don't do that.\n\n**component.js**\n\n```js\nimport styles from \"./styles.css\";\n\nstyles.use();\n// For removing styles you can use\n// styles.unuse();\n```\n\n**component-with-css-modules.js**\n\n```js\nimport styles from \"./styles.lazy.css\";\n\nstyles.use();\n\nconst divElement = document.createElement(\"div\");\ndivElement.className = styles.locals[\"my-class\"];\n```\n\nAll locals (class names) stored in `locals` property of imported object.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        exclude: /\\.lazy\\.css$/i,\n        use: [\"style-loader\", \"css-loader\"],\n      },\n      {\n        test: /\\.lazy\\.css$/i,\n        use: [\n          {\n            loader: \"style-loader\",\n            options: { injectType: \"lazySingletonStyleTag\" },\n          },\n          \"css-loader\",\n        ],\n      },\n    ],\n  },\n};\n```\n\nThe loader generate this:\n\n```html\n<style>\n  .foo {\n    color: red;\n  }\n  .bar {\n    color: blue;\n  }\n</style>\n```\n\n#### `lazyAutoStyleTag`\n\nWorks the same as a [`lazyStyleTag`](#lazyStyleTag), but if the code is executed in IE6-9, turns on the [`lazySingletonStyleTag`](#lazySingletonStyleTag) mode.\n\n#### `linkTag`\n\nInjects styles into the DOM using multiple `<link rel=\"stylesheet\" href=\"path/to/file.css\">` .\n\n> ℹ️ The loader will dynamically insert the `<link href=\"path/to/file.css\" rel=\"stylesheet\">` tag at runtime via JavaScript. You should use [MiniCssExtractPlugin](https://webpack.js.org/plugins/mini-css-extract-plugin/) if you want to include a static `<link href=\"path/to/file.css\" rel=\"stylesheet\">`.\n\n```js\nimport \"./styles.css\";\nimport \"./other-styles.css\";\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.link\\.css$/i,\n        use: [\n          { loader: \"style-loader\", options: { injectType: \"linkTag\" } },\n          { loader: \"file-loader\" },\n        ],\n      },\n    ],\n  },\n};\n```\n\nThe loader generate this:\n\n```html\n<link rel=\"stylesheet\" href=\"path/to/style.css\" />\n<link rel=\"stylesheet\" href=\"path/to/other-styles.css\" />\n```\n\n### `attributes`\n\nType: `Object`\nDefault: `{}`\n\nIf defined, the `style-loader` will attach given attributes with their values on `<style>` / `<link>` element.\n\n**component.js**\n\n```js\nimport style from \"./file.css\";\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          { loader: \"style-loader\", options: { attributes: { id: \"id\" } } },\n          { loader: \"css-loader\" },\n        ],\n      },\n    ],\n  },\n};\n```\n\n```html\n<style id=\"id\"></style>\n```\n\n### `insert`\n\nType: `String|Function`\nDefault: `head`\n\nBy default, the `style-loader` appends `<style>`/`<link>` elements to the end of the style target, which is the `<head>` tag of the page unless specified by `insert`.\nThis will cause CSS created by the loader to take priority over CSS already present in the target.\nYou can use other values if the standard behavior is not suitable for you, but we do not recommend doing this.\nIf you target an [iframe](https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement) make sure you have sufficient access rights, the styles will be injected into the content document head.\n\n#### `String`\n\n##### `Selector`\n\nAllows to setup custom [query selector](https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector) where styles inject into the DOM.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: \"style-loader\",\n            options: {\n              insert: \"body\",\n            },\n          },\n          \"css-loader\",\n        ],\n      },\n    ],\n  },\n};\n```\n\n##### `Absolute path to function`\n\nAllows to setup absolute path to custom function that allows to override default behavior and insert styles at any position.\n\n> ⚠ Do not forget that this code will be used in the browser and not all browsers support latest ECMA features like `let`, `const`, `arrow function expression` and etc. We recommend using [`babel-loader`](https://webpack.js.org/loaders/babel-loader/) for support latest ECMA features.\n> ⚠ Do not forget that some DOM methods may not be available in older browsers, we recommended use only [DOM core level 2 properties](https://caniuse.com/#search=DOM%20Core), but it is depends what browsers you want to support\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: \"style-loader\",\n            options: {\n              insert: require.resolve(\"modulePath\"),\n            },\n          },\n          \"css-loader\",\n        ],\n      },\n    ],\n  },\n};\n```\n\nA new `<style>`/`<link>` elements will be inserted into at bottom of `body` tag.\n\n#### `Function`\n\nAllows to override default behavior and insert styles at any position.\n\n> ⚠ Do not forget that this code will be used in the browser and not all browsers support latest ECMA features like `let`, `const`, `arrow function expression` and etc, we recommend use only ECMA 5 features, but it is depends what browsers you want to support\n> ⚠ Do not forget that some DOM methods may not be available in older browsers, we recommended use only [DOM core level 2 properties](https://caniuse.com/#search=DOM%20Core), but it is depends what browsers you want to support\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: \"style-loader\",\n            options: {\n              insert: function insertAtTop(element) {\n                var parent = document.querySelector(\"head\");\n                // eslint-disable-next-line no-underscore-dangle\n                var lastInsertedElement =\n                  window._lastElementInsertedByStyleLoader;\n\n                if (!lastInsertedElement) {\n                  parent.insertBefore(element, parent.firstChild);\n                } else if (lastInsertedElement.nextSibling) {\n                  parent.insertBefore(element, lastInsertedElement.nextSibling);\n                } else {\n                  parent.appendChild(element);\n                }\n\n                // eslint-disable-next-line no-underscore-dangle\n                window._lastElementInsertedByStyleLoader = element;\n              },\n            },\n          },\n          \"css-loader\",\n        ],\n      },\n    ],\n  },\n};\n```\n\nInsert styles at top of `head` tag.\n\n### `styleTagTransform`\n\nType: `String | Function`\nDefault: `undefined`\n\n#### `String`\n\nAllows to setup absolute path to custom function that allows to override default behavior styleTagTransform.\n\n> ⚠ Do not forget that this code will be used in the browser and not all browsers support latest ECMA features like `let`, `const`, `arrow function expression` and etc, we recommend use only ECMA 5 features, but it is depends what browsers you want to support\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: \"style-loader\",\n            options: {\n              injectType: \"styleTag\",\n              styleTagTransform: require.resolve(\"module-path\"),\n            },\n          },\n          \"css-loader\",\n        ],\n      },\n    ],\n  },\n};\n```\n\n#### `Function`\n\nTransform tag and css when insert 'style' tag into the DOM.\n\n> ⚠ Do not forget that this code will be used in the browser and not all browsers support latest ECMA features like `let`, `const`, `arrow function expression` and etc, we recommend use only ECMA 5 features, but it is depends what browsers you want to support\n> ⚠ Do not forget that some DOM methods may not be available in older browsers, we recommended use only [DOM core level 2 properties](https://caniuse.com/#search=DOM%20Core), but it is depends what browsers you want to support\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: \"style-loader\",\n            options: {\n              injectType: \"styleTag\",\n              styleTagTransform: function (css, style) {\n                // Do something ...\n                style.innerHTML = `${css}.modify{}\\n`;\n\n                document.head.appendChild(style);\n              },\n            },\n          },\n          \"css-loader\",\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `base`\n\nThis setting is primarily used as a workaround for [css clashes](https://github.com/webpack-contrib/style-loader/issues/163) when using one or more [DllPlugin](https://robertknight.me.uk/posts/webpack-dll-plugins/)'s. `base` allows you to prevent either the _app_'s css (or _DllPlugin2_'s css) from overwriting _DllPlugin1_'s css by specifying a css module id base which is greater than the range used by _DllPlugin1_ e.g.:\n\n**webpack.dll1.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\"style-loader\", \"css-loader\"],\n      },\n    ],\n  },\n};\n```\n\n**webpack.dll2.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          { loader: \"style-loader\", options: { base: 1000 } },\n          \"css-loader\",\n        ],\n      },\n    ],\n  },\n};\n```\n\n**webpack.app.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          { loader: \"style-loader\", options: { base: 2000 } },\n          \"css-loader\",\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `esModule`\n\nType: `Boolean`\nDefault: `true`\n\nBy default, `style-loader` generates JS modules that use the ES modules syntax.\nThere are some cases in which using ES modules is beneficial, like in the case of [module concatenation](https://webpack.js.org/plugins/module-concatenation-plugin/) and [tree shaking](https://webpack.js.org/guides/tree-shaking/).\n\nYou can enable a CommonJS modules syntax using:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: \"style-loader\",\n        options: {\n          esModule: false,\n        },\n      },\n    ],\n  },\n};\n```\n\n## Examples\n\n### Recommend\n\nFor `production` builds it's recommended to extract the CSS from your bundle being able to use parallel loading of CSS/JS resources later on.\nThis can be achieved by using the [mini-css-extract-plugin](https://github.com/webpack-contrib/mini-css-extract-plugin), because it creates separate css files.\nFor `development` mode (including `webpack-dev-server`) you can use `style-loader`, because it injects CSS into the DOM using multiple <style></style> and works faster.\n\n> i Do not use together `style-loader` and `mini-css-extract-plugin`.\n\n**webpack.config.js**\n\n```js\nconst MiniCssExtractPlugin = require(\"mini-css-extract-plugin\");\nconst devMode = process.env.NODE_ENV !== \"production\";\n\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(sa|sc|c)ss$/,\n        use: [\n          devMode ? \"style-loader\" : MiniCssExtractPlugin.loader,\n          \"css-loader\",\n          \"postcss-loader\",\n          \"sass-loader\",\n        ],\n      },\n    ],\n  },\n  plugins: [].concat(devMode ? [] : [new MiniCssExtractPlugin()]),\n};\n```\n\n### Named export for CSS Modules\n\n> ⚠ Names of locals are converted to `camelCase`.\n\n> ⚠ It is not allowed to use JavaScript reserved words in css class names.\n\n> ⚠ Options `esModule` and `modules.namedExport` in `css-loader` should be enabled.\n\n**styles.css**\n\n```css\n.foo-baz {\n  color: red;\n}\n.bar {\n  color: blue;\n}\n```\n\n**index.js**\n\n```js\nimport { fooBaz, bar } from \"./styles.css\";\n\nconsole.log(fooBaz, bar);\n```\n\nYou can enable a ES module named export using:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [\n          {\n            loader: \"style-loader\",\n          },\n          {\n            loader: \"css-loader\",\n            options: {\n              modules: {\n                namedExport: true,\n              },\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### Source maps\n\nThe loader automatically inject source maps when previous loader emit them.\nTherefore, to generate source maps, set the `sourceMap` option to `true` for the previous loader.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          \"style-loader\",\n          { loader: \"css-loader\", options: { sourceMap: true } },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### Nonce\n\nThere are two ways to work with `nonce`:\n\n- using the `attributes` option\n- using the `__webpack_nonce__` variable\n\n> ⚠ the `attributes` option takes precedence over the `__webpack_nonce__` variable\n\n#### `attributes`\n\n**component.js**\n\n```js\nimport \"./style.css\";\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: \"style-loader\",\n            options: {\n              attributes: {\n                nonce: \"12345678\",\n              },\n            },\n          },\n          \"css-loader\",\n        ],\n      },\n    ],\n  },\n};\n```\n\nThe loader generate:\n\n```html\n<style nonce=\"12345678\">\n  .foo {\n    color: red;\n  }\n</style>\n```\n\n#### `__webpack_nonce__`\n\n**create-nonce.js**\n\n```js\n__webpack_nonce__ = \"12345678\";\n```\n\n**component.js**\n\n```js\nimport \"./create-nonce.js\";\nimport \"./style.css\";\n```\n\nAlternative example for `require`:\n\n**component.js**\n\n```js\n__webpack_nonce__ = \"12345678\";\n\nrequire(\"./style.css\");\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\"style-loader\", \"css-loader\"],\n      },\n    ],\n  },\n};\n```\n\nThe loader generate:\n\n```html\n<style nonce=\"12345678\">\n  .foo {\n    color: red;\n  }\n</style>\n```\n\n#### Insert styles at top\n\nInserts styles at top of `head` tag.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: \"style-loader\",\n            options: {\n              insert: function insertAtTop(element) {\n                var parent = document.querySelector(\"head\");\n                var lastInsertedElement =\n                  window._lastElementInsertedByStyleLoader;\n\n                if (!lastInsertedElement) {\n                  parent.insertBefore(element, parent.firstChild);\n                } else if (lastInsertedElement.nextSibling) {\n                  parent.insertBefore(element, lastInsertedElement.nextSibling);\n                } else {\n                  parent.appendChild(element);\n                }\n\n                window._lastElementInsertedByStyleLoader = element;\n              },\n            },\n          },\n          \"css-loader\",\n        ],\n      },\n    ],\n  },\n};\n```\n\n#### Insert styles before target element\n\nInserts styles before `#id` element.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: \"style-loader\",\n            options: {\n              insert: function insertBeforeAt(element) {\n                const parent = document.querySelector(\"head\");\n                const target = document.querySelector(\"#id\");\n\n                const lastInsertedElement =\n                  window._lastElementInsertedByStyleLoader;\n\n                if (!lastInsertedElement) {\n                  parent.insertBefore(element, target);\n                } else if (lastInsertedElement.nextSibling) {\n                  parent.insertBefore(element, lastInsertedElement.nextSibling);\n                } else {\n                  parent.appendChild(element);\n                }\n\n                window._lastElementInsertedByStyleLoader = element;\n              },\n            },\n          },\n          \"css-loader\",\n        ],\n      },\n    ],\n  },\n};\n```\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/style-loader.svg\n[npm-url]: https://npmjs.com/package/style-loader\n[node]: https://img.shields.io/node/v/style-loader.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/style-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/style-loader\n[tests]: https://github.com/webpack-contrib/style-loader/workflows/style-loader/badge.svg\n[tests-url]: https://github.com/webpack-contrib/style-loader/actions\n[cover]: https://codecov.io/gh/webpack-contrib/style-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/style-loader\n[chat]: https://badges.gitter.im/webpack/webpack.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=style-loader\n[size-url]: https://packagephobia.now.sh/result?p=style-loader"},"npm":{"downloads":[{"from":"2021-07-19T00:00:00.000Z","to":"2021-07-20T00:00:00.000Z","count":2003913},{"from":"2021-07-13T00:00:00.000Z","to":"2021-07-20T00:00:00.000Z","count":10902265},{"from":"2021-06-20T00:00:00.000Z","to":"2021-07-20T00:00:00.000Z","count":46175245},{"from":"2021-04-21T00:00:00.000Z","to":"2021-07-20T00:00:00.000Z","count":139308450},{"from":"2021-01-21T00:00:00.000Z","to":"2021-07-20T00:00:00.000Z","count":278967539},{"from":"2020-07-20T00:00:00.000Z","to":"2021-07-20T00:00:00.000Z","count":518138542}],"dependentsCount":10361,"starsCount":99},"github":{"starsCount":1533,"forksCount":454,"subscribersCount":32,"issues":{"count":528,"openCount":11,"distribution":{"3600":129,"10800":29,"32400":26,"97200":52,"291600":36,"874800":35,"2624400":30,"7873200":40,"23619600":63,"70858800":77,"212576400":11},"isDisabled":false},"contributors":[{"username":"Lin84","commitsCount":1},{"username":"iamdavidfrancis","commitsCount":1},{"username":"edave64","commitsCount":1},{"username":"oskarer","commitsCount":1},{"username":"hiroppy","commitsCount":1},{"username":"jasonenglish","commitsCount":1},{"username":"dkaoster","commitsCount":1},{"username":"avaly","commitsCount":1},{"username":"johnjacobkenny","commitsCount":1},{"username":"dangreen","commitsCount":1},{"username":"TaopaiC","commitsCount":1},{"username":"okchangwon","commitsCount":1},{"username":"ekulabuhov","commitsCount":3},{"username":"shama","commitsCount":1},{"username":"drawyan","commitsCount":1},{"username":"simon04","commitsCount":3},{"username":"alexbaumgertner","commitsCount":1},{"username":"arseniew","commitsCount":1},{"username":"snitin315","commitsCount":6},{"username":"crucialfelix","commitsCount":1},{"username":"alexander-akait","commitsCount":18},{"username":"piperchester","commitsCount":1},{"username":"marcogrcr","commitsCount":1},{"username":"SimenB","commitsCount":1},{"username":"kevinzwhuang","commitsCount":1},{"username":"krail","commitsCount":1},{"username":"brafdlog","commitsCount":1},{"username":"sirlancelot","commitsCount":1},{"username":"mgol","commitsCount":2},{"username":"amoshydra","commitsCount":1},{"username":"gryzzly","commitsCount":1},{"username":"savelichalex","commitsCount":1},{"username":"akki-jat","commitsCount":1},{"username":"Vasikaran","commitsCount":1},{"username":"brandondurham","commitsCount":1},{"username":"danielberndt","commitsCount":1},{"username":"jaesung2061","commitsCount":1},{"username":"mistadikay","commitsCount":1},{"username":"ahstro","commitsCount":1},{"username":"liady","commitsCount":1},{"username":"zachlysobey","commitsCount":1},{"username":"winterbe","commitsCount":1},{"username":"FlyingDR","commitsCount":1},{"username":"anikethsaha","commitsCount":1},{"username":"SpaceK33z","commitsCount":2},{"username":"svenheden","commitsCount":2},{"username":"dimitarivanov","commitsCount":1},{"username":"DenisIzmaylov","commitsCount":1},{"username":"KonstantinKai","commitsCount":1},{"username":"kabab","commitsCount":1},{"username":"zxcabs","commitsCount":1},{"username":"ilanc","commitsCount":1},{"username":"krrg","commitsCount":1},{"username":"verticalpalette","commitsCount":1},{"username":"pleunv","commitsCount":1},{"username":"jonathantneal","commitsCount":2},{"username":"blainekasten","commitsCount":1},{"username":"michael-ciniawsky","commitsCount":20},{"username":"Nouzbe","commitsCount":1},{"username":"ryantd","commitsCount":1},{"username":"tgriesser","commitsCount":2},{"username":"d3viant0ne","commitsCount":21},{"username":"jhnns","commitsCount":1},{"username":"undoZen","commitsCount":1},{"username":"lydell","commitsCount":2},{"username":"felixmosh","commitsCount":1},{"username":"tigt","commitsCount":1},{"username":"backjo","commitsCount":1},{"username":"sontek","commitsCount":2},{"username":"nickdima","commitsCount":1},{"username":"tomasAlabes","commitsCount":1},{"username":"iancw","commitsCount":1},{"username":"MattGurney","commitsCount":1},{"username":"gregaou","commitsCount":1},{"username":"elsbree","commitsCount":6},{"username":"cap-Bernardito","commitsCount":11},{"username":"dlwalsh","commitsCount":1},{"username":"diurnalist","commitsCount":7},{"username":"Et3rnel","commitsCount":1},{"username":"sokra","commitsCount":53},{"username":"2color","commitsCount":1},{"username":"yuheiy","commitsCount":1},{"username":"erictheswift","commitsCount":1}],"commits":[{"from":"2021-07-13T00:00:00.000Z","to":"2021-07-20T00:00:00.000Z","count":4},{"from":"2021-06-20T00:00:00.000Z","to":"2021-07-20T00:00:00.000Z","count":13},{"from":"2021-04-21T00:00:00.000Z","to":"2021-07-20T00:00:00.000Z","count":18},{"from":"2021-01-21T00:00:00.000Z","to":"2021-07-20T00:00:00.000Z","count":20},{"from":"2020-07-20T00:00:00.000Z","to":"2021-07-20T00:00:00.000Z","count":33}],"statuses":[{"context":"codecov/patch","state":"success"},{"context":"codecov/project","state":"success"}]},"source":{"files":{"readmeSize":23402,"testsSize":624543,"hasNpmIgnore":true,"hasChangelog":true},"badges":[{"urls":{"original":"https://img.shields.io/npm/v/style-loader.svg","shields":"https://img.shields.io/npm/v/style-loader.svg","content":"https://img.shields.io/npm/v/style-loader.json"},"info":{"service":"npm","type":"version","modifiers":{"type":"v"}}},{"urls":{"original":"https://david-dm.org/webpack-contrib/style-loader.svg","service":"https://david-dm.org/webpack-contrib/style-loader.svg","shields":"https://img.shields.io/david/webpack-contrib/style-loader.svg","content":"https://img.shields.io/david/webpack-contrib/style-loader.json"},"info":{"service":"david","type":"dependencies","modifiers":{"statusType":"normal"}}},{"urls":{"original":"https://badges.gitter.im/webpack/webpack.svg","service":"https://badges.gitter.im/webpack/webpack.svg","shields":"https://img.shields.io/gitter/room/webpack/webpack.svg","content":"https://img.shields.io/gitter/room/webpack/webpack.json"},"info":{"service":"gitter","type":"misc"}}],"linters":["editorconfig","eslint","prettier"],"coverage":0.95}},"evaluation":{"quality":{"carefulness":0.9999999999999999,"tests":0.9924999999999999,"health":1,"branding":0.44999999999999996},"popularity":{"communityInterest":2201,"downloadsCount":46436150,"downloadsAcceleration":62469.79895357683,"dependentsCount":10361},"maintenance":{"releasesFrequency":1,"commitsFrequency":0.9318493150684932,"openIssues":1,"issuesDistribution":0.9}},"score":{"final":0.9155827793250728,"detail":{"quality":0.9973878477017006,"popularity":0.7610968976756197,"maintenance":0.9999500309374165}}}