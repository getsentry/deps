{"analyzedAt":"2021-07-27T19:10:27.735Z","collected":{"metadata":{"name":"ember-try","scope":"unscoped","version":"1.4.0","description":"An ember-cli addon to test against multiple bower dependencies, such as ember and ember-data.","keywords":["ember-addon","testing"],"date":"2019-12-11T21:52:02.157Z","author":{"name":"Katie Gengler"},"publisher":{"username":"rwjblue","email":"me@rwjblue.com"},"maintainers":[{"username":"kellyselden","email":"kellyselden@gmail.com"},{"username":"rwjblue","email":"me@rwjblue.com"},{"username":"katiegengler","email":"katie@kmg.io"},{"username":"stefanpenner","email":"stefan.penner@gmail.com"},{"username":"ember-try","email":"ember-try@kmg.io"}],"repository":{"type":"git","url":"git+https://github.com/ember-cli/ember-try.git"},"links":{"npm":"https://www.npmjs.com/package/ember-try","homepage":"https://github.com/ember-cli/ember-try#readme","repository":"https://github.com/ember-cli/ember-try","bugs":"https://github.com/ember-cli/ember-try/issues"},"license":"MIT","dependencies":{"chalk":"^2.4.2","cli-table3":"^0.5.1","core-object":"^3.1.5","debug":"^4.1.1","ember-try-config":"^3.0.0","execa":"^1.0.0","extend":"^3.0.0","fs-extra":"^5.0.0","promise-map-series":"^0.2.1","resolve":"^1.10.1","rimraf":"^2.6.3","rsvp":"^4.7.0","walk-sync":"^1.1.3"},"devDependencies":{"@ember/optional-features":"^0.7.0","bower":"^1.8.8","broccoli-asset-rev":"^3.0.0","chai":"^4.1.2","codecov":"^3.4.0","ember-cli":"~3.9.0","ember-cli-babel":"^7.7.3","ember-cli-dependency-checker":"^3.0.0","ember-cli-htmlbars":"^3.0.0","ember-cli-htmlbars-inline-precompile":"^2.0.0","ember-cli-inject-live-reload":"^2.0.1","ember-cli-sri":"^2.1.1","ember-cli-template-lint":"^1.0.0-beta.3","ember-cli-uglify":"^2.1.0","ember-disable-prototype-extensions":"^1.1.3","ember-export-application-global":"^2.0.0","ember-load-initializers":"^2.0.0","ember-maybe-import-regenerator":"^0.1.6","ember-qunit":"^4.4.1","ember-resolver":"^5.1.3","ember-source":"~3.10.0","eslint":"^5.16.0","eslint-plugin-ember":"^6.4.1","eslint-plugin-node":"^8.0.1","glob":"^7.1.4","json":"^9.0.6","loader.js":"^4.7.0","mocha":"^6.1.4","mockery":"^2.1.0","nyc":"^13.3.0","tmp-sync":"^1.1.0"},"releases":[{"from":"2021-06-27T00:00:00.000Z","to":"2021-07-27T00:00:00.000Z","count":0},{"from":"2021-04-28T00:00:00.000Z","to":"2021-07-27T00:00:00.000Z","count":0},{"from":"2021-01-28T00:00:00.000Z","to":"2021-07-27T00:00:00.000Z","count":0},{"from":"2020-07-27T00:00:00.000Z","to":"2021-07-27T00:00:00.000Z","count":0},{"from":"2019-07-28T00:00:00.000Z","to":"2021-07-27T00:00:00.000Z","count":2}],"hasTestScript":true,"readme":"# ember-try\n\n[![npm version](https://badge.fury.io/js/ember-try.svg)](https://badge.fury.io/js/ember-try) [![Build Status](https://travis-ci.org/ember-cli/ember-try.svg?branch=master)](https://travis-ci.org/ember-cli/ember-try) [![Ember Observer Score](http://emberobserver.com/badges/ember-try.svg)](http://emberobserver.com/addons/ember-try) [![Build status](https://ci.appveyor.com/api/projects/status/9sswkni8pfuvo4dv/branch/master?svg=true)](https://ci.appveyor.com/project/kategengler/ember-try/branch/master) [![Code Climate](https://codeclimate.com/github/ember-cli/ember-try/badges/gpa.svg)](https://codeclimate.com/github/ember-cli/ember-try) [![Test Coverage](https://codecov.io/gh/ember-cli/ember-try/branch/master/graph/badge.svg)](https://codecov.io/gh/ember-cli/ember-try)\n\nAn ember-cli addon to test against multiple bower and npm dependencies, such as `ember` and `ember-data`.\n\n### Installation\n\n```\nember install ember-try\n```\n\n### Usage\n\nThis addon provides a few commands:\n\n### `ember try:each`\n\nThis command will run `ember test` or the configured command with each scenario's specified in the config and exit appropriately.\n\nThis command is especially useful to use on CI to test against multiple `ember` versions.\n\nIn order to use an alternate config path or to group various scenarios together in a single `try:each` run, you can use\nthe `--config-path` option.\n\n```\n  ember try:each --config-path=\"config/legacy-scenarios.js\"\n```\n\nIf you need to know the scenario that is being run (i.e. to customize a test output file name) you can use the `EMBER_TRY_CURRENT_SCENARIO`\nenvironment variable.\n\n#### `ember try:one <scenario> (...options) --- <command (Default: ember test)>`\n\nThis command will run any `ember-cli` command with the specified scenario. The command will default to `ember test`, if no command is specified on the command-line or in configuration.\n\nFor example:\n\n```\n  ember try:one ember-1.11-with-ember-data-beta-16 --- ember test --reporter xunit\n```\n\nor\n\n```\n  ember try:one ember-1.11-with-ember-data-beta-16 --- ember serve\n```\n\nWhen running in a CI environment where changes are discarded you can skip resetting your environment back to its original state by specifying --skip-cleanup=true as an option to ember try.\n*Warning: If you use this option and, without cleaning up, build and deploy as the result of a passing test suite, it will build with the last set of dependencies ember try was run with.*\n\n```\n  ember try:one ember-1.11 --skip-cleanup=true --- ember test\n```\n\nIn order to use an alternate config path or to group various scenarios, you can use the `--config-path` option.\n\n```\n  ember try:one ember-1.13 --config-path=\"config/legacy-scenarios.js\"\n```\n\n#### `ember try:reset`\n\nThis command restores the original `bower.json` from `bower.json.ember-try`, `package.json` from `package.json.ember-try`, `rm -rf`s `bower_components` and `node_components` and runs `bower install` and `npm install`. For use if any of the other commands fail to clean up after (they run this by default on completion).\n\n#### `ember try:ember <semver-string>`\n\nRuns `ember test` or the command in config for each version of Ember that is possible under the semver string given. Configuration follows the rules given under the `versionCompatibility` heading below.\n\n#### `ember try:config`\n\nDisplays the configuration that will be used. Also takes an optional `--config-path`.\n\n### Config\n\n##### versionCompatibility\nIf you're using `ember-try` with an Ember addon, there is a short cut to test many Ember versions. In your `package.json` under the `ember-addon` key, add the following:\n\n```json\n  \"ember-addon\": {\n    \"versionCompatibility\": {\n       \"ember\": \">1.11.0 <=2.0.0\"\n    }\n  }\n```\n\nThe value for \"ember\" can be any valid [semver statement](https://github.com/npm/node-semver).\nThis will autogenerate scenarios for each version of Ember that matches the statement. It will also include scenarios for `beta` and `canary` channels of Ember that will be allowed to fail.\nThese scenarios will ONLY be used if `scenarios` is NOT a key in the configuration file being used.\nIf `useVersionCompatibility` is set to `true` in the config file, the autogenerated scenarios will deep merge with any scenarios in the config file. For example, you could override just the `allowedToFail` property of the `ember-beta` scenario.\n\nTo keep this from getting out of hand, `ember-try` will limit the versions of Ember used to the lasted point release per minor version. For example, \">1.11.0 <=2.0.0\", would (as of writing) run with versions ['1.11.4', '1.12.2', '1.13.13', '2.0.0'].\n\nAs of v1.0.0, This will only work for projects starting with ember provided by npm, not bower.\n\n##### Configuration Files\n\nConfiguration will be read from a file in your ember app in `config/ember-try.js`. Here are the possible options:\n\n```js\n/*jshint node:true*/\n\nmodule.exports = function() {\n  return {\n    /*\n      `command` - a single command that, if set, will be the default command used by `ember-try`.\n      P.S. The command doesn't need to be an `ember <something>` command, they can be anything.\n      Keep in mind that this config file is JavaScript, so you can code in here to determine the command.\n    */\n    command: 'ember test --reporter xunit',\n    /*\n      `bowerOptions` - options to be passed to `bower`.\n    */\n    bowerOptions: ['--allow-root=true'],\n    /*\n      `npmOptions` - options to be passed to `npm`.\n    */\n    npmOptions: ['--loglevel=silent', '--no-shrinkwrap=true'],\n    /*\n      If set to true, the `versionCompatibility` key under `ember-addon` in `package.json` will be used to\n      automatically generate scenarios that will deep merge with any in this configuration file.\n    */\n    useVersionCompatibility: true,\n    /*\n      If set to true, all npm scenarios will use `yarn` for install with the `--no-lockfile` option. At cleanup, your\n      dependencies will be restored to their prior state.\n    */\n    useYarn: true,\n\n    /*\n      buildManagerOptions allows you to opt-out of the default options such as `--ignore-engines --no-lockfile`.\n      The buildManagerOptions function is aware of each scenario so you can customize your options.\n    */\n    buildManagerOptions(scenario) {\n      return ['--ignore-engines'];\n    }\n\n    scenarios: [\n      {\n        name: 'Ember 1.10 with ember-data',\n\n        /*\n          `command` can also be overridden at the scenario level.\n        */\n        command: 'ember test --filter ember-1-10',\n        bower: {\n          dependencies: {\n            'ember': '1.10.0',\n            'ember-data': '1.0.0-beta.15'\n          }\n        },\n        /*\n          When writing scenarios that depend upon ember versions supplied by bower, you must explictly remove the\n          npm ember-source dependency if your addon defines an ember-source in its own package.json devDependencies\n        */\n        npm: {\n          devDependencies: {\n            'ember-source': null\n          }\n        }\n      },\n      {\n        name: 'Ember 2.11.0',\n        /*\n          `env` can be set per scenario, with environment variables to set for the command being run.\n          This will be merged with process.env\n       */\n        env: {\n          ENABLE_NEW_DASHBOARD: true\n        },\n        npm: {\n          devDependencies: {\n            'ember-source': '2.11.0'\n          },\n          /*\n            When `useYarn` is true, you can optionally define yarn resolutions to enforce a\n            specific dependency version to be installed. This is useful if other libraries\n            you depend on include different versions of a package.\n          */\n          resolutions: {\n            'lodash': '5.0.0'\n          }\n          /*\n            In order to easily test multiple editions ember-try merges any `ember` property specified\n            into the applications `package.json`. Values specified in the ember-try configuration will\n            override values that pre-existed in the original `package.json`.\n          */\n          ember: {\n            'edition': 'octane'\n          }\n        }\n      },\n      {\n        name: 'Ember canary with Ember-Data 2.3.0',\n        /*\n          `allowedToFail` - If true, if this scenario fails it will not fail the entire try command.\n        */\n        allowedToFail: true,\n        npm: {\n          devDependencies: {\n            'ember-data': '2.3.0',\n\n            // you can remove any package by marking `null`\n            'some-optional-package': null\n          }\n        },\n        bower: {\n          dependencies: {\n            'ember': 'components/ember#canary'\n          },\n          resolutions: {\n            'ember': 'canary'\n          }\n        }\n      },\n      {\n        name: 'Ember beta',\n        bower: {\n          dependencies: {\n            'ember': 'components/ember#beta'\n          },\n          resolutions: { // Resolutions are only necessary when they do not match the version specified in `dependencies`\n            'ember': 'beta'\n          }\n        }\n      }\n    ]\n  };\n};\n```\n\nScenarios are sets of dependencies (`bower` and `npm` only). They can be specified exactly as in the `bower.json` or `package.json`\nThe `name` can be used to try just one scenario using the `ember try:one` command.\n\n##### Yarn\n\nIf you include `useYarn: true` in your `ember-try` config, all npm scenarios will use `yarn` for install with the `--no-lockfile` option. At cleanup, your dependencies will be restored to their prior state.\n\n##### A note on npm scenarios with lockfiles\n\nLockfiles are ignored by `ember-try`. (`yarn` will run with `--no-lockfile` and `npm` will be run with `--no-shrinkwrap`).\nWhen testing various scenarios, it's important to \"float\" dependencies so that the scenarios are run with the latest satisfying versions of dependencies a user of the project would get.\n\n##### Workspaces\n\nIf you include `useWorkspaces: true` in your `ember-try` config, `ember-try` will apply the diff to each individual workspace specified\nin `package.json`, allowing you to try scenarios in monorepo style repositories. See\n[Yarn's documentation of workspaces](https://yarnpkg.com/lang/en/docs/workspaces/) for more details.\n\n### Video\n[![How to use EmberTry](https://i.vimeocdn.com/video/559399937_500.jpg)](https://vimeo.com/157688157)\n\nSee an example of using `ember-try` for CI [here](https://github.com/kategengler/ember-feature-flags/commit/aaf0226975c76630c875cf6b923fdc23b025aa79), and the resulting build [output](https://travis-ci.org/kategengler/ember-feature-flags/builds/55597086).\n\n### Special Thanks\n\n- Much credit is due to [Edward Faulkner](https://github.com/ef4) The scripts in [liquid-fire](https://github.com/ef4/liquid-fire) that test against multiple ember versions were the inspiration for this project.\n\n\n### Developing\n\n- Be sure to run `npm link` and `npm link ember-try`, otherwise any `ember try` commands you run will use the version of ember-try included by ember-cli itself."},"npm":{"downloads":[{"from":"2021-07-26T00:00:00.000Z","to":"2021-07-27T00:00:00.000Z","count":9632},{"from":"2021-07-20T00:00:00.000Z","to":"2021-07-27T00:00:00.000Z","count":57695},{"from":"2021-06-27T00:00:00.000Z","to":"2021-07-27T00:00:00.000Z","count":228771},{"from":"2021-04-28T00:00:00.000Z","to":"2021-07-27T00:00:00.000Z","count":721632},{"from":"2021-01-28T00:00:00.000Z","to":"2021-07-27T00:00:00.000Z","count":1407045},{"from":"2020-07-27T00:00:00.000Z","to":"2021-07-27T00:00:00.000Z","count":2709818}],"dependentsCount":7,"starsCount":2},"github":{"starsCount":175,"forksCount":53,"subscribersCount":11,"issues":{"count":741,"openCount":61,"distribution":{"3600":45,"10800":53,"32400":26,"97200":70,"291600":29,"874800":140,"2624400":163,"7873200":98,"23619600":59,"70858800":31,"212576400":27},"isDisabled":false},"contributors":[{"username":"rwjblue","commitsCount":65},{"username":"ryanto","commitsCount":2},{"username":"jbrown","commitsCount":1},{"username":"gmurphey","commitsCount":1},{"username":"kategengler","commitsCount":225},{"username":"backspace","commitsCount":13},{"username":"jrjohnson","commitsCount":1},{"username":"taras","commitsCount":2},{"username":"martndemus","commitsCount":2},{"username":"canufeel","commitsCount":7},{"username":"kellyselden","commitsCount":14},{"username":"stefanpenner","commitsCount":7},{"username":"hjdivad","commitsCount":6},{"username":"mansona","commitsCount":6},{"username":"cibernox","commitsCount":1},{"username":"thoov","commitsCount":1},{"username":"allthesignals","commitsCount":1},{"username":"xomaczar","commitsCount":1},{"username":"xcambar","commitsCount":2},{"username":"odoe","commitsCount":1},{"username":"dmuneras","commitsCount":1},{"username":"pzuraq","commitsCount":2},{"username":"MiguelMadero","commitsCount":1},{"username":"polarctos","commitsCount":1},{"username":"Turbo87","commitsCount":8},{"username":"oskarrough","commitsCount":1},{"username":"dependabot[bot]","commitsCount":27},{"username":"huyphamily","commitsCount":1},{"username":"mistahenry","commitsCount":1},{"username":"ef4","commitsCount":1},{"username":"BarryThePenguin","commitsCount":2},{"username":"ibroadfo","commitsCount":1},{"username":"ember-tomster","commitsCount":1}],"commits":[{"from":"2021-07-20T00:00:00.000Z","to":"2021-07-27T00:00:00.000Z","count":0},{"from":"2021-06-27T00:00:00.000Z","to":"2021-07-27T00:00:00.000Z","count":0},{"from":"2021-04-28T00:00:00.000Z","to":"2021-07-27T00:00:00.000Z","count":0},{"from":"2021-01-28T00:00:00.000Z","to":"2021-07-27T00:00:00.000Z","count":0},{"from":"2020-07-27T00:00:00.000Z","to":"2021-07-27T00:00:00.000Z","count":99}],"statuses":[{"context":"ci/circleci: floating-deps","state":"success"}]},"source":{"files":{"readmeSize":10949,"testsSize":100151,"hasNpmIgnore":true,"hasChangelog":true},"badges":[{"urls":{"original":"https://travis-ci.org/ember-cli/ember-try.svg?branch=master","service":"https://api.travis-ci.org/ember-cli/ember-try.svg?branch=master","shields":"https://img.shields.io/travis/ember-cli/ember-try/master.svg","content":"https://img.shields.io/travis/ember-cli/ember-try/master.json"},"info":{"service":"travis","type":"build","modifiers":{"branch":"master"}}},{"urls":{"original":"https://ci.appveyor.com/api/projects/status/9sswkni8pfuvo4dv/branch/master?svg=true","service":"https://ci.appveyor.com/api/projects/status/9sswkni8pfuvo4dv/branch/master","shields":"https://img.shields.io/appveyor/ci/9sswkni8pfuvo4dv/branch/master.svg","content":"https://img.shields.io/appveyor/ci/9sswkni8pfuvo4dv/branch/master.json"},"info":{"service":"appveyor","type":"build"}}],"linters":["editorconfig","eslint"],"coverage":0,"outdatedDependencies":{"fs-extra":{"required":"^5.0.0","stable":"10.0.0","latest":"10.0.0"},"cli-table3":{"required":"^0.5.1","stable":"0.6.0","latest":"0.6.0"},"ember-try-config":{"required":"^3.0.0","stable":"4.0.0","latest":"4.0.0"},"promise-map-series":{"required":"^0.2.1","stable":"0.3.0","latest":"0.3.0"},"walk-sync":{"required":"^1.1.3","stable":"3.0.0","latest":"3.0.0"},"rimraf":{"required":"^2.6.3","stable":"3.0.2","latest":"3.0.2"},"chalk":{"required":"^2.4.2","stable":"4.1.1","latest":"4.1.1"},"execa":{"required":"^1.0.0","stable":"5.1.1","latest":"5.1.1"}}}},"evaluation":{"quality":{"carefulness":0.9999999999999999,"tests":0.85,"health":0.5,"branding":0.3},"popularity":{"communityInterest":274,"downloadsCount":240544,"downloadsAcceleration":148.57471461187197,"dependentsCount":7},"maintenance":{"releasesFrequency":0.024657534246575345,"commitsFrequency":0.7313698630136986,"openIssues":1,"issuesDistribution":0.2706036069193964}},"score":{"final":0.5595781040442869,"detail":{"quality":0.9149273127542481,"popularity":0.20886713577649857,"maintenance":0.6057040362749657}}}