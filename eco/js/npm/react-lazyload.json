{"analyzedAt":"2021-07-18T00:08:47.896Z","collected":{"metadata":{"name":"react-lazyload","scope":"unscoped","version":"3.2.0","description":"Lazyload your components, images or anything where performance matters.","keywords":["react-component","react","lazyload"],"date":"2021-02-11T12:23:58.087Z","author":{"name":"jasonslyvia","email":"jasonslyvia@gmail.com","url":"http://undefinedblog.com/","username":"jasonslyvia"},"publisher":{"username":"ameerthehacker","email":"ameerjhanprof@gmail.com"},"maintainers":[{"username":"jasonslyvia","email":"jasonslyvia@gmail.com"},{"username":"twobin","email":"twobin@live.com"},{"username":"ameerthehacker","email":"ameerjhanprof@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/jasonslyvia/react-lazyload.git"},"links":{"npm":"https://www.npmjs.com/package/react-lazyload","homepage":"https://github.com/jasonslyvia/react-lazyload","repository":"https://github.com/jasonslyvia/react-lazyload","bugs":"https://github.com/jasonslyvia/react-lazyload/issues"},"license":"MIT","devDependencies":{"babel-cli":"^6.24.0","babel-core":"^6.24.0","babel-eslint":"^7.1.1","babel-loader":"~6.4.1","babel-plugin-transform-decorators-legacy":"^1.3.4","babel-preset-es2015":"^6.24.0","babel-preset-react":"^6.23.0","babel-preset-stage-0":"^6.22.0","chai":"^3.5.0","chai-spies":"^0.7.1","eslint":"^4.18.2","eslint-config-airbnb":"^14.1.0","eslint-plugin-import":"^2.2.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-react":"^6.10.0","istanbul":"~0.4.5","istanbul-instrumenter-loader":"^0.2.0","karma":"^0.13.22","karma-chai":"^0.1.0","karma-chrome-launcher":"^2.2.0","karma-coverage":"^0.5.5","karma-coveralls":"^1.1.2","karma-firefox-launcher":"^1.0.1","karma-mocha":"^0.2.2","karma-sourcemap-loader":"^0.3.7","karma-webpack":"^1.7.0","mocha":"^2.2.5","prop-types":"^15.5.6","puppeteer":"^2.1.1","react":"^16","react-dom":"^16","react-hot-loader":"~1.3.1","react-router":"^3","react-transition-group":"1.x","webpack":"~1.11.0","webpack-dev-server":"~1.10.1"},"peerDependencies":{"react":"^0.14.0 || ^15.0.0 || ^16.0.0 || ^17.0.0","react-dom":"^0.14.0 || ^15.0.0 || ^16.0.0 || ^17.0.0"},"releases":[{"from":"2021-06-18T00:00:00.000Z","to":"2021-07-18T00:00:00.000Z","count":0},{"from":"2021-04-19T00:00:00.000Z","to":"2021-07-18T00:00:00.000Z","count":0},{"from":"2021-01-19T00:00:00.000Z","to":"2021-07-18T00:00:00.000Z","count":3},{"from":"2020-07-18T00:00:00.000Z","to":"2021-07-18T00:00:00.000Z","count":4},{"from":"2019-07-19T00:00:00.000Z","to":"2021-07-18T00:00:00.000Z","count":13}],"hasTestScript":true,"readme":"# Note\n\nThis project is now currently maintained by \n[@ameerthehacker](https://github.com/ameerthehacker), please reach out to him on any issues or help.\n\n----\n\n# react-lazyload [![Build Status](https://travis-ci.org/twobin/react-lazyload.svg)](https://travis-ci.org/twobin/react-lazyload) [![npm version](https://badge.fury.io/js/react-lazyload.svg)](http://badge.fury.io/js/react-lazyload) [![Coverage Status](https://coveralls.io/repos/github/jasonslyvia/react-lazyload/badge.svg?branch=master)](https://coveralls.io/github/jasonslyvia/react-lazyload?branch=master) [![npm downloads](https://img.shields.io/npm/dm/react-lazyload.svg)](https://www.npmjs.com/package/react-lazyload)\n\nLazyload your Components, Images or anything matters the performance.\n\n[![Join the community on Spectrum](https://withspectrum.github.io/badge/badge.svg)](https://spectrum.chat/react-lazyload?tab=posts)\n\n[Demo](//twobin.github.io/react-lazyload/examples/)\n\n## Why it's better\n\n - Take performance in mind, only 2 event listeners for all lazy-loaded components\n - Support both `one-time lazy load` and `continuous lazy load` mode\n - `scroll` / `resize` event handler is throttled so you won't suffer frequent update, you can switch to debounce mode too\n - Decorator supported\n - Server Side Rendering friendly\n - Thoroughly tested\n\n## Installation\n\n> 2.0.0 is finally out, read [Upgrade Guide](https://github.com/twobin/react-lazyload/wiki/Upgrade-Guide), it's almost painless to upgrade!\n> 3.0.0 fixes the findDomNode warning through usage of React ref, and the following are the changes you need to be aware of\n\n* Now we have an extra div wrapping the lazy loaded component for the React ref to work \n* We can understand that it is an extra DOM node, and we are working to optimize that if possible\n* It might break your UI or snapshot tests based on your usage\n* To customize the styling to the extra div please refer [here](#classNamePrefix)\n* Found any other problem, please feel free to leave a comment over [here](https://github.com/twobin/react-lazyload/issues/310)\n\n```\n$ npm install --save react-lazyload\n```\n\n## Usage\n\n```javascript\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport LazyLoad from 'react-lazyload';\nimport MyComponent from './MyComponent';\n\nconst App = () => {\n  return (\n    <div className=\"list\">\n      <LazyLoad height={200}>\n        <img src=\"tiger.jpg\" /> /*\n                                  Lazy loading images is supported out of box,\n                                  no extra config needed, set `height` for better\n                                  experience\n                                 */\n      </LazyLoad>\n      <LazyLoad height={200} once >\n                                /* Once this component is loaded, LazyLoad will\n                                 not care about it anymore, set this to `true`\n                                 if you're concerned about improving performance */\n        <MyComponent />\n      </LazyLoad>\n      <LazyLoad height={200} offset={100}>\n                              /* This component will be loaded when it's top\n                                 edge is 100px from viewport. It's useful to\n                                 make user ignorant about lazy load effect. */\n        <MyComponent />\n      </LazyLoad>\n      <LazyLoad>\n        <MyComponent />\n      </LazyLoad>\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.body);\n```\n\nIf you want to have your component lazyloaded by default, try this handy decorator:\n\n```javascript\nimport { lazyload } from 'react-lazyload';\n\n@lazyload({\n  height: 200,\n  once: true,\n  offset: 100\n})\nclass MyComponent extends React.Component {\n  render() {\n    return <div>this component is lazyloaded by default!</div>;\n  }\n}\n```\n\n## Special Tips\n\nYou should be aware that your component will only be mounted when it's visible in viewport, before that a placeholder will be rendered.\n\nSo you can safely send request in your component's `componentDidMount` without worrying about performance loss or add some pretty entering effects, see this [demo](https://twobin.github.io/react-lazyload/examples/#/fadein) for more detail.\n\n## Props\n\n### children\n\nType: Node Default: undefined\n\n**NOTICE**\nOnly one child is allowed to be passed.\n\n### scrollContainer\n\nType: String/DOM node Default: undefined\n\nPass a query selector string or DOM node. LazyLoad will attach to the window object's scroll events if no container is passed.\n\n### height\n\nType: Number/String Default: undefined\n\nIn the first round of render, LazyLoad will render a placeholder for your component if no placeholder is provided and measure if this component is visible. Set `height` properly will make LazyLoad calculate more precisely. The value can be number or string like `'100%'`. You can also use css to set the height of the placeholder instead of using `height`.\n\n### once\n\nType: Bool Default: false\n\nOnce the lazy loaded component is loaded, do not detect scroll/resize event anymore. Useful for images or simple components.\n\n### offset\n\nType: Number/Array(Number) Default: 0\n\nSay if you want to preload a component even if it's 100px below the viewport (user have to scroll 100px more to see this component), you can set `offset` props to `100`. On the other hand, if you want to delay loading a component even if it's top edge has already appeared at viewport, set `offset` to negative number.\n\nLibrary supports horizontal lazy load out of the box. So when you provide this prop with number like `100` it will automatically set left edge offset to `100` and top edge to `100`;\n\nIf you provide this prop with array like `[100, 200]`, it will set left edge offset to `100` and top offset to `200`.\n\n### scroll\n\nType: Bool Default: true\n\nListen and react to scroll event.\n\n### resize\n\nType: Bool Default: false\n\nRespond to `resize` event, set it to `true` if you do need LazyLoad listen resize event.\n\n**NOTICE** If you tend to support legacy IE, set this props carefully, refer to [this question](http://stackoverflow.com/questions/1852751/window-resize-event-firing-in-internet-explorer) for further reading.\n\n### overflow\n\nType: Bool Default: false\n\nIf lazy loading components inside a overflow container, set this to `true`. Also make sure a `position` property other than `static` has been set to your overflow container.\n\n[demo](https://twobin.github.io/react-lazyload/examples/#/overflow)\n\n### placeholder\n\nType: Any Default: undefined\n\nSpecify a placeholder for your lazy loaded component.\n\n[demo](https://twobin.github.io/react-lazyload/examples/#/placeholder)\n\n**If you provide your own placeholder, do remember add appropriate `height` or `minHeight` to your placeholder element for better lazyload performance.**\n\n### unmountIfInvisible\n\nType: Bool Default: false\n\nThe lazy loaded component is unmounted and replaced by the placeholder when it is no longer visible in the viewport.\n\n\n### debounce/throttle\n\nType: Bool / Number Default: undefined\n\nLazyload will try to use [passive event](https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md) by default to improve scroll/resize event handler's performance. If you prefer control this behaviour by yourself, you can set `debounce` or `throttle` to enable built in delay feature.\n\nIf you provide a number, that will be how many `ms` to wait; if you provide `true`, the wait time defaults to `300ms`.\n\n**NOTICE** Set `debounce` / `throttle` to all lazy loaded components unanimously, if you don't, the first occurrence is respected.\n\n[demo](https://twobin.github.io/react-lazyload/examples/#/debounce)\n\n### classNamePrefix\n\nType: String Default: `lazyload`\n\nWhile rendering, Lazyload will add some elements to the component tree in addition to the wrapped component children.\n\nThe `classNamePrefix` prop allows the user to supply their own custom class prefix to help:\n    # Avoid class conflicts on an implementing app\n    # Allow easier custom styling\n\nThese being:\n    # A wrapper div, which is present at all times (default )\n    \n### style\n\nType: Object Default: undefined\n\nSimilar to [classNamePrefix](#classNamePrefix), the `style` prop allows users to pass custom CSS styles to wrapper div. \n\n### wheel\n\n**DEPRECATED NOTICE**\nThis props is not supported anymore, try set `overflow` for lazy loading in overflow containers.\n\n## Utility\n\n### forceCheck\n\nIt is available to manually trigger checking for elements in viewport. Helpful when LazyLoad components enter the viewport without resize or scroll events, e.g. when the components' container was hidden then become visible.\n\nImport `forceCheck`:\n\n```javascript\nimport { forceCheck } from 'react-lazyload';\n```\n\nThen call the function:\n\n```javascript\nforceCheck();\n```\n\n### forceVisible\n\nForces the component to display regardless of whether the element is visible in the viewport.\n\n```javascript\nimport { forceVisible } from 'react-lazyload';\n```\n\nThen call the function:\n\n```javascript\nforceVisible();\n```\n\n## Scripts\n\n```\n$ npm run demo:watch\n$ npm run build\n```\n\n## Who should use it\n\nLet's say there is a `fixed` date picker on the page, when user picks a different date, all components displaying data should send ajax requests with new date parameter to retreive updated data, even many of them aren't visible in viewport. This makes server load furious when there are too many requests in one time.\n\nUsing `LazyLoad` component will help ease this situation by only updating components visible in viewport.\n\n## Contributors\n\n1. [lancehub](https://github.com/lancehub)\n2. [doug-wade](https://github.com/doug-wade)\n3. [ameerthehacker](https://github.com/ameerthehacker)\n\n\n## License\n\nMIT"},"npm":{"downloads":[{"from":"2021-07-17T00:00:00.000Z","to":"2021-07-18T00:00:00.000Z","count":0},{"from":"2021-07-11T00:00:00.000Z","to":"2021-07-18T00:00:00.000Z","count":204779},{"from":"2021-06-18T00:00:00.000Z","to":"2021-07-18T00:00:00.000Z","count":883330},{"from":"2021-04-19T00:00:00.000Z","to":"2021-07-18T00:00:00.000Z","count":2887480},{"from":"2021-01-19T00:00:00.000Z","to":"2021-07-18T00:00:00.000Z","count":6158814},{"from":"2020-07-18T00:00:00.000Z","to":"2021-07-18T00:00:00.000Z","count":11761903}],"dependentsCount":158,"starsCount":7},"github":{"starsCount":5257,"forksCount":449,"subscribersCount":53,"issues":{"count":356,"openCount":121,"distribution":{"3600":35,"10800":16,"32400":23,"97200":22,"291600":29,"874800":20,"2624400":22,"7873200":39,"23619600":36,"70858800":62,"212576400":52},"isDisabled":false},"contributors":[{"username":"StoraH","commitsCount":2},{"username":"ZsZJ","commitsCount":1},{"username":"twobin","commitsCount":1},{"username":"SickSAMA","commitsCount":3},{"username":"ianwensink","commitsCount":4},{"username":"petersolopov","commitsCount":1},{"username":"pkrawat1","commitsCount":1},{"username":"emmanuelgautier","commitsCount":2},{"username":"jt3k","commitsCount":1},{"username":"williamwa","commitsCount":1},{"username":"svobik7","commitsCount":1},{"username":"DanielRuf","commitsCount":2},{"username":"bassjacob","commitsCount":1},{"username":"bjarneo","commitsCount":1},{"username":"maikelmclauflin","commitsCount":4},{"username":"ianhu92","commitsCount":3},{"username":"Sean-Lan","commitsCount":1},{"username":"josephdburdick","commitsCount":1},{"username":"jasonslyvia","commitsCount":138},{"username":"acrispino","commitsCount":1},{"username":"arkist","commitsCount":1},{"username":"rxl881","commitsCount":1},{"username":"neptunian","commitsCount":1},{"username":"wub","commitsCount":2},{"username":"mboperator","commitsCount":2},{"username":"benmosher","commitsCount":1},{"username":"doug-wade","commitsCount":1},{"username":"rmunson","commitsCount":2},{"username":"MorisHarA","commitsCount":1},{"username":"cnyballk","commitsCount":1},{"username":"matkl","commitsCount":1},{"username":"achhunna","commitsCount":1},{"username":"ameerthehacker","commitsCount":16},{"username":"kmkzt","commitsCount":12},{"username":"ronnbot","commitsCount":1},{"username":"AlexMeah","commitsCount":1}],"commits":[{"from":"2021-07-11T00:00:00.000Z","to":"2021-07-18T00:00:00.000Z","count":0},{"from":"2021-06-18T00:00:00.000Z","to":"2021-07-18T00:00:00.000Z","count":0},{"from":"2021-04-19T00:00:00.000Z","to":"2021-07-18T00:00:00.000Z","count":0},{"from":"2021-01-19T00:00:00.000Z","to":"2021-07-18T00:00:00.000Z","count":2},{"from":"2020-07-18T00:00:00.000Z","to":"2021-07-18T00:00:00.000Z","count":8}]},"source":{"files":{"readmeSize":9619,"testsSize":18773,"hasNpmIgnore":true},"badges":[{"urls":{"original":"https://travis-ci.org/twobin/react-lazyload.svg","service":"https://api.travis-ci.org/twobin/react-lazyload.svg","shields":"https://img.shields.io/travis/twobin/react-lazyload.svg","content":"https://img.shields.io/travis/twobin/react-lazyload.json"},"info":{"service":"travis","type":"build"}},{"urls":{"original":"https://coveralls.io/repos/github/jasonslyvia/react-lazyload/badge.svg?branch=master","service":"https://coveralls.io/repos/github/jasonslyvia/react-lazyload/badge.svg?branch=master","shields":"https://img.shields.io/coveralls/jasonslyvia/react-lazyload/master.svg","content":"https://img.shields.io/coveralls/jasonslyvia/react-lazyload/master.json"},"info":{"service":"coveralls","type":"coverage","modifiers":{"branch":"master"}}},{"urls":{"original":"https://img.shields.io/npm/dm/react-lazyload.svg","shields":"https://img.shields.io/npm/dm/react-lazyload.svg","content":"https://img.shields.io/npm/dm/react-lazyload.json"},"info":{"service":"npm","type":"downloads","modifiers":{"type":"dm"}}}],"linters":["editorconfig","eslint"],"coverage":0.76}},"evaluation":{"quality":{"carefulness":0.9199999999999999,"tests":0.714,"health":1,"branding":0.44999999999999996},"popularity":{"communityInterest":5802,"downloadsCount":962493.3333333334,"downloadsAcceleration":-197.2042237442938,"dependentsCount":158},"maintenance":{"releasesFrequency":0.7581335616438356,"commitsFrequency":0.19705479452054797,"openIssues":0.7668539325842697,"issuesDistribution":0}},"score":{"final":0.6399384158233674,"detail":{"quality":0.9497509921724518,"popularity":0.3849258577043587,"maintenance":0.6293973370717325}}}