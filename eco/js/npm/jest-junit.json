{"analyzedAt":"2021-07-31T14:13:25.556Z","collected":{"metadata":{"name":"jest-junit","scope":"unscoped","version":"12.2.0","description":"A jest reporter that generates junit xml files","date":"2021-06-09T14:17:28.439Z","author":{"name":"Jason Palmer"},"publisher":{"username":"jsonp","email":"jason@jason-palmer.com"},"maintainers":[{"username":"jsonp","email":"jason@jason-palmer.com"},{"username":"rickhanlonii","email":"rickhanlonii@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/jest-community/jest-junit.git"},"links":{"npm":"https://www.npmjs.com/package/jest-junit","homepage":"https://github.com/jest-community/jest-junit#readme","repository":"https://github.com/jest-community/jest-junit","bugs":"https://github.com/jest-community/jest-junit/issues"},"license":"Apache-2.0","dependencies":{"mkdirp":"^1.0.4","strip-ansi":"^5.2.0","uuid":"^8.3.2","xml":"^1.0.1"},"devDependencies":{"jest":"26.0.1","libxmljs":"^0.19.7"},"releases":[{"from":"2021-07-01T00:00:00.000Z","to":"2021-07-31T00:00:00.000Z","count":0},{"from":"2021-05-02T00:00:00.000Z","to":"2021-07-31T00:00:00.000Z","count":3},{"from":"2021-02-01T00:00:00.000Z","to":"2021-07-31T00:00:00.000Z","count":3},{"from":"2020-07-31T00:00:00.000Z","to":"2021-07-31T00:00:00.000Z","count":4},{"from":"2019-08-01T00:00:00.000Z","to":"2021-07-31T00:00:00.000Z","count":10}],"hasTestScript":true,"hasSelectiveFiles":true,"readme":"[![Build Status](https://travis-ci.org/jest-community/jest-junit.svg?branch=master)](https://travis-ci.org/jest-community/jest-junit)\n\n# jest-junit\nA Jest reporter that creates compatible junit xml files\n\nNote: as of jest-junit 11.0.0 NodeJS >= 10.12.0 is required.\n\n## Installation\n```shell\nyarn add --dev jest-junit\n```\n\n## Usage\nIn your jest config add the following entry:\n```JSON\n{\n  \"reporters\": [ \"default\", \"jest-junit\" ]\n}\n```\n\nThen simply run:\n\n```shell\njest\n```\n\nFor your Continuous Integration you can simply do:\n```shell\njest --ci --reporters=default --reporters=jest-junit\n```\n\n## Usage as testResultsProcessor\nIn your jest config add the following entry:\n```JSON\n{\n  \"testResultsProcessor\": \"jest-junit\"\n}\n```\n\nThen simply run:\n\n```shell\njest\n```\n\nFor your Continuous Integration you can simply do:\n```shell\njest --ci --testResultsProcessor=\"jest-junit\"\n```\n\n## Configuration\n\n`jest-junit` offers several configurations based on environment variables or a `jest-junit` key defined in `package.json` or a reporter option.\nEnvironment variable and package.json configuration should be **strings**.\nReporter options should also be strings exception for suiteNameTemplate, classNameTemplate, titleNameTemplate that can also accept a function returning a string.\n\n| Environment Variable Name | Reporter Config Name| Description | Default | Possible Injection Values\n|--|--|--|--|--|\n| `JEST_SUITE_NAME` | `suiteName` | `name` attribute of `<testsuites>` | `\"jest tests\"` | N/A\n| `JEST_JUNIT_OUTPUT_DIR` | `outputDirectory` | Directory to save the output. | `process.cwd()` | N/A\n| `JEST_JUNIT_OUTPUT_NAME` | `outputName` | File name for the output. | `\"junit.xml\"` | N/A\n| `JEST_JUNIT_OUTPUT_FILE` | `outputFile` | Fullpath for the output. If defined, `outputDirectory` and `outputName` will be overridden | `undefined` | N/A\n| `JEST_JUNIT_UNIQUE_OUTPUT_NAME` | `uniqueOutputName` | Create unique file name for the output `junit-${uuid}.xml`, overrides `outputName` | `false` | N/A\n| `JEST_JUNIT_SUITE_NAME` | `suiteNameTemplate` | Template string for `name` attribute of the `<testsuite>`. | `\"{title}\"` | `{title}`, `{filepath}`, `{filename}`, `{displayName}`\n| `JEST_JUNIT_CLASSNAME` | `classNameTemplate` | Template string for the `classname` attribute of `<testcase>`. | `\"{classname} {title}\"` | `{classname}`, `{title}`, `{suitename}`, `{filepath}`, `{filename}`, `{displayName}`\n| `JEST_JUNIT_TITLE` | `titleTemplate` | Template string for the `name` attribute of `<testcase>`. | `\"{classname} {title}\"` | `{classname}`, `{title}`, `{filepath}`, `{filename}`, `{displayName}`\n| `JEST_JUNIT_ANCESTOR_SEPARATOR` | `ancestorSeparator` | Character(s) used to join the `describe` blocks. | `\" \"` | N/A\n| `JEST_JUNIT_ADD_FILE_ATTRIBUTE` | `addFileAttribute` | Add file attribute to the output. This config is primarily for Circle CI. This setting provides richer details but may break on other CI platforms. Must be a string. | `\"false\"` | N/A\n| `JEST_JUNIT_INCLUDE_CONSOLE_OUTPUT` | `includeConsoleOutput` | Adds console output to any testSuite that generates stdout during a test run. | `false` | N/A\n| `JEST_JUNIT_INCLUDE_SHORT_CONSOLE_OUTPUT` | `includeShortConsoleOutput` | Adds short console output (only message value) to any testSuite that generates stdout during a test run. | `false` | N/A\n| `JEST_JUNIT_REPORT_TEST_SUITE_ERRORS` | `reportTestSuiteErrors` | Reports test suites that failed to execute altogether as `error`. _Note:_ since the suite name cannot be determined from files that fail to load, it will default to file path.| `false` | N/A\n| `JEST_USE_PATH_FOR_SUITE_NAME` | `usePathForSuiteName` | **DEPRECATED. Use `suiteNameTemplate` instead.** Use file path as the `name` attribute of `<testsuite>` | `\"false\"` | N/A\n\n\nYou can configure these options via the command line as seen below:\n\n```shell\nJEST_SUITE_NAME=\"Jest JUnit Unit Tests\" JEST_JUNIT_OUTPUT_DIR=\"./artifacts\" jest\n```\n\nOr you can also define a `jest-junit` key in your `package.json`.  All are **string** values.\n\n```\n{\n  ...\n  \"jest-junit\": {\n    \"suiteName\": \"jest tests\",\n    \"outputDirectory\": \".\",\n    \"outputName\": \"junit.xml\",\n    \"uniqueOutputName\": \"false\",\n    \"classNameTemplate\": \"{classname}-{title}\",\n    \"titleTemplate\": \"{classname}-{title}\",\n    \"ancestorSeparator\": \" › \",\n    \"usePathForSuiteName\": \"true\"\n  }\n}\n```\n\nOr you can define your options in your reporter configuration.\n\n```js\n// jest.config.js\n{\n\treporters: [\n      \"default\",\n    \t[ \"jest-junit\", { suiteName: \"jest tests\" } ]\n  ]\n}\n```\n\n\n### Configuration Precedence\nIf using the `usePathForSuiteName` and `suiteNameTemplate`, the `usePathForSuiteName` value will take precedence. ie: if `usePathForSuiteName=true` and `suiteNameTemplate=\"{filename}\"`, the filepath will be used as the `name` attribute of the `<testsuite>` in the rendered `jest-junit.xml`).\n\n### Examples\n\nBelow are some example configuration values and the rendered `.xml` to created by `jest-junit`.\n\nThe following test defined in the file `/__tests__/addition.test.js` will be used for all examples:\n```js\ndescribe('addition', () => {\n  describe('positive numbers', () => {\n    it('should add up', () => {\n      expect(1 + 2).toBe(3);\n    });\n  });\n});\n```\n\n#### Example 1\nThe default output:\n\n```xml\n<testsuites name=\"jest tests\">\n  <testsuite name=\"addition\" tests=\"1\" errors=\"0\" failures=\"0\" skipped=\"0\" timestamp=\"2017-07-13T09:42:28\" time=\"0.161\">\n    <testcase classname=\"addition positive numbers should add up\" name=\"addition positive numbers should add up\" time=\"0.004\">\n    </testcase>\n  </testsuite>\n</testsuites>\n```\n\n#### Example 2\nUsing the `classNameTemplate` and `titleTemplate`:\n\n```shell\nJEST_JUNIT_CLASSNAME=\"{classname}\" JEST_JUNIT_TITLE=\"{title}\" jest\n```\n\nrenders\n\n```xml\n<testsuites name=\"jest tests\">\n  <testsuite name=\"addition\" tests=\"1\" errors=\"0\" failures=\"0\" skipped=\"0\" timestamp=\"2017-07-13T09:45:42\" time=\"0.154\">\n    <testcase classname=\"addition positive numbers\" name=\"should add up\" time=\"0.005\">\n    </testcase>\n  </testsuite>\n</testsuites>\n```\n\n#### Example 3\nUsing the `ancestorSeparator`:\n\n```shell\nJEST_JUNIT_ANCESTOR_SEPARATOR=\" › \" jest\n```\nrenders\n\n```xml\n<testsuites name=\"jest tests\">\n  <testsuite name=\"addition\" tests=\"1\" errors=\"0\" failures=\"0\" skipped=\"0\" timestamp=\"2017-07-13T09:47:12\" time=\"0.162\">\n    <testcase classname=\"addition › positive numbers should add up\" name=\"addition › positive numbers should add up\" time=\"0.004\">\n    </testcase>\n  </testsuite>\n</testsuites>\n```\n\n#### Example 4\nUsing the `suiteNameTemplate`:\n\n```shell\nJEST_JUNIT_SUITE_NAME =\"{filename}\" jest\n```\n\n```xml\n<testsuites name=\"jest tests\">\n  <testsuite name=\"addition.test.js\" tests=\"1\" errors=\"0\" failures=\"0\" skipped=\"0\" timestamp=\"2017-07-13T09:42:28\" time=\"0.161\">\n    <testcase classname=\"addition positive numbers should add up\" name=\"addition positive numbers should add up\" time=\"0.004\">\n    </testcase>\n  </testsuite>\n</testsuites>\n```\n\n\n#### Example 5\nUsing `classNameTemplate` as a function in reporter options\n\n```js\n// jest.config.js\n{\n  reporters: [\n    \"default\",\n      [\n        \"jest-junit\",\n        {\n          classNameTemplate: (vars) => {\n            return vars.classname.toUpperCase();\n          }\n        }\n      ]\n  ]\n}\n```\n\nrenders\n\n```xml\n<testsuites name=\"jest tests\">\n  <testsuite name=\"addition\" tests=\"1\" errors=\"0\" failures=\"0\" skipped=\"0\" timestamp=\"2017-07-13T09:42:28\" time=\"0.161\">\n    <testcase classname=\"ADDITION POSITIVE NUMBERS\" name=\"addition positive numbers should add up\" time=\"0.004\">\n    </testcase>\n  </testsuite>\n</testsuites>\n```\n\n#### Adding custom testsuite properties\nNew feature as of jest-junit 11.0.0!\n\nCreate a file in your project root directory named junitProperties.js:\n```js\nmodule.exports = () => {\n    return {\n       key: \"value\"\n    }\n});\n```\n\nWill render\n```xml\n<testsuites name=\"jest tests\">\n  <testsuite name=\"addition\" tests=\"1\" errors=\"0\" failures=\"0\" skipped=\"0\" timestamp=\"2017-07-13T09:42:28\" time=\"0.161\">\n    <properties>\n        <property name=\"key\" value=\"value\" />\n    </properties>\n    <testcase classname=\"addition positive numbers should add up\" name=\"addition positive numbers should add up\" time=\"0.004\">\n    </testcase>\n  </testsuite>\n</testsuites>\n```"},"npm":{"downloads":[{"from":"2021-07-30T00:00:00.000Z","to":"2021-07-31T00:00:00.000Z","count":264268},{"from":"2021-07-24T00:00:00.000Z","to":"2021-07-31T00:00:00.000Z","count":1600408},{"from":"2021-07-01T00:00:00.000Z","to":"2021-07-31T00:00:00.000Z","count":6950842},{"from":"2021-05-02T00:00:00.000Z","to":"2021-07-31T00:00:00.000Z","count":20601753},{"from":"2021-02-01T00:00:00.000Z","to":"2021-07-31T00:00:00.000Z","count":40791633},{"from":"2020-07-31T00:00:00.000Z","to":"2021-07-31T00:00:00.000Z","count":70501307}],"dependentsCount":133,"starsCount":0},"github":{"starsCount":335,"forksCount":79,"subscribersCount":6,"issues":{"count":172,"openCount":13,"distribution":{"3600":57,"10800":11,"32400":18,"97200":14,"291600":14,"874800":9,"2624400":12,"7873200":15,"23619600":16,"70858800":6,"212576400":0},"isDisabled":false},"contributors":[{"username":"samertm","commitsCount":2},{"username":"SamTheisens","commitsCount":12},{"username":"joezeng","commitsCount":1},{"username":"palmerj3","commitsCount":82},{"username":"cmalard","commitsCount":1},{"username":"andrcuns","commitsCount":3},{"username":"daivinhtran","commitsCount":1},{"username":"crudo","commitsCount":1},{"username":"jsg2021","commitsCount":4},{"username":"yangshun","commitsCount":5},{"username":"pjona","commitsCount":1},{"username":"alde","commitsCount":1},{"username":"cisum-la","commitsCount":4},{"username":"phawxby","commitsCount":6},{"username":"dangoslen","commitsCount":3},{"username":"cezzre","commitsCount":1},{"username":"mtsmfm","commitsCount":3},{"username":"SimenB","commitsCount":1},{"username":"Vivalldi","commitsCount":1},{"username":"danjamin","commitsCount":3},{"username":"scttcper","commitsCount":1},{"username":"dtom90","commitsCount":1},{"username":"techieshark","commitsCount":1},{"username":"IIFE","commitsCount":2},{"username":"maxkomarychev","commitsCount":1},{"username":"sarod","commitsCount":1},{"username":"okize","commitsCount":1},{"username":"Wedvich","commitsCount":2}],"commits":[{"from":"2021-07-24T00:00:00.000Z","to":"2021-07-31T00:00:00.000Z","count":0},{"from":"2021-07-01T00:00:00.000Z","to":"2021-07-31T00:00:00.000Z","count":0},{"from":"2021-05-02T00:00:00.000Z","to":"2021-07-31T00:00:00.000Z","count":4},{"from":"2021-02-01T00:00:00.000Z","to":"2021-07-31T00:00:00.000Z","count":5},{"from":"2020-07-31T00:00:00.000Z","to":"2021-07-31T00:00:00.000Z","count":21}],"statuses":[{"context":"continuous-integration/travis-ci/push","state":"success"}]},"source":{"files":{"readmeSize":8230,"testsSize":35609},"badges":[{"urls":{"original":"https://travis-ci.org/jest-community/jest-junit.svg?branch=master","service":"https://api.travis-ci.org/jest-community/jest-junit.svg?branch=master","shields":"https://img.shields.io/travis/jest-community/jest-junit/master.svg","content":"https://img.shields.io/travis/jest-community/jest-junit/master.json"},"info":{"service":"travis","type":"build","modifiers":{"branch":"master"}}}],"outdatedDependencies":{"strip-ansi":{"required":"^5.2.0","stable":"7.0.0","latest":"7.0.0"}}}},"evaluation":{"quality":{"carefulness":0.7899999999999999,"tests":0.85,"health":0.75,"branding":0.15},"popularity":{"communityInterest":448,"downloadsCount":6867251,"downloadsAcceleration":18001.59628995433,"dependentsCount":133},"maintenance":{"releasesFrequency":0.9,"commitsFrequency":0.9,"openIssues":1,"issuesDistribution":0.9}},"score":{"final":0.7844661580836584,"detail":{"quality":0.9295726835687892,"popularity":0.4446607630168361,"maintenance":0.999894531306083}}}