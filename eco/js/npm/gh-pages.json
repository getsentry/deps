{"analyzedAt":"2021-06-21T21:02:09.259Z","collected":{"metadata":{"name":"gh-pages","scope":"unscoped","version":"3.2.3","description":"Publish to a gh-pages branch on GitHub (or any other branch on any other remote)","keywords":["git","gh-pages","github"],"date":"2021-06-21T21:01:06.275Z","author":{"name":"Tim Schaub","url":"http://tschaub.net/"},"publisher":{"username":"tschaub","email":"tim.schaub@gmail.com"},"maintainers":[{"username":"markdalgleish","email":"mark.john.dalgleish@gmail.com"},{"username":"tschaub","email":"tim.schaub@gmail.com"}],"repository":{"type":"git","url":"git://github.com/tschaub/gh-pages.git"},"links":{"npm":"https://www.npmjs.com/package/gh-pages","homepage":"https://github.com/tschaub/gh-pages","repository":"https://github.com/tschaub/gh-pages","bugs":"https://github.com/tschaub/gh-pages/issues"},"license":"MIT","dependencies":{"async":"^2.6.1","commander":"^2.18.0","email-addresses":"^3.0.1","filenamify":"^4.3.0","find-cache-dir":"^3.3.1","fs-extra":"^8.1.0","globby":"^6.1.0"},"devDependencies":{"chai":"^4.3.4","dir-compare":"^1.8.0","eslint":"^7.27.0","eslint-config-tschaub":"^13.1.0","mocha":"^8.4.0","sinon":"^10.0.0","tmp":"^0.2.1"},"releases":[{"from":"2021-05-22T00:00:00.000Z","to":"2021-06-21T00:00:00.000Z","count":3},{"from":"2021-03-23T00:00:00.000Z","to":"2021-06-21T00:00:00.000Z","count":3},{"from":"2020-12-23T00:00:00.000Z","to":"2021-06-21T00:00:00.000Z","count":3},{"from":"2020-06-21T00:00:00.000Z","to":"2021-06-21T00:00:00.000Z","count":3},{"from":"2019-06-22T00:00:00.000Z","to":"2021-06-21T00:00:00.000Z","count":8}],"hasTestScript":true,"hasSelectiveFiles":true,"readme":"# gh-pages\n\nPublish files to a `gh-pages` branch on GitHub (or any other branch anywhere else).\n\n## Getting Started\n\n```shell\nnpm install gh-pages --save-dev\n```\n\nThis module requires Git `>=1.9`.\n\n## Basic Usage\n\n```js\nvar ghpages = require('gh-pages');\n\nghpages.publish('dist', function(err) {});\n```\n\n\n## `publish`\n\n```js\nghpages.publish(dir, callback);\n// or...\nghpages.publish(dir, options, callback);\n```\n\nCalling this function will create a temporary clone of the current repository, create a `gh-pages` branch if one doesn't already exist, copy over all files from the base path, or only those that match patterns from the optional `src` configuration, commit all changes, and push to the `origin` remote.\n\nIf a `gh-pages` branch already exists, it will be updated with all commits from the remote before adding any commits from the provided `src` files.\n\n**Note** that any files in the `gh-pages` branch that are *not* in the `src` files **will be removed**.  See the [`add` option](#optionsadd) if you don't want any of the existing files removed.\n\n\n### <a id=\"dir\">`dir`</a>\n* type: `string`\n\nThe base directory for all source files (those listed in the `src` config property).\n\nExample use:\n\n```js\n/**\n * Given the following directory structure:\n *\n *   dist/\n *     index.html\n *     js/\n *       site.js\n *\n * The usage below will create a `gh-pages` branch that looks like this:\n *\n *   index.html\n *   js/\n *     site.js\n *\n */\nghpages.publish('dist', callback);\n```\n\n\n### Options\n\nThe default options work for simple cases.  The options described below let you push to alternate branches, customize your commit messages, and more.\n\n\n#### <a id=\"optionssrc\">options.src</a>\n * type: `string|Array<string>`\n * default: `'**/*'`\n\nThe [minimatch](https://github.com/isaacs/minimatch) pattern or array of patterns used to select which files should be published.\n\n\n#### <a id=\"optionsbranch\">options.branch</a>\n * type: `string`\n * default: `'gh-pages'`\n * `-b | --branch <branch name>`\n\nThe name of the branch you'll be pushing to.  The default uses GitHub's `gh-pages` branch, but this can be configured to push to any branch on any remote.\n\nExample use of the `branch` option:\n\n```js\n/**\n * This task pushes to the `master` branch of the configured `repo`.\n */\nghpages.publish('dist', {\n  branch: 'master',\n  repo: 'https://example.com/other/repo.git'\n}, callback);\n```\n\n\n#### <a id=\"optionsdest\">options.dest</a>\n * type: `string`\n * default: `'.'`\n\nThe destination folder within the destination branch.  By default, all files are published to the root of the repository.\n\nExample use of the `dest` option:\n\n```js\n/**\n * Place content in the static/project subdirectory of the target\n * branch.\n */\nghpages.publish('dist', {\n  dest: 'static/project'\n}, callback);\n```\n\n#### <a id=\"optionsdotfiles\">options.dotfiles</a>\n * type: `boolean`\n * default: `false`\n\nInclude dotfiles.  By default, files starting with `.` are ignored unless they are explicitly provided in the `src` array.  If you want to also include dotfiles that otherwise match your `src` patterns, set `dotfiles: true` in your options.\n\nExample use of the `dotfiles` option:\n\n```js\n/**\n * The usage below will push dotfiles (directories and files)\n * that otherwise match the `src` pattern.\n */\nghpages.publish('dist', {dotfiles: true}, callback);\n```\n\n\n#### <a id=\"optionsadd\">options.add</a>\n * type: `boolean`\n * default: `false`\n\nOnly add, and never remove existing files.  By default, existing files in the target branch are removed before adding the ones from your `src` config.  If you want the task to add new `src` files but leave existing ones untouched, set `add: true` in your options.\n\nExample use of the `add` option:\n\n```js\n/**\n * The usage below will only add files to the `gh-pages` branch, never removing\n * any existing files (even if they don't exist in the `src` config).\n */\nghpages.publish('dist', {add: true}, callback);\n```\n\n\n#### <a id=\"optionsrepo\">options.repo</a>\n * type: `string`\n * default: url for the origin remote of the current dir (assumes a git repository)\n * `-r | --repo <repo url>`\n\nBy default, `gh-pages` assumes that the current working directory is a git repository, and that you want to push changes to the `origin` remote.\n\nIf instead your script is not in a git repository, or if you want to push to another repository, you can provide the repository URL in the `repo` option.\n\nExample use of the `repo` option:\n\n```js\n/**\n * If the current directory is not a clone of the repository you want to work\n * with, set the URL for the repository in the `repo` option.  This usage will\n * push all files in the `src` config to the `gh-pages` branch of the `repo`.\n */\nghpages.publish('dist', {\n  repo: 'https://example.com/other/repo.git'\n}, callback);\n```\n\n\n#### <a id=\"optionsremote\">options.remote</a>\n * type: `string`\n * default: `'origin'`\n\nThe name of the remote you'll be pushing to.  The default is your `'origin'` remote, but this can be configured to push to any remote.\n\nExample use of the `remote` option:\n\n```js\n/**\n * This task pushes to the `gh-pages` branch of of your `upstream` remote.\n */\nghpages.publish('dist', {\n  remote: 'upstream'\n}, callback);\n```\n\n\n#### <a id=\"optionstag\">options.tag</a>\n * type: `string`\n * default: `''`\n\nCreate a tag after committing changes on the target branch.  By default, no tag is created.  To create a tag, provide the tag name as the option value.\n\n\n#### <a id=\"optionsmessage\">options.message</a>\n * type: `string`\n * default: `'Updates'`\n\nThe commit message for all commits.\n\nExample use of the `message` option:\n\n```js\n/**\n * This adds commits with a custom message.\n */\nghpages.publish('dist', {\n  message: 'Auto-generated commit'\n}, callback);\n```\n\n\n#### <a id=\"optionsuser\">options.user</a>\n * type: `Object`\n * default: `null`\n\nIf you are running the `gh-pages` task in a repository without a `user.name` or `user.email` git config properties (or on a machine without these global config properties), you must provide user info before git allows you to commit.  The `options.user` object accepts `name` and `email` string values to identify the committer.\n\nExample use of the `user` option:\n\n```js\nghpages.publish('dist', {\n  user: {\n    name: 'Joe Code',\n    email: 'coder@example.com'\n  }\n}, callback);\n```\n\n#### <a id=\"optionsuser\">options.remove</a>\n * type: `string`\n * default: `'.'`\n\nRemoves files that match the given pattern (Ignored if used together with\n`--add`). By default, `gh-pages` removes everything inside the target branch\nauto-generated directory before copying the new files from `dir`.\n\nExample use of the `remove` option:\n\n```js\nghpages.publish('dist', {\n  remove: \"*.json\"\n}, callback);\n```\n\n\n#### <a id=\"optionspush\">options.push</a>\n * type: `boolean`\n * default: `true`\n\nPush branch to remote.  To commit only (with no push) set to `false`.\n\nExample use of the `push` option:\n\n```js\nghpages.publish('dist', {push: false}, callback);\n```\n\n\n#### <a id=\"optionshistory\">options.history</a>\n * type: `boolean`\n * default: `true`\n\nPush force new commit without parent history.\n\nExample use of the `history` option:\n\n```js\nghpages.publish('dist', {history: false}, callback);\n```\n\n\n#### <a id=\"optionssilent\">options.silent</a>\n * type: `boolean`\n * default: `false`\n\nAvoid showing repository URLs or other information in errors.\n\nExample use of the `silent` option:\n\n```js\n/**\n * This configuration will avoid logging the GH_TOKEN if there is an error.\n */\nghpages.publish('dist', {\n  repo: 'https://' + process.env.GH_TOKEN + '@github.com/user/private-repo.git',\n  silent: true\n}, callback);\n```\n\n\n#### <a id=\"optionsbeforeadd\">options.beforeAdd</a>\n * type: `function`\n * default: `null`\n\nCustom callback that is executed right before `git add`.\n\nThe CLI expects a file exporting the beforeAdd function\n\n```bash\ngh-pages --before-add ./cleanup.js\n```\n\nExample use of the `beforeAdd` option:\n\n```js\n/**\n * beforeAdd makes most sense when `add` option is active\n * Assuming we want to keep everything on the gh-pages branch\n * but remove just `some-outdated-file.txt`\n */\nghpages.publish('dist', {\n  add: true,\n  async beforeAdd(git) {\n    return git.rm('./some-outdated-file.txt');\n  }\n}, callback);\n```\n\n\n#### <a id=\"optionsgit\">options.git</a>\n * type: `string`\n * default: `'git'`\n\nYour `git` executable.\n\nExample use of the `git` option:\n\n```js\n/**\n * If `git` is not on your path, provide the path as shown below.\n */\nghpages.publish('dist', {\n  git: '/path/to/git'\n}, callback);\n```\n\n## Command Line Utility\n\nInstalling the package creates a `gh-pages` command line utility.  Run `gh-pages --help` to see a list of supported options.\n\nWith a local install of `gh-pages`, you can set up a package script with something like the following:\n\n```shell\n\"scripts\": {\n  \"deploy\": \"gh-pages -d dist\"\n}\n```\n\nAnd then to publish everything from your `dist` folder to your `gh-pages` branch, you'd run this:\n\n```shell\nnpm run deploy\n```\n\n## Debugging\n\nTo get additional output from the `gh-pages` script, set `NODE_DEBUG=gh-pages`.  For example:\n\n```shell\nNODE_DEBUG=gh-pages npm run deploy\n```\n\n## Dependencies\n\nNote that this plugin requires Git 1.9 or higher (because it uses the `--exit-code` option for `git ls-remote`).  If you'd like to see this working with earlier versions of Git, please [open an issue](https://github.com/tschaub/gh-pages/issues).\n\n![Test Status](https://github.com/tschaub/gh-pages/workflows/Test/badge.svg)\n\n## Tips\n\n### when get error `branch already exists`\n```\n{ ProcessError: fatal: A branch named 'gh-pages' already exists.\n\n    at ChildProcess.<anonymous> (~/node_modules/gh-pages/lib/git.js:42:16)\n    at ChildProcess.emit (events.js:180:13)\n    at maybeClose (internal/child_process.js:936:16)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:220:5)\n  code: 128,\n  message: 'fatal: A branch named \\'gh-pages\\' already exists.\\n',\n  name: 'ProcessError' }\n  ```\n\nThe `gh-pages` module writes temporary files to a `node_modules/.cache/gh-pages` directory.  The location of this directory can be customized by setting the `CACHE_DIR` environment variable.\n\nIf `gh-pages` fails, you may find that you need to manually clean up the cache directory.  To remove the cache directory, run `node_modules/gh-pages/bin/gh-pages-clean` or remove `node_modules/.cache/gh-pages`.\n\n### Deploying to github pages with custom domain\n\nModify the deployment line to your deploy script if you use custom domain. This will prevent the deployment from removing the domain settings in GitHub.\n\n```\necho 'your_cutom_domain.online' > ./build/CNAME && gh-pages -d build\"\n```\n\n### Deploying with GitHub Actions\n\nIn order to deploy with GitHub Actions, you will need to define a user and set the git repository for the process. See the example step below\n\n```yaml\n- name: Deploy with gh-pages\n  run: |\n    git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git\n    npx gh-pages -d build -u \"github-actions-bot <support+actions@github.com>\"\n   env:\n    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n```\n\nThe `secrets.GITHUB_TOKEN` is provided automatically as part of the GitHub Action and does not require any further configuration, but simply needs to be passed in as an environmental variable to the step. `GITHUB_REPOSITORY` is the owner and repository name and is also passed in automatically, but does not need to be added to the `env` list.\n\nSee [Issue #345](https://github.com/tschaub/gh-pages/issues/345) for more information\n\n#### Deploying with GitHub Actions and a named script\n\nIf you are using a named script in the `package.json` file to deploy, you will need to ensure you pass the variables properly to the wrapped `gh-pages` script. Given the `package.json` script below:\n\n```json\n\"scripts\": {\n  \"deploy\": \"gh-pages -d build\"\n}\n```\n\nYou will need to utilize the `--` option to pass any additional arguments:\n\n```yaml\n- name: Deploy with gh-pages\n  run: |\n    git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git\n    npm run deploy -- -u \"github-actions-bot <support+actions@github.com>\"\n  env:\n    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n```\n\nSee [Pull Request #368](https://github.com/tschaub/gh-pages/pull/368) for more information."},"npm":{"downloads":[{"from":"2021-06-20T00:00:00.000Z","to":"2021-06-21T00:00:00.000Z","count":11131},{"from":"2021-06-14T00:00:00.000Z","to":"2021-06-21T00:00:00.000Z","count":208340},{"from":"2021-05-22T00:00:00.000Z","to":"2021-06-21T00:00:00.000Z","count":886043},{"from":"2021-03-23T00:00:00.000Z","to":"2021-06-21T00:00:00.000Z","count":2636839},{"from":"2020-12-23T00:00:00.000Z","to":"2021-06-21T00:00:00.000Z","count":5088184},{"from":"2020-06-21T00:00:00.000Z","to":"2021-06-21T00:00:00.000Z","count":9627620}],"dependentsCount":642,"starsCount":88},"github":{"homepage":"https://www.npmjs.com/package/gh-pages","starsCount":2525,"forksCount":173,"subscribersCount":22,"issues":{"count":396,"openCount":91,"distribution":{"3600":55,"10800":5,"32400":12,"97200":12,"291600":22,"874800":26,"2624400":45,"7873200":49,"23619600":59,"70858800":53,"212576400":58},"isDisabled":false},"contributors":[{"username":"JRJurman","commitsCount":1},{"username":"okuryu","commitsCount":2},{"username":"tusharmath","commitsCount":2},{"username":"cvan","commitsCount":1},{"username":"mickelsonmichael","commitsCount":4},{"username":"warmhug","commitsCount":1},{"username":"donavon","commitsCount":1},{"username":"tw0517tw","commitsCount":1},{"username":"greenkeeper[bot]","commitsCount":18},{"username":"sunghwan2789","commitsCount":10},{"username":"lelandmiller","commitsCount":1},{"username":"thekevinscott","commitsCount":1},{"username":"AviVahl","commitsCount":3},{"username":"n1k0","commitsCount":1},{"username":"cizordj","commitsCount":1},{"username":"esarbanis","commitsCount":1},{"username":"amtrack","commitsCount":1},{"username":"mandeldl","commitsCount":1},{"username":"d-tsuji","commitsCount":1},{"username":"timaschew","commitsCount":4},{"username":"afc163","commitsCount":3},{"username":"Victoire44","commitsCount":1},{"username":"sobolevn","commitsCount":1},{"username":"greenkeeperio-bot","commitsCount":18},{"username":"tschaub","commitsCount":124},{"username":"Ambyjkl","commitsCount":1},{"username":"dplusic","commitsCount":1},{"username":"polyglotm","commitsCount":1},{"username":"MoOx","commitsCount":1},{"username":"markdalgleish","commitsCount":7},{"username":"demee","commitsCount":1},{"username":"Xiphe","commitsCount":1},{"username":"XhmikosR","commitsCount":1}],"commits":[{"from":"2021-06-14T00:00:00.000Z","to":"2021-06-21T00:00:00.000Z","count":4},{"from":"2021-05-22T00:00:00.000Z","to":"2021-06-21T00:00:00.000Z","count":17},{"from":"2021-03-23T00:00:00.000Z","to":"2021-06-21T00:00:00.000Z","count":20},{"from":"2020-12-23T00:00:00.000Z","to":"2021-06-21T00:00:00.000Z","count":23},{"from":"2020-06-21T00:00:00.000Z","to":"2021-06-21T00:00:00.000Z","count":25}]},"source":{"files":{"readmeSize":12254,"testsSize":18559,"hasChangelog":true},"linters":["eslint"],"outdatedDependencies":{"globby":{"required":"^6.1.0","stable":"11.0.4","latest":"11.0.4"},"email-addresses":{"required":"^3.0.1","stable":"4.0.0","latest":"4.0.0"},"async":{"required":"^2.6.1","stable":"3.2.0","latest":"3.2.0"},"fs-extra":{"required":"^8.1.0","stable":"10.0.0","latest":"10.0.0"},"commander":{"required":"^2.18.0","stable":"7.2.0","latest":"8.0.0-2"}}}},"evaluation":{"quality":{"carefulness":0.9999999999999999,"tests":0.6,"health":0.5,"branding":0},"popularity":{"communityInterest":2841,"downloadsCount":878946.3333333334,"downloadsAcceleration":1262.0933409436839,"dependentsCount":642},"maintenance":{"releasesFrequency":1,"commitsFrequency":0.9617191780821918,"openIssues":0.9503367003367004,"issuesDistribution":0}},"score":{"final":0.6221128000850011,"detail":{"quality":0.7845531171991778,"popularity":0.4383283408041373,"maintenance":0.6666627018394281}}}