{"analyzedAt":"2021-08-15T07:00:39.458Z","collected":{"metadata":{"name":"compression-webpack-plugin","scope":"unscoped","version":"8.0.1","description":"Prepare compressed versions of assets to serve them with Content-Encoding","keywords":["webpack"],"date":"2021-06-25T13:09:12.493Z","author":{"name":"Tobias Koppers @sokra"},"publisher":{"username":"evilebottnawi","email":"sheo13666q@gmail.com"},"maintainers":[{"username":"evilebottnawi","email":"sheo13666q@gmail.com"},{"username":"sokra","email":"tobias.koppers@googlemail.com"},{"username":"jhnns","email":"mail@johannesewald.de"},{"username":"michael-ciniawsky","email":"michael.ciniawsky@gmail.com"},{"username":"d3viant0ne","email":"wiens.joshua@gmail.com"},{"username":"bebraw","email":"bebraw@gmail.com"},{"username":"ericclemmons","email":"eric@smarterspam.com"},{"username":"thelarkinn","email":"sean.larkin@cuw.edu"}],"repository":{"type":"git","url":"git+https://github.com/webpack-contrib/compression-webpack-plugin.git"},"links":{"npm":"https://www.npmjs.com/package/compression-webpack-plugin","homepage":"https://github.com/webpack-contrib/compression-webpack-plugin","repository":"https://github.com/webpack-contrib/compression-webpack-plugin","bugs":"https://github.com/webpack-contrib/compression-webpack-plugin/issues"},"license":"MIT","dependencies":{"schema-utils":"^3.0.0","serialize-javascript":"^6.0.0"},"devDependencies":{"@babel/cli":"^7.14.5","@babel/core":"^7.14.6","@babel/preset-env":"^7.14.7","@commitlint/cli":"^12.1.4","@commitlint/config-conventional":"^12.1.4","@gfx/zopfli":"^1.0.15","@webpack-contrib/eslint-config-webpack":"^3.0.0","babel-jest":"^27.0.5","cross-env":"^7.0.3","del":"^6.0.0","del-cli":"^4.0.0","eslint":"^7.29.0","eslint-config-prettier":"^8.3.0","eslint-plugin-import":"^2.23.4","file-loader":"^6.2.0","husky":"^6.0.0","jest":"^27.0.5","lint-staged":"^11.0.0","memfs":"^3.2.2","npm-run-all":"^4.1.5","prettier":"^2.3.1","standard-version":"^9.3.0","webpack":"^5.40.0","webpack-stats-plugin":"^1.0.3","workbox-webpack-plugin":"^6.1.5"},"peerDependencies":{"webpack":"^5.1.0"},"releases":[{"from":"2021-07-16T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":0},{"from":"2021-05-17T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":3},{"from":"2021-02-16T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":3},{"from":"2020-08-15T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":18},{"from":"2019-08-16T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":22}],"hasTestScript":true,"hasSelectiveFiles":true,"readme":"<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![cover][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# compression-webpack-plugin\n\nPrepare compressed versions of assets to serve them with Content-Encoding.\n\n## Getting Started\n\nTo begin, you'll need to install `compression-webpack-plugin`:\n\n```console\n$ npm install compression-webpack-plugin --save-dev\n```\n\nThen add the plugin to your `webpack` config. For example:\n\n**webpack.config.js**\n\n```js\nconst CompressionPlugin = require(\"compression-webpack-plugin\");\n\nmodule.exports = {\n  plugins: [new CompressionPlugin()],\n};\n```\n\nAnd run `webpack` via your preferred method.\n\n## Options\n\n|                        Name                         |                   Type                    |                            Default                            | Description                                                                                                   |\n| :-------------------------------------------------: | :---------------------------------------: | :-----------------------------------------------------------: | :------------------------------------------------------------------------------------------------------------ |\n|                 **[`test`](#test)**                 | `{String\\|RegExp\\|Array<String\\|RegExp>}` |                          `undefined`                          | Include all assets that pass test assertion                                                                   |\n|              **[`include`](#include)**              | `{String\\|RegExp\\|Array<String\\|RegExp>}` |                          `undefined`                          | Include all assets matching any of these conditions                                                           |\n|              **[`exclude`](#exclude)**              | `{String\\|RegExp\\|Array<String\\|RegExp>}` |                          `undefined`                          | Exclude all assets matching any of these conditions                                                           |\n|            **[`algorithm`](#algorithm)**            |           `{String\\|Function}`            |                            `gzip`                             | The compression algorithm/function                                                                            |\n|   **[`compressionOptions`](#compressionoptions)**   |                `{Object}`                 | maximum available compression level, for gzip: `{ level: 9 }` | Compression options for `algorithm`                                                                           |\n|            **[`threshold`](#threshold)**            |                `{Number}`                 |                              `0`                              | Only assets bigger than this size are processed (in bytes)                                                    |\n|             **[`minRatio`](#minratio)**             |                `{Number}`                 |                             `0.8`                             | Only assets that compress better than this ratio are processed (`minRatio = Compressed Size / Original Size`) |\n|             **[`filename`](#filename)**             |           `{String\\|Function}`            |                       `[path][base].gz`                       | The target asset filename                                                                                     |\n| **[`deleteOriginalAssets`](#deleteoriginalassets)** |      `{Boolean\\|'keep-source-map'}`       |                            `false`                            | Whether to delete the original assets or not                                                                  |\n\n### `test`\n\nType: `String|RegExp|Array<String|RegExp>`\nDefault: `undefined`\n\nInclude all assets that pass test assertion.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      test: /\\.js(\\?.*)?$/i,\n    }),\n  ],\n};\n```\n\n### `include`\n\nType: `String|RegExp|Array<String|RegExp>`\nDefault: `undefined`\n\nInclude all assets matching any of these conditions.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      include: /\\/includes/,\n    }),\n  ],\n};\n```\n\n### `exclude`\n\nType: `String|RegExp|Array<String|RegExp>`\nDefault: `undefined`\n\nExclude all assets matching any of these conditions.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      exclude: /\\/excludes/,\n    }),\n  ],\n};\n```\n\n### `algorithm`\n\nType: `String|Function`\nDefault: `gzip`\n\nThe compression algorithm/function.\n\n> ℹ️ If you use custom function for the `algorithm` option, the default value of the `compressionOptions` option is `{}`.\n\n#### `String`\n\nThe algorithm is taken from [zlib](https://nodejs.org/api/zlib.html).\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      algorithm: \"gzip\",\n    }),\n  ],\n};\n```\n\n#### `Function`\n\nAllow to specify a custom compression function.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      algorithm(input, compressionOptions, callback) {\n        return compressionFunction(input, compressionOptions, callback);\n      },\n    }),\n  ],\n};\n```\n\n### `compressionOptions`\n\nType: `Object`\nDefault: `{ level: 9 }`\n\nCompression options for `algorithm`.\n\nYou can find all options here [zlib](https://nodejs.org/api/zlib.html#zlib_class_options).\n\n> ℹ️ If you use custom function for the `algorithm` option, the default value is `{}`.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      compressionOptions: { level: 1 },\n    }),\n  ],\n};\n```\n\n### `threshold`\n\nType: `Number`\nDefault: `0`\n\nOnly assets bigger than this size are processed. In bytes.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      threshold: 8192,\n    }),\n  ],\n};\n```\n\n### `minRatio`\n\nType: `Number`\nDefault: `0.8`\n\nOnly assets that compress better than this ratio are processed (`minRatio = Compressed Size / Original Size`).\nExample: you have `image.png` file with 1024b size, compressed version of file has 768b size, so `minRatio` equal `0.75`.\nIn other words assets will be processed when the `Compressed Size / Original Size` value less `minRatio` value.\n\nYou can use `1` value to process assets that are smaller than the original.\n\nUse a value of `Infinity` to process all assets even if they are larger than the original size or their original size is `0` bytes (useful when you are pre-zipping all assets for AWS).\n\nUse a value of `Number.MAX_SAFE_INTEGER` to process all assets even if they are larger than the original size, excluding assets with their original size is `0` bytes.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      // Compress all assets, including files with `0` bytes size\n      // minRatio: Infinity\n\n      // Compress all assets, excluding files with `0` bytes size\n      // minRatio: Number.MAX_SAFE_INTEGER\n\n      minRatio: 0.8,\n    }),\n  ],\n};\n```\n\n### `filename`\n\nType: `String|Function`\nDefault: `\"[path][base].gz\"`\n\nThe target asset filename.\n\n#### `String`\n\nFor example we have `assets/images/image.png?foo=bar#hash`:\n\n`[path]` is replaced with the directories to the original asset, included trailing `/` (`assets/images/`).\n\n`[file]` is replaced with the path of original asset (`assets/images/image.png`).\n\n`[base]` is replaced with the base (`[name]` + `[ext]`) of the original asset (`image.png`).\n\n`[name]` is replaced with the name of the original asset (`image`).\n\n`[ext]` is replaced with the extension of the original asset, included `.` (`.png`).\n\n`[query]` is replaced with the query of the original asset, included `?` (`?foo=bar`).\n\n`[fragment]` is replaced with the fragment (in the concept of URL it is called `hash`) of the original asset (`#hash`).\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      filename: \"[path][base].gz\",\n    }),\n  ],\n};\n```\n\n#### `Function`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      filename(pathData) {\n        // The `pathData` argument contains all placeholders - `path`/`name`/`ext`/etc\n        // Available properties described above, for the `String` notation\n        if (/\\.svg$/.test(pathData.file)) {\n          return \"assets/svg/[path][base].gz\";\n        }\n\n        return \"assets/js/[path][base].gz\";\n      },\n    }),\n  ],\n};\n```\n\n### `deleteOriginalAssets`\n\nType: `Boolean | 'keep-source-map'`\nDefault: `false`\n\nWhether to delete the original assets or not.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      deleteOriginalAssets: true,\n    }),\n  ],\n};\n```\n\nTo exclude sourcemaps from compression\n\n```js\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      exclude: /.map$/\n      deleteOriginalAssets: 'keep-source-map',\n    }),\n  ],\n};\n```\n\n## Examples\n\n### Using Zopfli\n\nPrepare compressed versions of assets using `zopfli` library.\n\n> ℹ️ `@gfx/zopfli` require minimum `8` version of `node`.\n\nTo begin, you'll need to install `@gfx/zopfli`:\n\n```console\n$ npm install @gfx/zopfli --save-dev\n```\n\n**webpack.config.js**\n\n```js\nconst zopfli = require(\"@gfx/zopfli\");\n\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      compressionOptions: {\n        numiterations: 15,\n      },\n      algorithm(input, compressionOptions, callback) {\n        return zopfli.gzip(input, compressionOptions, callback);\n      },\n    }),\n  ],\n};\n```\n\n### Using Brotli\n\n[Brotli](https://en.wikipedia.org/wiki/Brotli) is a compression algorithm originally developed by Google, and offers compression superior to gzip.\n\nNode 10.16.0 and later has [native support](https://nodejs.org/api/zlib.html#zlib_zlib_createbrotlicompress_options) for Brotli compression in its zlib module.\n\nWe can take advantage of this built-in support for Brotli in Node 10.16.0 and later by just passing in the appropriate `algorithm` to the CompressionPlugin:\n\n**webpack.config.js**\n\n```js\nconst zlib = require(\"zlib\");\n\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      filename: \"[path][base].br\",\n      algorithm: \"brotliCompress\",\n      test: /\\.(js|css|html|svg)$/,\n      compressionOptions: {\n        params: {\n          [zlib.constants.BROTLI_PARAM_QUALITY]: 11,\n        },\n      },\n      threshold: 10240,\n      minRatio: 0.8,\n      deleteOriginalAssets: false,\n    }),\n  ],\n};\n```\n\n**Note** Brotli’s `BROTLI_PARAM_QUALITY` option is functionally equivalent to zlib’s `level` option.\nYou can find all Brotli’s options in [the relevant part of the zlib module documentation](https://nodejs.org/api/zlib.html#zlib_class_brotlioptions).\n\n### Multiple compressed versions of assets for different algorithm\n\n**webpack.config.js**\n\n```js\nconst zlib = require(\"zlib\");\n\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      filename: \"[path][base].gz\",\n      algorithm: \"gzip\",\n      test: /\\.js$|\\.css$|\\.html$/,\n      threshold: 10240,\n      minRatio: 0.8,\n    }),\n    new CompressionPlugin({\n      filename: \"[path][base].br\",\n      algorithm: \"brotliCompress\",\n      test: /\\.(js|css|html|svg)$/,\n      compressionOptions: {\n        params: {\n          [zlib.constants.BROTLI_PARAM_QUALITY]: 11,\n        },\n      },\n      threshold: 10240,\n      minRatio: 0.8,\n    }),\n  ],\n};\n```\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/compression-webpack-plugin.svg\n[npm-url]: https://npmjs.com/package/compression-webpack-plugin\n[node]: https://img.shields.io/node/v/compression-webpack-plugin.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/compression-webpack-plugin.svg\n[deps-url]: https://david-dm.org/webpack-contrib/compression-webpack-plugin\n[tests]: https://github.com/webpack-contrib/compression-webpack-plugin/workflows/compression-webpack-plugin/badge.svg\n[tests-url]: https://github.com/webpack-contrib/compression-webpack-plugin/actions\n[cover]: https://codecov.io/gh/webpack-contrib/compression-webpack-plugin/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/compression-webpack-plugin\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=compression-webpack-plugin\n[size-url]: https://packagephobia.now.sh/result?p=compression-webpack-plugin"},"npm":{"downloads":[{"from":"2021-08-14T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":43812},{"from":"2021-08-08T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":1252975},{"from":"2021-07-16T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":5258385},{"from":"2021-05-17T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":16462146},{"from":"2021-02-16T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":32674662},{"from":"2020-08-15T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":59850594}],"dependentsCount":571,"starsCount":13},"github":{"starsCount":1265,"forksCount":105,"subscribersCount":21,"issues":{"count":261,"openCount":2,"distribution":{"3600":67,"10800":17,"32400":19,"97200":29,"291600":27,"874800":14,"2624400":22,"7873200":17,"23619600":31,"70858800":17,"212576400":1},"isDisabled":false},"contributors":[{"username":"graingert","commitsCount":1},{"username":"sibiraj-s","commitsCount":1},{"username":"180254","commitsCount":1},{"username":"skipjack","commitsCount":1},{"username":"Stavrus","commitsCount":1},{"username":"shama","commitsCount":1},{"username":"shahankit","commitsCount":1},{"username":"ronen-e","commitsCount":1},{"username":"jamesgeorge007","commitsCount":1},{"username":"ijpiantanida","commitsCount":1},{"username":"michael-ciniawsky","commitsCount":10},{"username":"snitin315","commitsCount":6},{"username":"d3viant0ne","commitsCount":21},{"username":"alexander-akait","commitsCount":33},{"username":"sokra","commitsCount":10},{"username":"khalwat","commitsCount":1},{"username":"nickbouldien","commitsCount":1},{"username":"hecktarzuli","commitsCount":1},{"username":"newyork-anthonyng","commitsCount":1},{"username":"azat-io","commitsCount":1},{"username":"rufman","commitsCount":3},{"username":"Icehunter","commitsCount":1},{"username":"ai","commitsCount":2},{"username":"cap-Bernardito","commitsCount":6},{"username":"codechaotic","commitsCount":2},{"username":"anshumanv","commitsCount":1},{"username":"AlexanderFSP","commitsCount":1},{"username":"stijnvn","commitsCount":1},{"username":"gfx","commitsCount":1},{"username":"robertbachmann","commitsCount":1}],"commits":[{"from":"2021-08-08T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":0},{"from":"2021-07-16T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":5},{"from":"2021-05-17T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":11},{"from":"2021-02-16T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":14},{"from":"2020-08-15T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":56}],"statuses":[{"context":"codecov/patch","state":"success"},{"context":"codecov/project","state":"success"}]},"source":{"files":{"readmeSize":12906,"testsSize":235611,"hasChangelog":true},"badges":[{"urls":{"original":"https://img.shields.io/npm/v/compression-webpack-plugin.svg","shields":"https://img.shields.io/npm/v/compression-webpack-plugin.svg","content":"https://img.shields.io/npm/v/compression-webpack-plugin.json"},"info":{"service":"npm","type":"version","modifiers":{"type":"v"}}},{"urls":{"original":"https://david-dm.org/webpack-contrib/compression-webpack-plugin.svg","service":"https://david-dm.org/webpack-contrib/compression-webpack-plugin.svg","shields":"https://img.shields.io/david/webpack-contrib/compression-webpack-plugin.svg","content":"https://img.shields.io/david/webpack-contrib/compression-webpack-plugin.json"},"info":{"service":"david","type":"dependencies","modifiers":{"statusType":"normal"}}}],"linters":["editorconfig","eslint","prettier"],"coverage":0.96}},"evaluation":{"quality":{"carefulness":0.9999999999999999,"tests":0.994,"health":1,"branding":0.3},"popularity":{"communityInterest":1434,"downloadsCount":5487382,"downloadsAcceleration":7214.2349315068495,"dependentsCount":571},"maintenance":{"releasesFrequency":0.9584760273972603,"commitsFrequency":0.9,"openIssues":1,"issuesDistribution":0.9}},"score":{"final":0.8231006515690813,"detail":{"quality":0.9944643253428762,"popularity":0.49938017230319665,"maintenance":0.9999379818859988}}}