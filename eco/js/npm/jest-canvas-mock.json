{"analyzedAt":"2021-07-12T05:15:42.800Z","collected":{"metadata":{"name":"jest-canvas-mock","scope":"unscoped","version":"2.3.1","description":"Mock a canvas in your jest tests.","keywords":["mock","jest","jest-mock","echarts","canvas","test","unit"],"date":"2021-02-07T02:38:33.499Z","author":{"name":"hustcc"},"publisher":{"username":"atool","email":"i@hust.cc"},"maintainers":[{"username":"jtenner","email":"tenner.joshua@gmail.com"},{"username":"atool","email":"i@hust.cc"}],"repository":{"type":"git","url":"git+https://github.com/hustcc/jest-canvas-mock.git"},"links":{"npm":"https://www.npmjs.com/package/jest-canvas-mock","homepage":"https://github.com/hustcc/jest-canvas-mock#readme","repository":"https://github.com/hustcc/jest-canvas-mock","bugs":"https://github.com/hustcc/jest-canvas-mock/issues"},"license":"MIT","dependencies":{"cssfontparser":"^1.2.1","moo-color":"^1.0.2"},"devDependencies":{"@antv/g2plot":"^2.3.11","@babel/cli":"^7.8.4","@babel/core":"^7.9.0","@babel/plugin-proposal-class-properties":"^7.8.3","@babel/preset-env":"^7.9.5","@commitlint/cli":"^8.3.5","@commitlint/config-angular":"^8.3.4","babel-jest":"^25.3.0","babel-plugin-version":"^0.2.3","coveralls":"^3.0.11","husky":"^4.2.5","jest":"^25.3.0","prettier":"^2.0.4"},"releases":[{"from":"2021-06-12T00:00:00.000Z","to":"2021-07-12T00:00:00.000Z","count":0},{"from":"2021-04-13T00:00:00.000Z","to":"2021-07-12T00:00:00.000Z","count":0},{"from":"2021-01-13T00:00:00.000Z","to":"2021-07-12T00:00:00.000Z","count":2},{"from":"2020-07-12T00:00:00.000Z","to":"2021-07-12T00:00:00.000Z","count":3},{"from":"2019-07-13T00:00:00.000Z","to":"2021-07-12T00:00:00.000Z","count":6}],"hasTestScript":true,"hasSelectiveFiles":true,"readme":"# jest-canvas-mock\n\n> Mock `canvas` when run unit test cases with jest. For more browser environment, you can use [jest-electron](https://github.com/hustcc/jest-electron) for real browser runtime.\n\n[![Build Status](https://travis-ci.org/hustcc/jest-canvas-mock.svg?branch=master)](https://travis-ci.org/hustcc/jest-canvas-mock)\n[![Coverage Status](https://coveralls.io/repos/github/hustcc/jest-canvas-mock/badge.svg?branch=master)](https://coveralls.io/github/hustcc/jest-canvas-mock)\n[![npm](https://img.shields.io/npm/v/jest-canvas-mock.svg)](https://www.npmjs.com/package/jest-canvas-mock)\n[![npm](https://img.shields.io/npm/dm/jest-canvas-mock.svg)](https://www.npmjs.com/package/jest-canvas-mock)\n[![Mentioned in Awesome Jest](https://awesome.re/mentioned-badge.svg)](https://github.com/jest-community/awesome-jest)\n\n## Install\n\nThis should only be installed as a development dependency (`devDependencies`) as it is only designed for testing.\n\n```bash\nnpm i --save-dev jest-canvas-mock\n```\n\n## Setup\n\nIn your `package.json` under the `jest`, create a `setupFiles` array and add `jest-canvas-mock` to the array.\n\n```json\n{\n  \"jest\": {\n    \"setupFiles\": [\"jest-canvas-mock\"]\n  }\n}\n```\n\nIf you already have a `setupFiles` attribute you can also append `jest-canvas-mock` to the array.\n\n```json\n{\n  \"jest\": {\n    \"setupFiles\": [\"./__setups__/other.js\", \"jest-canvas-mock\"]\n  }\n}\n```\n\nMore about in [configuration section](https://facebook.github.io/jest/docs/en/configuration.html#content).\n\n## Setup file\n\nAlternatively you can create a new setup file which then requires this module or\nadd the `require` statement to an existing setup file.\n\n`__setups__/canvas.js`\n\n```js\nimport 'jest-canvas-mock';\n// or\nrequire('jest-canvas-mock');\n```\n\nAdd that file to your `setupFiles` array:\n\n```json\n\"jest\": {\n  \"setupFiles\": [\n    \"./__setups__/canvas.js\"\n  ]\n}\n```\n\n## Mock Strategy\n\nThis mock strategy implements all the canvas functions and actually verifies the parameters. If a\nknown condition would cause the browser to throw a `TypeError` or a `DOMException`, it emulates the\nerror. For instance, the `CanvasRenderingContext2D#arc` function will throw a `TypeError` if the\nradius is negative, or if it was not provided with enough parameters.\n\n```ts\n// arc throws a TypeError when the argument length is less than 5\nexpect(() => ctx.arc(1, 2, 3, 4)).toThrow(TypeError);\n\n// when radius is negative, arc throws a dom exception when all parameters are finite\nexpect(() => ctx.arc(0, 0, -10, 0, Math.PI * 2)).toThrow(DOMException);\n```\n\nThe function will do `Number` type coercion and verify the inputs exactly like the browser does. So\nthis is valid input.\n\n```ts\nexpect(() => ctx.arc('10', '10', '20', '0', '6.14')).not.toThrow();\n```\n\nAnother part of the strategy is to validate input types. When using the\n`CanvasRenderingContext2D#fill` function, if you pass it an invalid `fillRule` it will throw a\n`TypeError` just like the browser does.\n\n```ts\nexpect(() => ctx.fill('invalid!')).toThrow(TypeError);\nexpect(() => ctx.fill(new Path2D(), 'invalid!')).toThrow(TypeError);\n```\n\nWe try to follow the ECMAScript specification as closely as possible.\n\n## Snapshots\n\nThere are multiple ways to validate canvas state using snapshots. There are currently three methods\nattached to the `CanvasRenderingContext2D` class. The first way to use this feature is by using the\n`__getEvents` method.\n\n```ts\n/**\n * In order to see which functions and properties were used for the test, you can use `__getEvents`\n * to gather this information.\n */\nconst events = ctx.__getEvents();\n\nexpect(events).toMatchSnapshot(); // jest will assert the events match the snapshot\n```\n\nThe second way is to inspect the current path associated with the context.\n\n```ts\nctx.beginPath();\nctx.arc(1, 2, 3, 4, 5);\nctx.moveTo(6, 7);\nctx.rect(6, 7, 8, 9);\nctx.closePath();\n\n/**\n * Any method that modifies the current path (and subpath) will be pushed to an event array. When\n * using the `__getPath` method, that array will sliced and usable for snapshots.\n */\nconst path = ctx.__getPath();\nexpect(path).toMatchSnapshot();\n```\n\nThe third way is to inspect all of the successful draw calls submitted to the context.\n\n```ts\nctx.drawImage(img, 0, 0);\n\n/**\n * Every drawImage, fill, stroke, fillText, or strokeText function call will be logged in an event\n * array. This method will return those events here for inspection.\n */\nconst calls = ctx.__getDrawCalls();\nexpect(calls).toMatchSnapshot();\n```\n\nIn some cases it may be useful to clear the events or draw calls that have already been logged.\n\n```ts\n// Clear events\nctx.__clearEvents();\n\n// Clear draw calls\nctx.__clearDrawCalls();\n```\n\nFinally, it's possible to inspect the clipping region calls by using the `__getClippingRegion`\nfunction.\n\n```ts\nconst clippingRegion = ctx.__getClippingRegion();\nexpect(clippingRegion).toMatchSnapshot();\n```\n\nThe clipping region cannot be cleared because it's based on the stack values and when the `.clip()`\nfunction is called.\n\n## Override default mock return value\n\nYou can override the default mock return value in your test to suit your need. For example, to override return value of `toDataURL`:\n\n```ts\ncanvas.toDataURL.mockReturnValueOnce(\n  'data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg=='\n);\n```\n\n## Contributors\n\n- [@hustcc](https://github.com/hustcc)\n- [@jtenner](https://github.com/jtenner)\n- [@evanoc0](https://github.com/evanoc0)\n- [@lekha](https://github.com/lekha)\n\n## License\n\nMIT@[hustcc](https://github.com/hustcc)."},"npm":{"downloads":[{"from":"2021-07-11T00:00:00.000Z","to":"2021-07-12T00:00:00.000Z","count":18299},{"from":"2021-07-05T00:00:00.000Z","to":"2021-07-12T00:00:00.000Z","count":641888},{"from":"2021-06-12T00:00:00.000Z","to":"2021-07-12T00:00:00.000Z","count":2739591},{"from":"2021-04-13T00:00:00.000Z","to":"2021-07-12T00:00:00.000Z","count":8498146},{"from":"2021-01-13T00:00:00.000Z","to":"2021-07-12T00:00:00.000Z","count":15956409},{"from":"2020-07-12T00:00:00.000Z","to":"2021-07-12T00:00:00.000Z","count":26661987}],"dependentsCount":58,"starsCount":1},"github":{"homepage":"https://github.com/hustcc/jest-canvas-mock","starsCount":203,"forksCount":25,"subscribersCount":2,"issues":{"count":82,"openCount":11,"distribution":{"3600":8,"10800":3,"32400":6,"97200":12,"291600":9,"874800":18,"2624400":6,"7873200":5,"23619600":11,"70858800":4,"212576400":0},"isDisabled":false},"contributors":[{"username":"lualparedes","commitsCount":3},{"username":"FeliciousX","commitsCount":1},{"username":"jtenner","commitsCount":32},{"username":"paradite","commitsCount":1},{"username":"doug2k1","commitsCount":1},{"username":"robinelvin","commitsCount":1},{"username":"GMartigny","commitsCount":2},{"username":"milahu","commitsCount":2},{"username":"stijndepestel","commitsCount":1},{"username":"evanoc3","commitsCount":1},{"username":"lekha","commitsCount":1},{"username":"andypearson","commitsCount":1},{"username":"tvthatsme","commitsCount":1},{"username":"hustcc","commitsCount":31},{"username":"kevinbarabash","commitsCount":1}],"commits":[{"from":"2021-07-05T00:00:00.000Z","to":"2021-07-12T00:00:00.000Z","count":0},{"from":"2021-06-12T00:00:00.000Z","to":"2021-07-12T00:00:00.000Z","count":0},{"from":"2021-04-13T00:00:00.000Z","to":"2021-07-12T00:00:00.000Z","count":0},{"from":"2021-01-13T00:00:00.000Z","to":"2021-07-12T00:00:00.000Z","count":4},{"from":"2020-07-12T00:00:00.000Z","to":"2021-07-12T00:00:00.000Z","count":6}],"statuses":[{"context":"coverage/coveralls","state":"success"},{"context":"github/pages","state":"success"}]},"source":{"files":{"readmeSize":5580,"testsSize":175733,"hasChangelog":true},"badges":[{"urls":{"original":"https://travis-ci.org/hustcc/jest-canvas-mock.svg?branch=master","service":"https://api.travis-ci.org/hustcc/jest-canvas-mock.svg?branch=master","shields":"https://img.shields.io/travis/hustcc/jest-canvas-mock/master.svg","content":"https://img.shields.io/travis/hustcc/jest-canvas-mock/master.json"},"info":{"service":"travis","type":"build","modifiers":{"branch":"master"}}},{"urls":{"original":"https://coveralls.io/repos/github/hustcc/jest-canvas-mock/badge.svg?branch=master","service":"https://coveralls.io/repos/github/hustcc/jest-canvas-mock/badge.svg?branch=master","shields":"https://img.shields.io/coveralls/hustcc/jest-canvas-mock/master.svg","content":"https://img.shields.io/coveralls/hustcc/jest-canvas-mock/master.json"},"info":{"service":"coveralls","type":"coverage","modifiers":{"branch":"master"}}},{"urls":{"original":"https://img.shields.io/npm/v/jest-canvas-mock.svg","shields":"https://img.shields.io/npm/v/jest-canvas-mock.svg","content":"https://img.shields.io/npm/v/jest-canvas-mock.json"},"info":{"service":"npm","type":"version","modifiers":{"type":"v"}}},{"urls":{"original":"https://img.shields.io/npm/dm/jest-canvas-mock.svg","shields":"https://img.shields.io/npm/dm/jest-canvas-mock.svg","content":"https://img.shields.io/npm/dm/jest-canvas-mock.json"},"info":{"service":"npm","type":"downloads","modifiers":{"type":"dm"}}}],"linters":["prettier"],"coverage":1}},"evaluation":{"quality":{"carefulness":0.9999999999999999,"tests":1,"health":1,"branding":0.6},"popularity":{"communityInterest":246,"downloadsCount":2832715.3333333335,"downloadsAcceleration":8468.334303652962,"dependentsCount":58},"maintenance":{"releasesFrequency":0.9,"commitsFrequency":0.9,"openIssues":1,"issuesDistribution":0.9}},"score":{"final":0.775912299773709,"detail":{"quality":0.9995248552319843,"popularity":0.3602621635628135,"maintenance":0.999894531306083}}}