{"analyzedAt":"2021-08-15T07:48:49.956Z","collected":{"metadata":{"name":"@google-cloud/functions-framework","scope":"google-cloud","version":"1.9.0","description":"FaaS (Function as a service) framework for writing portable Node.js functions","date":"2021-06-25T18:49:18.925Z","author":{"name":"Google Inc."},"publisher":{"username":"google-wombot","email":"node-team-npm+wombot@google.com"},"maintainers":[{"username":"google-wombot","email":"node-team-npm+wombot@google.com"}],"repository":{"type":"git","url":"git+https://github.com/GoogleCloudPlatform/functions-framework-nodejs.git"},"links":{"npm":"https://www.npmjs.com/package/%40google-cloud%2Ffunctions-framework","homepage":"https://github.com/GoogleCloudPlatform/functions-framework-nodejs#readme","repository":"https://github.com/GoogleCloudPlatform/functions-framework-nodejs","bugs":"https://github.com/GoogleCloudPlatform/functions-framework-nodejs/issues"},"license":"Apache-2.0","dependencies":{"body-parser":"^1.18.3","express":"^4.16.4","minimist":"^1.2.5","on-finished":"^2.3.0","read-pkg-up":"^7.0.1","semver":"^7.3.5"},"devDependencies":{"@types/body-parser":"1.17.0","@types/express":"4.17.11","@types/minimist":"1.2.1","@types/mocha":"8.2.2","@types/node":"11.15.50","@types/on-finished":"2.3.1","@types/semver":"^7.3.6","@types/sinon":"^10.0.0","@types/supertest":"2.0.11","gts":"3.1.0","mocha":"8.3.2","power-assert":"1.6.1","sinon":"^10.0.0","supertest":"6.1.3","typescript":"4.2.3"},"releases":[{"from":"2021-07-16T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":0},{"from":"2021-05-17T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":3},{"from":"2021-02-16T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":3},{"from":"2020-08-15T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":3},{"from":"2019-08-16T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":12}],"hasTestScript":true,"hasSelectiveFiles":true,"readme":"# Functions Framework for Node.js [![Build Status](https://img.shields.io/endpoint.svg?url=https%3A%2F%2Factions-badge.atrox.dev%2FGoogleCloudPlatform%2Ffunctions-framework-nodejs%2Fbadge&style=flat)](https://actions-badge.atrox.dev/GoogleCloudPlatform/functions-framework-nodejs/goto) [![npm version](https://img.shields.io/npm/v/@google-cloud/functions-framework.svg)](https://www.npmjs.com/package/@google-cloud/functions-framework) [![npm downloads](https://img.shields.io/npm/dm/@google-cloud/functions-framework.svg)](https://npmcharts.com/compare/@google-cloud/functions-framework?minimal=true)\n\nAn open source FaaS (Function as a Service) framework based on [Express](https://expressjs.com/)\nfor writing portable Node.js functions -- brought to you by the Google Cloud Functions team.\n\nThe Functions Framework lets you write lightweight functions that run in many\ndifferent environments, including:\n\n*   [Google Cloud Functions](https://cloud.google.com/functions/)\n*   Your local development machine\n*   [Cloud Run and Cloud Run on GKE](https://cloud.google.com/run/)\n*   [Knative](https://github.com/knative/)-based environments\n\nThe framework allows you to go from:\n\n```js\n/**\n * Send \"Hello, World!\"\n * @param req https://expressjs.com/en/api.html#req\n * @param res https://expressjs.com/en/api.html#res\n */\nexports.helloWorld = (req, res) => {\n  res.send('Hello, World!');\n};\n```\n\nTo:\n\n```sh\ncurl http://my-url\n# Output: Hello, World!\n```\n\nAll without needing to worry about writing an HTTP server or complicated request\nhandling logic.\n\n> Watch [this video](https://youtu.be/yMEcyAkTliU?t=912) to learn more about the Node Functions Framework.\n\n## Features\n\n- Spin up a local development server for quick testing\n- Invoke a function in response to a request\n- Automatically unmarshal events conforming to the\n  [CloudEvents](https://cloudevents.io/) spec\n- Portable between serverless platforms\n\n## Installation\n\nAdd the Functions Framework to your `package.json` file using `npm`.\n\n```sh\nnpm install @google-cloud/functions-framework\n```\n\n## Quickstarts\n\n### Quickstart: Hello, World on your local machine\n\n1. Create an `index.js` file with the following contents:\n\n    ```js\n    exports.helloWorld = (req, res) => {\n      res.send('Hello, World');\n    };\n    ```\n\n1. Run the following command:\n\n    ```sh\n    npx @google-cloud/functions-framework --target=helloWorld\n    ```\n\n1. Open http://localhost:8080/ in your browser and see _Hello, World_.\n\n### Quickstart: Set up a new project\n\n1. Create a `package.json` file using `npm init`:\n\n    ```sh\n    npm init\n    ```\n\n1. Create an `index.js` file with the following contents:\n\n    ```js\n    exports.helloWorld = (req, res) => {\n      res.send('Hello, World');\n    };\n    ```\n\n1. Now install the Functions Framework:\n\n    ```sh\n    npm install @google-cloud/functions-framework\n    ```\n\n1. Add a `start` script to `package.json`, with configuration passed via\ncommand-line arguments:\n\n    ```js\n      \"scripts\": {\n        \"start\": \"functions-framework --target=helloWorld\"\n      }\n    ```\n\n1. Use `npm start` to start the built-in local development server:\n\n    ```sh\n    npm start\n    ...\n    Serving function...\n    Function: helloWorld\n    URL: http://localhost:8080/\n    ```\n\n1. Send requests to this function using `curl` from another terminal window:\n\n    ```sh\n    curl localhost:8080\n    # Output: Hello, World\n    ```\n\n### Quickstart: Build a Deployable Container\n\n1. Install [Docker](https://store.docker.com/search?type=edition&offering=community) and the [`pack` tool](https://buildpacks.io/docs/install-pack/).\n\n1. Build a container from your function using the Functions [buildpacks](https://github.com/GoogleCloudPlatform/buildpacks):\n\t\n    ```sh\n    pack build \\\n      --builder gcr.io/buildpacks/builder:v1 \\\n      --env GOOGLE_FUNCTION_SIGNATURE_TYPE=http \\\n      --env GOOGLE_FUNCTION_TARGET=helloWorld \\\n      my-first-function\n    ```\n\n1. Start the built container:\n    \n    ```sh\n    docker run --rm -p 8080:8080 my-first-function\n    # Output: Serving function...\n    ```\n\n1. Send requests to this function using `curl` from another terminal window:\n    \n    ```sh\n    curl localhost:8080\n    # Output: Hello, World!\n    ```\n\n## Run your function on serverless platforms\n\n### Google Cloud Functions\n\nThe\n[Node.js 10 runtime on Google Cloud Functions](https://cloud.google.com/functions/docs/concepts/nodejs-10-runtime)\nis based on the Functions Framework. On Cloud Functions, the Functions Framework\nis completely optional: if you don't add it to your `package.json`, it will be\ninstalled automatically.\n\nAfter you've written your function, you can simply deploy it from your local\nmachine using the `gcloud` command-line tool.\n[Check out the Cloud Functions quickstart](https://cloud.google.com/functions/docs/quickstart).\n\n### Cloud Run/Cloud Run on GKE\n\nOnce you've written your function, added the Functions Framework and updated your `start` script in `package.json`, all that's left is to create a container image. [Check out the Cloud Run quickstart](https://cloud.google.com/run/docs/quickstarts/build-and-deploy) for Node.js to create a container image and deploy it to Cloud Run. You'll write a `Dockerfile` when you build your container. This `Dockerfile` allows you to specify exactly what goes into your container (including custom binaries, a specific operating system, and more).\n\nIf you want even more control over the environment, you can [deploy your container image to Cloud Run on GKE](https://cloud.google.com/run/docs/quickstarts/prebuilt-deploy-gke). With Cloud Run on GKE, you can run your function on a GKE cluster, which gives you additional control over the environment (including use of GPU-based instances, longer timeouts and more).\n\n### Container environments based on Knative\n\nCloud Run and Cloud Run on GKE both implement the [Knative Serving API](https://www.knative.dev/docs/). The Functions Framework is designed to be compatible with Knative environments. Just build and deploy your container to a Knative environment.\n\n## Configure the Functions Framework\n\nYou can configure the Functions Framework using command-line flags or\nenvironment variables. If you specify both, the environment variable will be\nignored.\n\n| Command-line flag  | Environment variable      | Description                                                                                                                                                                                                      |\n| ------------------ | ------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `--port`           | `PORT`                    | The port on which the Functions Framework listens for requests. Default: `8080`                                                                                                                                  |\n| `--target`         | `FUNCTION_TARGET`         | The name of the exported function to be invoked in response to requests. Default: `function`                                                                                                                     |\n| `--signature-type` | `FUNCTION_SIGNATURE_TYPE` | The signature used when writing your function. Controls unmarshalling rules and determines which arguments are used to invoke your function. Default: `http`; accepted values: `http` or `event` or `cloudevent` |\n| `--source`         | `FUNCTION_SOURCE`         | The path to the directory of your function. Default: `cwd` (the current working directory)                                                                                                                       |\n\nYou can set command-line flags in your `package.json` via the `start` script.\nFor example:\n\n```js\n  \"scripts\": {\n    \"start\": \"functions-framework --target=helloWorld\"\n  }\n```\n\n## Enable Google Cloud Functions Events\n\nThe Functions Framework can unmarshall incoming\nGoogle Cloud Functions [event](https://cloud.google.com/functions/docs/concepts/events-triggers#events) payloads to `data` and `context` objects.\nThese will be passed as arguments to your function when it receives a request.\nNote that your function must use the `event`-style function signature:\n\n```js\nexports.helloEvents = (data, context) => {\n  console.log(data);\n  console.log(context);\n};\n```\n\nTo enable automatic unmarshalling, set the function signature type to `event`\nusing a command-line flag or an environment variable. By default, the HTTP\nsignature will be used and automatic event unmarshalling will be disabled.\n\nFor more details on this signature type, check out the Google Cloud Functions\ndocumentation on\n[background functions](https://cloud.google.com/functions/docs/writing/background#cloud_pubsub_example).\n\n## Enable CloudEvents\n\nThe Functions Framework can unmarshall incoming\n[CloudEvents](http://cloudevents.io) payloads to a `cloudevent` object.\nIt will be passed as an argument to your function when it receives a request.\nNote that your function must use the `cloudevent`-style function signature:\n\n```js\nexports.helloCloudEvents = (cloudevent) => {\n  console.log(cloudevent.specversion);\n  console.log(cloudevent.type);\n  console.log(cloudevent.source);\n  console.log(cloudevent.subject);\n  console.log(cloudevent.id);\n  console.log(cloudevent.time);\n  console.log(cloudevent.datacontenttype);\n};\n```\n\nTo enable CloudEvents, set the signature type to `cloudevent`. By default, the HTTP signature will be used and automatic event unmarshalling will be disabled.\n\nLearn how to use CloudEvents in this [guide](docs/cloudevents.md).\n\n## Advanced Docs\n\nMore advanced guides and docs can be found in the [`docs/` folder](docs/).\n\n## Contributing\n\nContributions to this library are welcome and encouraged. See\n[CONTRIBUTING](CONTRIBUTING.md) for more information on how to get started."},"npm":{"downloads":[{"from":"2021-08-14T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":86368},{"from":"2021-08-08T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":716932},{"from":"2021-07-16T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":2935832},{"from":"2021-05-17T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":8326534},{"from":"2021-02-16T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":16332752},{"from":"2020-08-15T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":33382914}],"dependentsCount":24,"starsCount":0},"github":{"starsCount":864,"forksCount":98,"subscribersCount":31,"issues":{"count":314,"openCount":12,"distribution":{"3600":52,"10800":27,"32400":14,"97200":32,"291600":33,"874800":56,"2624400":39,"7873200":35,"23619600":12,"70858800":13,"212576400":1},"isDisabled":false},"contributors":[{"username":"taeold","commitsCount":1},{"username":"jupemara","commitsCount":1},{"username":"sk-","commitsCount":1},{"username":"anandarao","commitsCount":1},{"username":"bcoe","commitsCount":1},{"username":"grayside","commitsCount":1},{"username":"lukasberger","commitsCount":6},{"username":"betacar","commitsCount":1},{"username":"captain-refactor","commitsCount":1},{"username":"stew-r","commitsCount":3},{"username":"renovate-bot","commitsCount":36},{"username":"steren","commitsCount":2},{"username":"arku","commitsCount":1},{"username":"rishisharma-google","commitsCount":4},{"username":"grant","commitsCount":42},{"username":"glenngbg","commitsCount":1},{"username":"matthewrobertson","commitsCount":10},{"username":"hdp617","commitsCount":33},{"username":"twistedpair","commitsCount":1},{"username":"naseemkullah","commitsCount":1},{"username":"kkm000","commitsCount":1},{"username":"swalkowski","commitsCount":5},{"username":"notsofunctional","commitsCount":1},{"username":"arbassic","commitsCount":1}],"commits":[{"from":"2021-08-08T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":2},{"from":"2021-07-16T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":2},{"from":"2021-05-17T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":17},{"from":"2021-02-16T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":39},{"from":"2020-08-15T00:00:00.000Z","to":"2021-08-15T00:00:00.000Z","count":66}]},"source":{"files":{"readmeSize":9988,"testsSize":18515,"hasChangelog":true},"badges":[{"urls":{"original":"https://img.shields.io/npm/v/@google-cloud/functions-framework.svg","shields":"https://img.shields.io/npm/v/@google-cloud/functions-framework.svg","content":"https://img.shields.io/npm/v/@google-cloud/functions-framework.json"},"info":{"service":"npm","type":"version","modifiers":{"type":"v"}}},{"urls":{"original":"https://img.shields.io/npm/dm/@google-cloud/functions-framework.svg","shields":"https://img.shields.io/npm/dm/@google-cloud/functions-framework.svg","content":"https://img.shields.io/npm/dm/@google-cloud/functions-framework.json"},"info":{"service":"npm","type":"downloads","modifiers":{"type":"dm"}}}],"linters":["eslint","prettier"],"outdatedDependencies":{"read-pkg-up":{"required":"^7.0.1","stable":"8.0.0","latest":"8.0.0"}}}},"evaluation":{"quality":{"carefulness":0.9999999999999999,"tests":0.6,"health":0.75,"branding":0.3},"popularity":{"communityInterest":1017,"downloadsCount":2775511.3333333335,"downloadsAcceleration":1419.6252663622545,"dependentsCount":24},"maintenance":{"releasesFrequency":0.9,"commitsFrequency":0.9,"openIssues":1,"issuesDistribution":0.9}},"score":{"final":0.7539373042917493,"detail":{"quality":0.9312429731313,"popularity":0.35600378970065816,"maintenance":0.999894531306083}}}