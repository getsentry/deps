{"analyzedAt":"2021-06-27T11:48:21.556Z","collected":{"metadata":{"name":"loader.js","scope":"unscoped","version":"4.7.0","description":"loader.js =========","keywords":["ember-addon"],"date":"2018-04-11T18:58:37.053Z","publisher":{"username":"stefanpenner","email":"stefan.penner@gmail.com"},"maintainers":[{"username":"ember-cli","email":"stefan.penner+ember-cli@gmail.com"},{"username":"kratiahuja","email":"kratiahuja@gmail.com"},{"username":"krisselden","email":"kris.selden@gmail.com"},{"username":"mmun","email":"im.mmun@gmail.com"},{"username":"rwjblue","email":"me@rwjblue.com"},{"username":"stefanpenner","email":"stefan.penner@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/ember-cli/loader.js.git"},"links":{"npm":"https://www.npmjs.com/package/loader.js","homepage":"https://github.com/ember-cli/loader.js","repository":"https://github.com/ember-cli/loader.js","bugs":"https://github.com/ember-cli/loader.js/issues"},"license":"MIT","devDependencies":{"ara":"0.0.3","babel-core":"^6.25.0","babel-plugin-transform-es2015-destructuring":"^6.23.0","babel6-plugin-strip-heimdall":"^6.0.1","heimdalljs":"^0.3.2","jscs":"^2.11.0","jshint":"^2.9.2","mkdirp":"^0.5.1","ora":"^0.2.1","promise-map-series":"^0.2.2","qunitjs":"^1.20.0","testem":"^1.0.0"},"releases":[{"from":"2021-05-28T00:00:00.000Z","to":"2021-06-27T00:00:00.000Z","count":0},{"from":"2021-03-29T00:00:00.000Z","to":"2021-06-27T00:00:00.000Z","count":0},{"from":"2020-12-29T00:00:00.000Z","to":"2021-06-27T00:00:00.000Z","count":0},{"from":"2020-06-27T00:00:00.000Z","to":"2021-06-27T00:00:00.000Z","count":0},{"from":"2019-06-28T00:00:00.000Z","to":"2021-06-27T00:00:00.000Z","count":0}],"hasTestScript":true,"hasSelectiveFiles":true,"readme":"loader.js [![Build Status](https://travis-ci.org/ember-cli/loader.js.svg?branch=master)](https://travis-ci.org/ember-cli/loader.js)\n=========\n\nMinimal AMD loader mostly stolen from [@wycats](https://github.com/wycats).\n\n## No Conflict\n\nTo prevent the loader from overriding `require`, `define`, or `requirejs` you can instruct the loader\nto use no conflict mode by providing it an alternative name for the various globals that are normally used.\n\nExample:\n\n```js\nloader.noConflict({\n  define: 'newDefine',\n  require: 'newRequire'\n});\n```\n\n## Extra stuff\n\n### `define.alias('old/path', 'new-name')`\n\n`define.alias` allows creation of a symlink from one module to another, for example:\n\n```js\ndefine('foo', [], () => 'hi');\ndefine.alias('foo', 'foo/bar/baz');\n\nrequire('foo/bar/baz') // => 'hi';\nrequire('foo') === require('foo/bar/baz');\n```\n\n### `require('require')`\n\nWhen within a module, one can require `require`. This provides a `require` scoped to the current module. Enabling dynamic, relatively path requires.\n\n```js\n\ndefine('foo/apple', ['require'], function() { return 'apple'; });\ndefine('foo/bar', ['require'], function(require){ return require('./apple'););\n\nrequire('foo/bar'); // 'apple';\n```\n\nThis scoped `require` also enables a module some reflection, in this case the ability for a module to see its own `moduleId`;\n\n```js\n\ndefine('my/name/is', ['require'], function(require) {\n  require.moduleId // => 'my/name/is';\n});\n```\n\n### `define.exports('foo', {})`\n\n`define.exports` enables a fastpath for non-lazy dependency-less modules, for example:\n\nRather then:\n\n```js\ndefine(\"my-foo-app/templates/application\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  exports.default = Ember.HTMLBars.template({ \"id\": \"VVZNWoRm\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"welcome-page\\\"]],false],[0,\\\"\\\\n\\\"],[0,\\\"\\\\n\\\"],[1,[26,[\\\"outlet\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"my-foo-app/templates/application.hbs\" } });\n});\n```\n\nWe can author:\n\n```js\ndefine.exports('my-app/template/apple', { hbs: true, \"id\": \"VVZNWoRm\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"welcome-page\\\"]],false],[0,\\\"\\\\n\\\"],[0,\\\"\\\\n\\\"],[1,[26,[\\\"outlet\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"my-foo-app/templates/application.hbs\" }});\n```\n\nbenefits:\n\n* less bytes\n* no reification step\n* no need to juggle pre-parse voodoo.\n\n### `require.unsee('foo');`\n\n`require.unsee` allows one to unload a given module. *note* The side-effects of that module cannot be unloaded.\nThis is quite useful, especially for test suites. Being able to unload run tests, mitigates many common memory leaks:\n\nexample:\n\n```js\ndefine('my-app/tests/foo-test.js', ['qunit'], function(qunit) {\n  let app;\n\n  qunit.module('my module', {\n    beforeEach() {\n      app = new App();\n    }\n\n    // forgot to `null` out app in the afterEach\n  });\n\n  test('my app exists', function(assert) {\n    assert.ok(app);\n  })\n})\n```\n\n---\n\nNote: To be able to take advantage of alternate `define` method name, you will also need to ensure that your\nbuild tooling generates using the alternate.  An example of this is done in the [emberjs-build](https://github.com/emberjs/emberjs-build)\nproject in the [babel-enifed-module-formatter plugin](https://github.com/emberjs/emberjs-build/blob/v0.4.2/lib/utils/babel-enifed-module-formatter.js).\n\n## wrapModules\n\nIt is possible to hook loader to augment or transform the loaded code.  `wrapModules` is an optional method on the loader that is called as each module is originally loaded.  `wrapModules` must be a function of the form `wrapModules(name, callback)`. The `callback` is the original AMD callback.  The return value of `wrapModules` is then used in subsequent requests for `name`\n\nThis functionality is useful for instrumenting code, for instance in code coverage libraries.\n\n```js\nloader.wrapModules = function(name, callback) {\n            if (shouldTransform(name) {\n                    return myTransformer(name, callback);\n                }\n            }\n            return callback;\n    };\n```\n\n## makeDefaultExport\n\nloader.js creates default exports for ember-cli `amdStrict` mode. If you do not need this behavior you can disable it like so:\n\n```js\nloader.makeDefaultExport = false;\n```\n\n## Tests\n\nWe use [testem](https://github.com/airportyh/testem) for running our test suite.\n\nYou may run them with:\n```sh\nnpm test\n```\n\nYou can also launch testem development mode with:\n```sh\nnpm run test:dev\n```\n\n## License\n\nloader.js is [MIT Licensed](https://github.com/ember-cli/loader.js/blob/master/LICENSE.md)."},"npm":{"downloads":[{"from":"2021-06-26T00:00:00.000Z","to":"2021-06-27T00:00:00.000Z","count":5287},{"from":"2021-06-20T00:00:00.000Z","to":"2021-06-27T00:00:00.000Z","count":123237},{"from":"2021-05-28T00:00:00.000Z","to":"2021-06-27T00:00:00.000Z","count":520501},{"from":"2021-03-29T00:00:00.000Z","to":"2021-06-27T00:00:00.000Z","count":1636790},{"from":"2020-12-29T00:00:00.000Z","to":"2021-06-27T00:00:00.000Z","count":3330375},{"from":"2020-06-27T00:00:00.000Z","to":"2021-06-27T00:00:00.000Z","count":6298079}],"dependentsCount":12,"starsCount":1},"github":{"starsCount":77,"forksCount":68,"subscribersCount":13,"issues":{"count":217,"openCount":26,"distribution":{"3600":62,"10800":15,"32400":18,"97200":16,"291600":11,"874800":7,"2624400":17,"7873200":28,"23619600":18,"70858800":8,"212576400":17},"isDisabled":false},"contributors":[{"username":"rwjblue","commitsCount":21},{"username":"statianzo","commitsCount":2},{"username":"jschiq2","commitsCount":1},{"username":"tricknotes","commitsCount":1},{"username":"krisselden","commitsCount":5},{"username":"yamadapc","commitsCount":1},{"username":"chadhietala","commitsCount":4},{"username":"2hu12","commitsCount":1},{"username":"lennyburdette","commitsCount":1},{"username":"sivakumar-kailasam","commitsCount":1},{"username":"nathanhammond","commitsCount":2},{"username":"olleolleolle","commitsCount":1},{"username":"brzpegasus","commitsCount":1},{"username":"tmquinn","commitsCount":3},{"username":"kratiahuja","commitsCount":4},{"username":"mmun","commitsCount":3},{"username":"dependabot[bot]","commitsCount":10},{"username":"abuiles","commitsCount":11},{"username":"bekzod","commitsCount":2},{"username":"ef4","commitsCount":5},{"username":"runspired","commitsCount":1},{"username":"Turbo87","commitsCount":9},{"username":"stefanpenner","commitsCount":87},{"username":"jrowlingson","commitsCount":1}],"commits":[{"from":"2021-06-20T00:00:00.000Z","to":"2021-06-27T00:00:00.000Z","count":0},{"from":"2021-05-28T00:00:00.000Z","to":"2021-06-27T00:00:00.000Z","count":1},{"from":"2021-03-29T00:00:00.000Z","to":"2021-06-27T00:00:00.000Z","count":1},{"from":"2020-12-29T00:00:00.000Z","to":"2021-06-27T00:00:00.000Z","count":2},{"from":"2020-06-27T00:00:00.000Z","to":"2021-06-27T00:00:00.000Z","count":5}],"statuses":[{"context":"continuous-integration/travis-ci/push","state":"success"}]},"source":{"files":{"readmeSize":4699,"testsSize":38758},"badges":[{"urls":{"original":"https://travis-ci.org/ember-cli/loader.js.svg?branch=master","service":"https://api.travis-ci.org/ember-cli/loader.js.svg?branch=master","shields":"https://img.shields.io/travis/ember-cli/loader.js/master.svg","content":"https://img.shields.io/travis/ember-cli/loader.js/master.json"},"info":{"service":"travis","type":"build","modifiers":{"branch":"master"}}}],"linters":["editorconfig","jscs","jshint"]}},"evaluation":{"quality":{"carefulness":0.9199999999999999,"tests":0.85,"health":1,"branding":0.15},"popularity":{"communityInterest":183,"downloadsCount":545596.6666666666,"downloadsAcceleration":335.5236872146115,"dependentsCount":12},"maintenance":{"releasesFrequency":0,"commitsFrequency":0.40753424657534243,"openIssues":1,"issuesDistribution":0}},"score":{"final":0.4820321395771292,"detail":{"quality":0.9554165595786436,"popularity":0.23174137103113207,"maintenance":0.3265648338361141}}}