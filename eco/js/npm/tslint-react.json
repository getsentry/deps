{"analyzedAt":"2021-08-04T04:45:04.384Z","collected":{"metadata":{"name":"tslint-react","scope":"unscoped","version":"5.0.0","description":"Lint rules related to React & JSX for TSLint","date":"2020-04-22T00:07:20.501Z","publisher":{"username":"palantir","email":"pt-vendor-npm@palantir.com"},"maintainers":[{"username":"palantir","email":"pt-vendor-npm@palantir.com"}],"repository":{"type":"git","url":"git+https://github.com/palantir/tslint-react.git"},"links":{"npm":"https://www.npmjs.com/package/tslint-react","homepage":"https://github.com/palantir/tslint-react#readme","repository":"https://github.com/palantir/tslint-react","bugs":"https://github.com/palantir/tslint-react/issues"},"license":"Apache-2.0","dependencies":{"tsutils":"^3.17.1"},"devDependencies":{"@types/glob":"^7.1.1","@types/node":"^11.11.3","colors":"^1.4.0","glob":"^7.1.6","npm-run-all":"^4.1.5","path":"^0.12.7","tslint":"^6.1.1","typescript-tslint-plugin":"^0.5.5","typescript":"~3.8.3"},"peerDependencies":{"tslint":"^6.0.0","typescript":">=3.4.1"},"releases":[{"from":"2021-07-05T00:00:00.000Z","to":"2021-08-04T00:00:00.000Z","count":0},{"from":"2021-05-06T00:00:00.000Z","to":"2021-08-04T00:00:00.000Z","count":0},{"from":"2021-02-05T00:00:00.000Z","to":"2021-08-04T00:00:00.000Z","count":0},{"from":"2020-08-04T00:00:00.000Z","to":"2021-08-04T00:00:00.000Z","count":0},{"from":"2019-08-05T00:00:00.000Z","to":"2021-08-04T00:00:00.000Z","count":4}],"deprecated":"tslint-react is deprecated along with TSLint","hasTestScript":true,"readme":"[![NPM version](https://badge.fury.io/js/tslint-react.svg)](https://www.npmjs.com/package/tslint-react)\n[![Downloads](http://img.shields.io/npm/dm/tslint-react.svg)](https://npmjs.org/package/tslint-react)\n[![Circle CI](https://circleci.com/gh/palantir/tslint-react.svg?style=svg)](https://circleci.com/gh/palantir/tslint-react)\n\ntslint-react\n------------\n\nLint rules related to React & JSX for [TSLint](https://github.com/palantir/tslint/).\n\n### Usage\n\ntslint-react has peer dependencies on TSLint and TypeScript.\n\nTo use these lint rules with the default preset, use configuration inheritance via the `extends` keyword.\nHere's a sample configuration where `tslint.json` lives adjacent to your `node_modules` folder:\n\n```js\n{\n  \"extends\": [\"tslint:latest\", \"tslint-react\"],\n  \"rules\": {\n    // override tslint-react rules here\n    \"jsx-wrap-multiline\": false\n  }\n}\n```\n\nTo lint your `.ts` **and** `.tsx` files you can simply run `tslint -c tslint.json 'src/**/*.{ts,tsx}'`.\n\n### Semantic versioning\n\nThe built-in configuration preset you get with `\"extends\": \"tslint-react\"` is semantically versioned in a manner similar to TSLint's built-in presets and the TypeScript language itself. As new rules are added to tslint-react across minor versions, stricter checks may be enabled here. Your code is not guaranteed to continue passing checks across these version bumps. If you wish to ensure that `npm upgrade` or `yarn upgrade` never breaks your build, declare a tilde dependency on this package (e.g. `\"~1.0.0\"`).\n\n### Rules\n\n- `jsx-alignment`\n  - Enforces a consistent style for multiline JSX elements which promotes ease of editing via line-wise manipulations\n  as well as maintainability via small diffs when changes are made.\n  ```ts\n  // Good:\n  const element = <div\n      className=\"foo\"\n      tabIndex={1}\n  >\n      {children}\n  </div>;\n\n  // Also Good:\n  <Button\n      appearance=\"pretty\"\n      disabled\n      label=\"Click Me\"\n      size={size}\n  />\n  ```\n- `jsx-ban-elements` (since v3.4.0)\n  - Allows blacklisting of JSX elements with an optional explanatory message in the reported failure.\n- `jsx-ban-props` (since v2.3.0)\n  - Allows blacklisting of props in JSX with an optional explanatory message in the reported failure.\n- `jsx-boolean-value` (since v2.5.0)\n  - When using a boolean attribute in JSX, you can set the attribute value to true or omit the value. This rule will enforce one or the other to keep consistency in your code.\n  - Rule options: `[\"always\", \"never\"]`\n  - Default is set to `always`.\n- `jsx-curly-spacing` (since v1.1.0)\n  - Requires _or_ bans spaces between curly brace characters in JSX.\n  - Rule options: `[\"always\", \"never\"]`\n  - _Includes automatic code fix_\n- `jsx-equals-spacing` (since v3.2.0)\n  - Requires _or_ bans spaces before and after the `=` token in JSX element attributes.\n  - Rule options: `[\"always\", \"never\"]`\n  - _Includes automatic code fix_\n- `jsx-key` (since v3.2.0)\n  - Warns for missing `key` props in JSX element array literals and inside return statements of `Array.prototype.map` callbacks.\n    - N.B. This rule only does a simple check for `.map(...)` syntax and does not inspect computed types of expressions. As such, it may produce false positives if you use APIs that look similar to `.map()`.\n  - Rule options: _none_\n- `jsx-no-bind` (since v2.6.0)\n  - Forbids function binding in JSX attributes. This has the same intent as `jsx-no-lambda` in helping you avoid excessive re-renders.\n  - Note that this currently only does a simple _syntactic_ check, not a _semantic_ one (it doesn't use the type checker). So it may have some\n    rare false positives if you define your own `.bind` function and supply `this` as a parameter.\n  - Rule options: _none_\n- `jsx-no-lambda`\n  - Creating new anonymous functions (with either the `function` syntax or ES2015 arrow syntax) inside the `render` call stack works against _pure component rendering_. When doing an equality check between two lambdas, React will always consider them unequal values and force the component to re-render more often than necessary.\n  - Rule options: _none_\n- `jsx-no-multiline-js`\n  - Disallows multiline JS expressions inside JSX blocks to promote readability\n  - Rule options: _none_\n- `jsx-no-string-ref`\n  - Passing strings to the `ref` prop of React elements is considered a legacy feature and will soon be deprecated.\n    Instead, [use a callback](https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute).\n  - Rule options: _none_\n- `jsx-use-translation-function` (since v2.4.0)\n   - Enforces use of a translation function. Plain string literals are disallowed in JSX when enabled.\n   - Rule options: `[\"allow-punctuation\", \"allow-htmlentities\"]`\n   - Off by default\n- `jsx-self-close` (since v0.4.0)\n  - Enforces that JSX elements with no children are self-closing.\n  - _Includes automatic code fix_\n  ```ts\n  // bad\n  <div className=\"foo\"></div>\n  // good\n  <div className=\"foo\" />\n  ```\n  - Rule options: _none_\n- `jsx-space-before-trailing-slash`\n  - Checks that self-closing JSX elements have a space before the '/>' part.\n  - Rule options: _none_\n  - _Includes automatic code fix_\n- `jsx-wrap-multiline` (since v2.1)\n  - Enforces that multiline JSX expressions are wrapped with parentheses.\n  - Opening parenthesis must be followed by a newline.\n  - Closing parenthesis must be preceded by a newline.\n  ```ts\n  // bad\n  const button = <button type=\"submit\">\n      Submit\n  </button>;\n  // good\n  const button = (\n      <button type=\"submit\">\n          Submit\n      </button>\n  );\n  ```\n\n### Development\n\nWe track rule suggestions on Github issues -- [here's a useful link](https://github.com/palantir/tslint-react/issues?q=is%3Aissue+is%3Aopen+label%3A%22Type%3A+Rule+Suggestion%22)\nto view all the current suggestions. Tickets are roughly triaged by priority (P1, P2, P3).\n\nWe're happy to accept PRs for new rules, especially those marked as [Status: Accepting PRs](https://github.com/palantir/tslint-react/issues?q=is%3Aissue+is%3Aopen+label%3A%22Status%3A+Accepting+PRs%22).\nIf submitting a PR, try to follow the same style conventions as the [core TSLint project](https://github.com/palantir/tslint).\n\nQuick Start (requires Node v6+, yarn v0.22+):\n\n1. `yarn`\n1. `yarn verify`\n1. `yarn lint`\n\n### Changelog\n\nSee the Github [release history](https://github.com/palantir/tslint-react/releases)."},"npm":{"downloads":[{"from":"2021-08-03T00:00:00.000Z","to":"2021-08-04T00:00:00.000Z","count":0},{"from":"2021-07-28T00:00:00.000Z","to":"2021-08-04T00:00:00.000Z","count":136528},{"from":"2021-07-05T00:00:00.000Z","to":"2021-08-04T00:00:00.000Z","count":881312},{"from":"2021-05-06T00:00:00.000Z","to":"2021-08-04T00:00:00.000Z","count":2870807},{"from":"2021-02-05T00:00:00.000Z","to":"2021-08-04T00:00:00.000Z","count":6353945},{"from":"2020-08-04T00:00:00.000Z","to":"2021-08-04T00:00:00.000Z","count":14743165}],"dependentsCount":660,"starsCount":1},"github":{"starsCount":746,"forksCount":80,"subscribersCount":184,"issues":{"count":227,"openCount":1,"distribution":{"3600":33,"10800":9,"32400":6,"97200":12,"291600":19,"874800":19,"2624400":18,"7873200":22,"23619600":27,"70858800":46,"212576400":16},"isDisabled":false},"contributors":[{"username":"tanmoyopenroot","commitsCount":3},{"username":"mohsen1","commitsCount":2},{"username":"andrewhathaway","commitsCount":1},{"username":"mDibyo","commitsCount":1},{"username":"jomasti","commitsCount":1},{"username":"IllusionMH","commitsCount":2},{"username":"suchanlee","commitsCount":1},{"username":"dryganets","commitsCount":1},{"username":"tiagoefmoraes","commitsCount":1},{"username":"longlho","commitsCount":1},{"username":"jeffwillette","commitsCount":1},{"username":"mpsijm","commitsCount":1},{"username":"ismail-syed","commitsCount":1},{"username":"enoshixi","commitsCount":3},{"username":"bolatovumar","commitsCount":3},{"username":"faninv","commitsCount":1},{"username":"OlafMerkert","commitsCount":1},{"username":"adidahiya","commitsCount":86},{"username":"lvillani","commitsCount":1},{"username":"no23reason","commitsCount":3},{"username":"praxxis","commitsCount":2},{"username":"cheeZery","commitsCount":1},{"username":"jaredpalmer","commitsCount":1},{"username":"heatherbooker","commitsCount":1},{"username":"testerez","commitsCount":1},{"username":"screendriver","commitsCount":1},{"username":"bookman25","commitsCount":1},{"username":"davidlipo","commitsCount":4},{"username":"vovanmozg","commitsCount":1},{"username":"markwongsk","commitsCount":2},{"username":"QuentinBouygues","commitsCount":1},{"username":"lukyth","commitsCount":1},{"username":"jkillian","commitsCount":15},{"username":"mikerite","commitsCount":1},{"username":"dmiller9911","commitsCount":1},{"username":"nmiyake","commitsCount":1},{"username":"nwolverson","commitsCount":1}],"commits":[{"from":"2021-07-28T00:00:00.000Z","to":"2021-08-04T00:00:00.000Z","count":0},{"from":"2021-07-05T00:00:00.000Z","to":"2021-08-04T00:00:00.000Z","count":0},{"from":"2021-05-06T00:00:00.000Z","to":"2021-08-04T00:00:00.000Z","count":0},{"from":"2021-02-05T00:00:00.000Z","to":"2021-08-04T00:00:00.000Z","count":0},{"from":"2020-08-04T00:00:00.000Z","to":"2021-08-04T00:00:00.000Z","count":0}],"statuses":[{"context":"ci/circleci: deploy-npm","state":"failure"},{"context":"ci/circleci: test-next","state":"success"},{"context":"ci/circleci: test","state":"success"},{"context":"ci/circleci: build","state":"success"},{"context":"ci/circleci: lint","state":"success"},{"context":"ci/circleci: install-dependencies","state":"success"}]},"source":{"files":{"readmeSize":6379,"testsSize":40605},"badges":[{"urls":{"original":"http://img.shields.io/npm/dm/tslint-react.svg","shields":"https://img.shields.io/npm/dm/tslint-react.svg","content":"https://img.shields.io/npm/dm/tslint-react.json"},"info":{"service":"npm","type":"downloads","modifiers":{"type":"dm"}}},{"urls":{"original":"https://circleci.com/gh/palantir/tslint-react.svg?style=svg","service":"https://circleci.com/gh/palantir/tslint-react.svg","shields":"https://img.shields.io/circleci/project/github/palantir/tslint-react.svg","content":"https://img.shields.io/circleci/project/github/palantir/tslint-react.json"},"info":{"service":"circleci","type":"build"}}],"linters":["tslint"]}},"evaluation":{"quality":{"carefulness":0,"tests":0.8083333333333333,"health":1,"branding":0.3},"popularity":{"communityInterest":1048,"downloadsCount":956935.6666666666,"downloadsAcceleration":-4026.926160578385,"dependentsCount":660},"maintenance":{"releasesFrequency":0.04931506849315069,"commitsFrequency":0,"openIssues":1,"issuesDistribution":0}},"score":{"final":0.3895850767777064,"detail":{"quality":0.6196448728524794,"popularity":0.364523296090026,"maintenance":0.2174527465441527}}}