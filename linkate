#!/usr/bin/env python3
import csv
import json
from collections import defaultdict

eco_map = {
    'js': 'JavaScript',
    'py': 'Python',
    'rs': 'Rust',
}

github = json.load(open('github.json'))
counts = {
    'ecos': defaultdict(set),
    'orgs': defaultdict(lambda: defaultdict(lambda: {'used_in': set(), 'projects': set()}))
}
urls = dict()
data = defaultdict(lambda: defaultdict(list))
for org, url, repo, stars, eco in csv.reader(open('deps.csv')):
    stars = int(stars)
    used_in = list(sorted(set(github[eco][org][repo]))) # hack to uniquify (psycopg2 shows up twice in sentry/requirements-base.txt)
    eco = eco_map.get(eco, eco)

    counts['ecos'][eco].add(org)
    counts['orgs'][eco][org]['used_in'] |= set(used_in)
    counts['orgs'][eco][org]['projects'].add(repo)
    urls[org] = url
    data[eco][org].append((len(used_in), stars, used_in, repo))

for eco in counts['ecos']:
    counts['ecos'][eco] = len(counts['ecos'][eco])
for eco in counts['orgs']:
    for org in counts['orgs'][eco]:
        nused_in = len(counts['orgs'][eco][org]['used_in'])
        nprojects = len(counts['orgs'][eco][org]['projects'])
        counts['orgs'][eco][org] = (nused_in, nprojects)

out = open('links.html', 'w+')
def p(*a, **kw):
    print(*a, **kw, file=out)

p('<html><head><link rel="stylesheet" href="links.css"></head><body><div class="ecos">')
for n, eco in reversed(sorted([(v,k) for k,v in counts['ecos'].items()])):
    p(f'<h1 class="pad">{eco} ({n})</h1>')
    p(f'<table class="orgs">')
    p(f'<thead><tr><th></th><th>Producer</th><th>Project</th></tr></thead>')
    for i, ((nused_in, nprojects), org) in enumerate(reversed(sorted([(v,k) for k,v in counts['orgs'][eco].items()])), start=1):
        url = urls[org]
        p(f'<tr class="org">')
        p(f'<td class="pad num i">{i}</td>')
        p(f'<td class="pad"><a href="{url}" target="_blank">{org}</a> ({nprojects})</td>')
        p(f'<td class="scroll"><table class="repos">')
        for j, (nused_in, stars, used_in, repo) in enumerate(reversed(sorted(data[eco][org]))):
            p(f'<tr>')
            p(f'<td class="pad"><a href="https://github.com/{org}/{repo}">{repo}</a> ({nused_in})<br>')
            for source in used_in:
                p(f'<div class="source">{source}</div>')
            p(f'</td>')
            p(f'<td class="pad num stars">â˜… {stars}</td>')
            p(f'</tr>')
        p(f'</table></td></tr>')
    p(f'</table>')
p('</div></body></html>')
