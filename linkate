#!/usr/bin/env python3
import csv
from collections import defaultdict

ecosystem_map = {
    'js': 'JavaScript',
    'py': 'Python',
    'rs': 'Ruby',
}

counts = {
    'ecosystems': defaultdict(int),
    'orgs': defaultdict(lambda: defaultdict(int))
}
data = defaultdict(lambda: defaultdict(list))
for org, repo, stars, ecosystem, used_by in csv.reader(open('deps.csv')):
    ecosystem = ecosystem_map.get(ecosystem, ecosystem)

    stars = int(stars)
    used_by = int(used_by)

    counts['ecosystems'][ecosystem] += 1
    counts['orgs'][ecosystem][org] += 1
    data[ecosystem][org].append((stars, used_by, repo))

print('<html><head><link rel="stylesheet" href="links.css"></head><body><div class="ecosystems">')
for n, ecosystem in reversed(sorted([(v,k) for k,v in counts['ecosystems'].items()])):
    print(f'<h1 class="pad">{ecosystem} ({n})</h1>')
    print(f'<table class="orgs">')
    for n, org in reversed(sorted([(v,k) for k,v in counts['orgs'][ecosystem].items()])):
        print(f'<tr class="org">')
        print(f'<td class="pad"><a href="https://github.com/sponsors/{org}" target="_blank">{org}</a> ({n})</td>')
        print(f'<td class="scroll"><table class="repos">')
        for i, (stars, used_by, repo) in enumerate(reversed(sorted(data[ecosystem][org]))):
            print(f'<tr>')
            print(f'<td class="pad"><a href="https://github.com/{org}/{repo}">{repo}</a></td>')
            print(f'<td class="pad num">{stars}</td>')
            print(f'<td class="pad num">{used_by}</td>')
            print(f'</tr>')
            if i == 4:
                if i+i < n:
                    print(f'<tr>')
                    print(f'<td class="pad">...</td>')
                    print(f'<td class="pad num">...</td>')
                    print(f'<td class="pad num">...</td>')
                    print(f'</tr>')
                break
        print(f'</table></td></tr>')
    print(f'</table>')
print('</div></body></html>')
